{
  "version": 3,
  "sources": ["../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../node_modules/use-sync-external-store/shim/index.js", "../../node_modules/@tagaddod-design/react/dist/index.js", "../../node_modules/clsx/dist/clsx.mjs", "../../node_modules/@radix-ui/react-form/src/form.tsx", "../../node_modules/@radix-ui/react-label/src/label.tsx", "../../node_modules/@radix-ui/react-checkbox/src/checkbox.tsx", "../../node_modules/@radix-ui/react-tabs/src/tabs.tsx", "../../node_modules/@radix-ui/react-dialog/src/dialog.tsx", "../../node_modules/@radix-ui/react-avatar/src/avatar.tsx", "../../node_modules/@radix-ui/react-use-is-hydrated/src/use-is-hydrated.tsx", "../../node_modules/@radix-ui/react-popover/src/popover.tsx", "../../node_modules/@tanstack/table-core/src/columnHelper.ts", "../../node_modules/@tanstack/table-core/src/utils.ts", "../../node_modules/@tanstack/table-core/src/core/cell.ts", "../../node_modules/@tanstack/table-core/src/core/column.ts", "../../node_modules/@tanstack/table-core/src/core/headers.ts", "../../node_modules/@tanstack/table-core/src/core/row.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnFaceting.ts", "../../node_modules/@tanstack/table-core/src/filterFns.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnFiltering.ts", "../../node_modules/@tanstack/table-core/src/aggregationFns.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnGrouping.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnOrdering.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnPinning.ts", "../../node_modules/@tanstack/table-core/src/utils/document.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnSizing.ts", "../../node_modules/@tanstack/table-core/src/features/ColumnVisibility.ts", "../../node_modules/@tanstack/table-core/src/features/GlobalFaceting.ts", "../../node_modules/@tanstack/table-core/src/features/GlobalFiltering.ts", "../../node_modules/@tanstack/table-core/src/features/RowExpanding.ts", "../../node_modules/@tanstack/table-core/src/features/RowPagination.ts", "../../node_modules/@tanstack/table-core/src/features/RowPinning.ts", "../../node_modules/@tanstack/table-core/src/features/RowSelection.ts", "../../node_modules/@tanstack/table-core/src/sortingFns.ts", "../../node_modules/@tanstack/table-core/src/features/RowSorting.ts", "../../node_modules/@tanstack/table-core/src/core/table.ts", "../../node_modules/@tanstack/table-core/src/utils/getCoreRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getExpandedRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getFacetedMinMaxValues.ts", "../../node_modules/@tanstack/table-core/src/utils/filterRowsUtils.ts", "../../node_modules/@tanstack/table-core/src/utils/getFacetedRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getFacetedUniqueValues.ts", "../../node_modules/@tanstack/table-core/src/utils/getFilteredRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getGroupedRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getPaginationRowModel.ts", "../../node_modules/@tanstack/table-core/src/utils/getSortedRowModel.ts", "../../node_modules/@tanstack/react-table/src/index.tsx", "../../node_modules/@radix-ui/react-switch/src/switch.tsx", "../../node_modules/@radix-ui/react-select/src/select.tsx", "../../node_modules/@radix-ui/number/src/number.ts", "../../node_modules/@radix-ui/react-radio-group/src/radio-group.tsx", "../../node_modules/@radix-ui/react-radio-group/src/radio.tsx"],
  "sourcesContent": ["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "import { jsx, jsxs, Fragment } from \"react/jsx-runtime\";\nimport clsx from \"clsx\";\nimport * as React__default from \"react\";\nimport React__default__default, { forwardRef, useState, useEffect, useLayoutEffect, useMemo, useRef, createContext, useContext } from \"react\";\nimport { IconLoader2, IconExclamationCircle, IconX, IconEyeOff, IconEye, IconMinus, IconCheck, IconAlertCircle, IconArrowRight, IconArrowLeft, IconChevronLeft, IconChevronRight, IconUser, IconPlus, IconChevronDown, IconSearch, IconAdjustmentsHorizontal, IconFileExport, IconHelp, IconArrowUp, IconArrowDown, IconPackageOff, IconCloudOff, IconChevronUp } from \"@tabler/icons-react\";\nimport * as Form from \"@radix-ui/react-form\";\nimport * as RadixCheckbox from \"@radix-ui/react-checkbox\";\nimport * as RadixTabs from \"@radix-ui/react-tabs\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport * as RadixAvatar from \"@radix-ui/react-avatar\";\nimport * as RadixPopover from \"@radix-ui/react-popover\";\nimport { useReactTable, getPaginationRowModel, getFilteredRowModel, getSortedRowModel, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nconst button = \"Button-module__button___2ZuB7\";\nconst sizeLarge$4 = \"Button-module__sizeLarge___yeZSH\";\nconst sizeMedium$4 = \"Button-module__sizeMedium___JL16K\";\nconst sizeMicro$2 = \"Button-module__sizeMicro___rCIpN\";\nconst fullWidth$2 = \"Button-module__fullWidth___36oJT\";\nconst iconOnly = \"Button-module__iconOnly___WCpTS\";\nconst variantPrimary$2 = \"Button-module__variantPrimary___0MHMq\";\nconst variantSecondary$2 = \"Button-module__variantSecondary___-ltng\";\nconst variantTertiary$1 = \"Button-module__variantTertiary___iiL5u\";\nconst variantPlain$1 = \"Button-module__variantPlain___3kaef\";\nconst toneCritical$2 = \"Button-module__toneCritical___GZ4xI\";\nconst toneSuccess$2 = \"Button-module__toneSuccess___9D60m\";\nconst toneNeutral$1 = \"Button-module__toneNeutral___1QRK2\";\nconst toneMagic$1 = \"Button-module__toneMagic___-c7U1\";\nconst loading$1 = \"Button-module__loading___EQAt2\";\nconst loadingWrapper = \"Button-module__loadingWrapper___Lqh6y\";\nconst spinner = \"Button-module__spinner___ZExvW\";\nconst spin = \"Button-module__spin___JvkZu\";\nconst label$5 = \"Button-module__label___UJ3Zt\";\nconst loadingText = \"Button-module__loadingText___7VzSf\";\nconst prefixIcon = \"Button-module__prefixIcon___9uetD\";\nconst suffixIcon = \"Button-module__suffixIcon___GXAIx\";\nconst styles$g = {\n  button,\n  sizeLarge: sizeLarge$4,\n  sizeMedium: sizeMedium$4,\n  sizeMicro: sizeMicro$2,\n  fullWidth: fullWidth$2,\n  iconOnly,\n  variantPrimary: variantPrimary$2,\n  variantSecondary: variantSecondary$2,\n  variantTertiary: variantTertiary$1,\n  variantPlain: variantPlain$1,\n  toneCritical: toneCritical$2,\n  toneSuccess: toneSuccess$2,\n  toneNeutral: toneNeutral$1,\n  toneMagic: toneMagic$1,\n  loading: loading$1,\n  loadingWrapper,\n  spinner,\n  spin,\n  label: label$5,\n  loadingText,\n  prefixIcon,\n  suffixIcon\n};\nconst buttonVariants = [\"primary\", \"secondary\", \"tertiary\", \"plain\"];\nconst buttonTones = [\"default\", \"critical\", \"success\", \"neutral\", \"magic\"];\nconst buttonSizes = [\"large\", \"medium\", \"micro\"];\nconst Button = forwardRef(({\n  children,\n  variant = \"primary\",\n  tone = \"default\",\n  size = \"medium\",\n  loading: loading2 = false,\n  disabled: disabled2 = false,\n  fullWidth: fullWidth2 = false,\n  prefixIcon: prefixIcon2,\n  suffixIcon: suffixIcon2,\n  className = \"\",\n  ...props\n}, ref) => {\n  const isIconOnly = !children && (prefixIcon2 || suffixIcon2);\n  const iconOnly2 = isIconOnly ? styles$g.iconOnly : \"\";\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const buttonClasses = clsx(\n    styles$g.button,\n    styles$g[`variant${variant.charAt(0).toUpperCase() + variant.slice(1)}`],\n    styles$g[`tone${tone.charAt(0).toUpperCase() + tone.slice(1)}`],\n    styles$g[`size${size.charAt(0).toUpperCase() + size.slice(1)}`],\n    fullWidth2 && styles$g.fullWidth,\n    loading2 && styles$g.loading,\n    iconOnly2,\n    className\n  );\n  const renderContent = () => {\n    if (loading2) {\n      return /* @__PURE__ */ jsxs(\"span\", { className: styles$g.loadingWrapper, children: [\n        /* @__PURE__ */ jsx(IconLoader2, { className: styles$g.spinner }),\n        !isIconOnly && /* @__PURE__ */ jsx(\"span\", { className: styles$g.loadingText, style: lineHeightStyle, children: isRTL ? \"جارٍ التحميل...\" : \"Loading...\" })\n      ] });\n    }\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      prefixIcon2 && /* @__PURE__ */ jsx(\"span\", { className: styles$g.prefixIcon, children: prefixIcon2 }),\n      children && /* @__PURE__ */ jsx(\"span\", { className: styles$g.label, style: lineHeightStyle, children }),\n      suffixIcon2 && /* @__PURE__ */ jsx(\"span\", { className: styles$g.suffixIcon, children: suffixIcon2 })\n    ] });\n  };\n  return /* @__PURE__ */ jsx(\n    \"button\",\n    {\n      ref,\n      className: buttonClasses,\n      disabled: disabled2 || loading2,\n      type: props.type || \"button\",\n      ...props,\n      children: renderContent()\n    }\n  );\n});\nButton.displayName = \"Button\";\nconst container$3 = \"TextInput-module__container___W-Bjk\";\nconst fullWidth$1 = \"TextInput-module__fullWidth___AMPyY\";\nconst labelContainer$2 = \"TextInput-module__labelContainer___1VMuT\";\nconst label$4 = \"TextInput-module__label___JY3GX\";\nconst required$2 = \"TextInput-module__required___7j2Rq\";\nconst optional$1 = \"TextInput-module__optional___I-mGl\";\nconst inputWrapper = \"TextInput-module__inputWrapper___mGu9t\";\nconst input = \"TextInput-module__input___gzKqV\";\nconst disabled$6 = \"TextInput-module__disabled___BnT6i\";\nconst readOnly = \"TextInput-module__readOnly___e4xKA\";\nconst prefix$2 = \"TextInput-module__prefix___jHjm2\";\nconst suffix$1 = \"TextInput-module__suffix___JBtI1\";\nconst withPrefix = \"TextInput-module__withPrefix___WEsI0\";\nconst withSuffix = \"TextInput-module__withSuffix___YD7RE\";\nconst sizeMicro$1 = \"TextInput-module__sizeMicro___c3Gl9\";\nconst sizeMedium$3 = \"TextInput-module__sizeMedium___ZiyWJ\";\nconst sizeLarge$3 = \"TextInput-module__sizeLarge___l490L\";\nconst iconButton = \"TextInput-module__iconButton___D5JKa\";\nconst error$2 = \"TextInput-module__error___IzapV\";\nconst errorMessage$2 = \"TextInput-module__errorMessage___-LUDU\";\nconst errorIcon$2 = \"TextInput-module__errorIcon___O3oOI\";\nconst helpText$3 = \"TextInput-module__helpText___qOZO7\";\nconst styles$f = {\n  container: container$3,\n  fullWidth: fullWidth$1,\n  labelContainer: labelContainer$2,\n  label: label$4,\n  required: required$2,\n  optional: optional$1,\n  inputWrapper,\n  input,\n  disabled: disabled$6,\n  readOnly,\n  prefix: prefix$2,\n  suffix: suffix$1,\n  withPrefix,\n  withSuffix,\n  sizeMicro: sizeMicro$1,\n  sizeMedium: sizeMedium$3,\n  sizeLarge: sizeLarge$3,\n  iconButton,\n  error: error$2,\n  errorMessage: errorMessage$2,\n  errorIcon: errorIcon$2,\n  helpText: helpText$3\n};\nconst TextInput = forwardRef(\n  ({\n    label: label2,\n    name,\n    id,\n    value: value2,\n    defaultValue,\n    placeholder,\n    helpText: helpText2,\n    errorMessage: errorMessage2,\n    required: required2,\n    disabled: disabled2,\n    readOnly: readOnly2,\n    className,\n    size = \"medium\",\n    fullWidth: fullWidth2 = false,\n    hideLabel = false,\n    optional: optional2 = false,\n    prefix: prefix2,\n    suffix: suffix2,\n    clearable = false,\n    onClear,\n    type = \"text\",\n    onChange,\n    ...props\n  }, ref) => {\n    const [inputValue, setInputValue] = useState(\"\");\n    const [passwordVisible, setPasswordVisible] = useState(false);\n    const uniqueId = id || `text-input-${Math.random().toString(36).substr(2, 9)}`;\n    const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n    const lineHeightStyle = {\n      lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n    };\n    useEffect(() => {\n      if (value2 !== void 0) {\n        setInputValue(String(value2));\n      }\n    }, [value2]);\n    const handleChange = (e) => {\n      setInputValue(e.target.value);\n      onChange == null ? void 0 : onChange(e);\n    };\n    const handleClear = () => {\n      setInputValue(\"\");\n      const syntheticEvent = {\n        target: { value: \"\", name },\n        currentTarget: { value: \"\", name }\n      };\n      onChange == null ? void 0 : onChange(syntheticEvent);\n      onClear == null ? void 0 : onClear();\n    };\n    const togglePasswordVisibility = () => {\n      setPasswordVisible(!passwordVisible);\n    };\n    const actualType = type === \"password\" && passwordVisible ? \"text\" : type;\n    const passwordSuffix = type === \"password\" ? /* @__PURE__ */ jsx(\n      \"button\",\n      {\n        type: \"button\",\n        className: styles$f.iconButton,\n        onClick: togglePasswordVisibility,\n        \"aria-label\": passwordVisible ? \"Hide password\" : \"Show password\",\n        tabIndex: -1,\n        children: passwordVisible ? /* @__PURE__ */ jsx(IconEyeOff, { size: 18 }) : /* @__PURE__ */ jsx(IconEye, { size: 18 })\n      }\n    ) : null;\n    const clearButton = clearable && inputValue ? /* @__PURE__ */ jsx(\n      \"button\",\n      {\n        type: \"button\",\n        className: styles$f.iconButton,\n        onClick: handleClear,\n        \"aria-label\": \"Clear input\",\n        tabIndex: -1,\n        children: /* @__PURE__ */ jsx(IconX, { size: 18 })\n      }\n    ) : null;\n    const combinedSuffix = /* @__PURE__ */ jsxs(Fragment, { children: [\n      suffix2,\n      passwordSuffix,\n      clearButton\n    ] });\n    const hasError = !!errorMessage2;\n    const sizeClass = `size${size.charAt(0).toUpperCase() + size.slice(1)}`;\n    return /* @__PURE__ */ jsx(\n      Form.Root,\n      {\n        className: clsx(\n          styles$f.container,\n          hasError && styles$f.error,\n          styles$f[sizeClass],\n          fullWidth2 && styles$f.fullWidth,\n          className\n        ),\n        children: /* @__PURE__ */ jsxs(Form.Field, { name: name || \"text-field\", children: [\n          label2 && !hideLabel && /* @__PURE__ */ jsx(\"div\", { className: styles$f.labelContainer, children: /* @__PURE__ */ jsxs(Form.Label, { className: styles$f.label, style: lineHeightStyle, children: [\n            label2,\n            required2 && /* @__PURE__ */ jsx(\"span\", { className: styles$f.required, children: \"*\" }),\n            optional2 && /* @__PURE__ */ jsx(\"span\", { className: styles$f.optional, children: \"(Optional)\" })\n          ] }) }),\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: clsx(\n                styles$f.inputWrapper,\n                disabled2 && styles$f.disabled,\n                readOnly2 && styles$f.readOnly\n              ),\n              children: [\n                prefix2 && /* @__PURE__ */ jsx(\"div\", { className: styles$f.prefix, children: prefix2 }),\n                /* @__PURE__ */ jsx(Form.Control, { asChild: true, children: /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    ref,\n                    id: uniqueId,\n                    className: clsx(\n                      styles$f.input,\n                      prefix2 && styles$f.withPrefix,\n                      (suffix2 || clearButton || passwordSuffix) && styles$f.withSuffix\n                    ),\n                    name,\n                    value: value2 === void 0 ? inputValue : value2,\n                    placeholder,\n                    required: required2,\n                    disabled: disabled2,\n                    readOnly: readOnly2,\n                    type: actualType,\n                    onChange: handleChange,\n                    \"aria-invalid\": hasError,\n                    \"aria-describedby\": `${uniqueId}-helptext ${uniqueId}-error`,\n                    ...props\n                  }\n                ) }),\n                (suffix2 || clearButton || passwordSuffix) && /* @__PURE__ */ jsx(\"div\", { className: styles$f.suffix, children: combinedSuffix })\n              ]\n            }\n          ),\n          hasError ? /* @__PURE__ */ jsxs(\"div\", { id: `${uniqueId}-error`, className: styles$f.errorMessage, style: lineHeightStyle, children: [\n            /* @__PURE__ */ jsx(IconExclamationCircle, { size: 16, className: styles$f.errorIcon }),\n            errorMessage2\n          ] }) : helpText2 ? /* @__PURE__ */ jsx(\"div\", { id: `${uniqueId}-helptext`, className: styles$f.helpText, style: lineHeightStyle, children: helpText2 }) : null\n        ] })\n      }\n    );\n  }\n);\nTextInput.displayName = \"TextInput\";\nconst textInputSizes = [\"micro\", \"medium\", \"large\"];\nconst container$2 = \"Checkbox-module__container___aV9qz\";\nconst checkboxWrapper = \"Checkbox-module__checkboxWrapper___V7D-e\";\nconst checkbox = \"Checkbox-module__checkbox___lSeQj\";\nconst indicator = \"Checkbox-module__indicator___VIxRX\";\nconst label$3 = \"Checkbox-module__label___cwRtI\";\nconst required$1 = \"Checkbox-module__required___t9DLN\";\nconst disabled$5 = \"Checkbox-module__disabled___x7-eg\";\nconst srOnly$1 = \"Checkbox-module__srOnly___cipCI\";\nconst helpText$2 = \"Checkbox-module__helpText___Sgu7-\";\nconst errorMessage$1 = \"Checkbox-module__errorMessage___qPEEq\";\nconst errorIcon$1 = \"Checkbox-module__errorIcon___RfaVw\";\nconst error$1 = \"Checkbox-module__error___E-bmD\";\nconst icon$3 = \"Checkbox-module__icon___-O7i6\";\nconst styles$e = {\n  container: container$2,\n  checkboxWrapper,\n  checkbox,\n  indicator,\n  label: label$3,\n  required: required$1,\n  disabled: disabled$5,\n  srOnly: srOnly$1,\n  helpText: helpText$2,\n  errorMessage: errorMessage$1,\n  errorIcon: errorIcon$1,\n  error: error$1,\n  icon: icon$3\n};\nconst Checkbox = forwardRef(\n  ({\n    label: label2,\n    checked,\n    defaultChecked,\n    helpText: helpText2,\n    error: error2,\n    disabled: disabled2 = false,\n    hideLabel = false,\n    onCheckedChange,\n    id,\n    name,\n    required: required2 = false,\n    className\n  }, ref) => {\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n    const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n    const lineHeightStyle = {\n      lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n    };\n    return /* @__PURE__ */ jsxs(\n      \"div\",\n      {\n        className: clsx(\n          styles$e.container,\n          error2 && styles$e.error,\n          disabled2 && styles$e.disabled,\n          className\n        ),\n        children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: styles$e.checkboxWrapper, children: [\n            /* @__PURE__ */ jsx(\n              RadixCheckbox.Root,\n              {\n                id: checkboxId,\n                ref,\n                name,\n                checked,\n                defaultChecked,\n                onCheckedChange,\n                disabled: disabled2,\n                required: required2,\n                className: clsx(\n                  styles$e.checkbox,\n                  error2 && styles$e.error\n                ),\n                children: /* @__PURE__ */ jsx(RadixCheckbox.Indicator, { className: styles$e.indicator, children: checked === \"indeterminate\" ? /* @__PURE__ */ jsx(IconMinus, { size: 14, className: styles$e.icon }) : /* @__PURE__ */ jsx(IconCheck, { size: 14, className: styles$e.icon }) })\n              }\n            ),\n            label2 && /* @__PURE__ */ jsxs(\n              \"label\",\n              {\n                htmlFor: checkboxId,\n                className: clsx(\n                  styles$e.label,\n                  hideLabel && styles$e.srOnly\n                ),\n                style: lineHeightStyle,\n                children: [\n                  label2,\n                  required2 && /* @__PURE__ */ jsx(\"span\", { className: styles$e.required, children: \"*\" })\n                ]\n              }\n            )\n          ] }),\n          error2 ? /* @__PURE__ */ jsxs(\"div\", { className: styles$e.errorMessage, style: lineHeightStyle, children: [\n            /* @__PURE__ */ jsx(IconAlertCircle, { size: 20, className: styles$e.errorIcon }),\n            error2\n          ] }) : helpText2 ? /* @__PURE__ */ jsx(\"div\", { className: styles$e.helpText, style: lineHeightStyle, children: helpText2 }) : null\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\nconst RadioGroup$1 = \"RadioButton-module__RadioGroup___S965F\";\nconst RadioButtonContainer = \"RadioButton-module__RadioButtonContainer___OEsby\";\nconst RadioButtonWrapper = \"RadioButton-module__RadioButtonWrapper___9i9uw\";\nconst RadioButtonItem$1 = \"RadioButton-module__RadioButtonItem___Hth7M\";\nconst RadioButtonIndicator = \"RadioButton-module__RadioButtonIndicator___63kzg\";\nconst Label = \"RadioButton-module__Label___31zJ5\";\nconst srOnly = \"RadioButton-module__srOnly___ArAU4\";\nconst HelpText = \"RadioButton-module__HelpText___xrMzU\";\nconst disabled$4 = \"RadioButton-module__disabled___thDlK\";\nconst styles$d = {\n  RadioGroup: RadioGroup$1,\n  RadioButtonContainer,\n  RadioButtonWrapper,\n  RadioButtonItem: RadioButtonItem$1,\n  RadioButtonIndicator,\n  Label,\n  srOnly,\n  HelpText,\n  disabled: disabled$4\n};\nconst RadioGroup = React__default.forwardRef(({ className, ...props }, ref) => {\n  return /* @__PURE__ */ jsx(\n    RadioGroupPrimitive.Root,\n    {\n      className: clsx(styles$d.RadioGroup, className),\n      ...props,\n      ref\n    }\n  );\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\nconst RadioButtonItem = React__default.forwardRef(({\n  className,\n  label: label2,\n  helpText: helpText2,\n  showHelpText = true,\n  hideLabel = false,\n  ...props\n}, ref) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles$d.RadioButtonContainer, children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: styles$d.RadioButtonWrapper, children: [\n      /* @__PURE__ */ jsx(\n        RadioGroupPrimitive.Item,\n        {\n          ref,\n          className: clsx(\n            styles$d.RadioButtonItem,\n            props.disabled && styles$d.disabled,\n            className\n          ),\n          ...props,\n          children: /* @__PURE__ */ jsx(RadioGroupPrimitive.Indicator, { className: styles$d.RadioButtonIndicator })\n        }\n      ),\n      label2 && /* @__PURE__ */ jsx(\n        \"label\",\n        {\n          htmlFor: props.id,\n          className: clsx(\n            styles$d.Label,\n            props.disabled && styles$d.disabled,\n            hideLabel && styles$d.srOnly\n          ),\n          style: lineHeightStyle,\n          children: label2\n        }\n      )\n    ] }),\n    helpText2 && showHelpText && /* @__PURE__ */ jsx(\"div\", { className: styles$d.HelpText, style: lineHeightStyle, children: helpText2 })\n  ] });\n});\nRadioButtonItem.displayName = \"RadioButtonItem\";\nconst tabsRoot = \"Tabs-module__tabsRoot___fTeXX\";\nconst tabsList$1 = \"Tabs-module__tabsList___Vxh97\";\nconst fitted = \"Tabs-module__fitted___g0oKn\";\nconst tabsTrigger = \"Tabs-module__tabsTrigger___TgjSA\";\nconst tabsLabel = \"Tabs-module__tabsLabel___2WHUn\";\nconst tabsIcon = \"Tabs-module__tabsIcon___jkzCK\";\nconst tabsBadge = \"Tabs-module__tabsBadge___6JFe4\";\nconst variantPrimary$1 = \"Tabs-module__variantPrimary___IAgun\";\nconst tabsTriggerHover = \"Tabs-module__tabsTriggerHover___vkGsM\";\nconst slideIn = \"Tabs-module__slideIn___myE-8\";\nconst variantSecondary$1 = \"Tabs-module__variantSecondary___jhjwS\";\nconst scaleIn = \"Tabs-module__scaleIn___LsHyz\";\nconst tabsContent = \"Tabs-module__tabsContent___AEu4A\";\nconst fadeIn$2 = \"Tabs-module__fadeIn___BTm7B\";\nconst count2 = \"Tabs-module__count2___FwELg\";\nconst count3 = \"Tabs-module__count3___05M41\";\nconst count4 = \"Tabs-module__count4___6P02V\";\nconst count5 = \"Tabs-module__count5___xaWyb\";\nconst count6 = \"Tabs-module__count6___cXKup\";\nconst slideInVertical = \"Tabs-module__slideInVertical___cyRZN\";\nconst styles$c = {\n  tabsRoot,\n  tabsList: tabsList$1,\n  fitted,\n  tabsTrigger,\n  tabsLabel,\n  tabsIcon,\n  tabsBadge,\n  variantPrimary: variantPrimary$1,\n  tabsTriggerHover,\n  slideIn,\n  variantSecondary: variantSecondary$1,\n  scaleIn,\n  tabsContent,\n  fadeIn: fadeIn$2,\n  count2,\n  count3,\n  count4,\n  count5,\n  count6,\n  slideInVertical\n};\nconst Tabs = forwardRef(({\n  variant = \"primary\",\n  fitted: fitted2 = false,\n  count: count7 = 2,\n  dir,\n  orientation = \"horizontal\",\n  children,\n  className,\n  listClassName,\n  ariaLabel,\n  ariaLabelledby,\n  ...props\n}, ref) => {\n  const isRTL = dir === \"rtl\" || document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const childrenArray = React__default__default.Children.toArray(children);\n  const tabsList2 = childrenArray.find(\n    (child) => React__default__default.isValidElement(child) && child.type === TabsList\n  );\n  const tabsContent2 = childrenArray.filter(\n    (child) => React__default__default.isValidElement(child) && child.type === TabsContent\n  );\n  const listProps = {};\n  if (ariaLabel) {\n    listProps[\"aria-label\"] = ariaLabel;\n  }\n  if (ariaLabelledby) {\n    listProps[\"aria-labelledby\"] = ariaLabelledby;\n  }\n  return /* @__PURE__ */ jsxs(\n    RadixTabs.Root,\n    {\n      ref,\n      className: clsx(\n        styles$c.tabsRoot,\n        styles$c[`variant${variant.charAt(0).toUpperCase() + variant.slice(1)}`],\n        fitted2 && styles$c.fitted,\n        styles$c[`count${count7}`],\n        className\n      ),\n      dir,\n      orientation,\n      ...props,\n      children: [\n        tabsList2 && /* @__PURE__ */ jsx(\n          RadixTabs.List,\n          {\n            className: clsx(\n              styles$c.tabsList,\n              listClassName\n            ),\n            style: lineHeightStyle,\n            ...listProps,\n            children: tabsList2\n          }\n        ),\n        tabsContent2\n      ]\n    }\n  );\n});\nTabs.displayName = \"Tabs\";\nconst TabsList = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nTabsList.displayName = \"TabsList\";\nconst TabsTrigger = forwardRef(({\n  className,\n  badge: badge2,\n  icon: icon2,\n  children,\n  description,\n  ...props\n}, ref) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const descriptionId = description ? `tabs-desc-${React__default__default.useId()}` : void 0;\n  return /* @__PURE__ */ jsxs(\n    RadixTabs.Trigger,\n    {\n      ref,\n      className: clsx(\n        styles$c.tabsTrigger,\n        className\n      ),\n      \"aria-describedby\": descriptionId,\n      ...props,\n      children: [\n        icon2 && /* @__PURE__ */ jsx(\"span\", { className: styles$c.tabsIcon, \"aria-hidden\": \"true\", children: icon2 }),\n        /* @__PURE__ */ jsx(\"span\", { className: styles$c.tabsLabel, style: lineHeightStyle, children }),\n        badge2 && /* @__PURE__ */ jsx(\"span\", { className: styles$c.tabsBadge, \"aria-label\": `${badge2} items`, children: badge2 }),\n        description && /* @__PURE__ */ jsx(\"span\", { id: descriptionId, style: { display: \"none\" }, children: description })\n      ]\n    }\n  );\n});\nTabsTrigger.displayName = \"TabsTrigger\";\nconst TabsContent = forwardRef(({\n  className,\n  children,\n  ...props\n}, ref) => {\n  return /* @__PURE__ */ jsx(\n    RadixTabs.Content,\n    {\n      ref,\n      className: clsx(\n        styles$c.tabsContent,\n        className\n      ),\n      tabIndex: 0,\n      ...props,\n      children\n    }\n  );\n});\nTabsContent.displayName = \"TabsContent\";\nconst TabsRoot = forwardRef(({\n  className,\n  children,\n  ...props\n}, ref) => {\n  return /* @__PURE__ */ jsx(RadixTabs.Root, { ref, className, ...props, children });\n});\nTabsRoot.displayName = \"TabsRoot\";\nconst tabsVariants = [\"primary\", \"secondary\"];\nconst tabsCounts = [2, 3, 4, 5, 6];\nfunction __insertCSS(code) {\n  if (typeof document == \"undefined\") return;\n  let head = document.head || document.getElementsByTagName(\"head\")[0];\n  let style = document.createElement(\"style\");\n  style.type = \"text/css\";\n  head.appendChild(style);\n  style.styleSheet ? style.styleSheet.cssText = code : style.appendChild(document.createTextNode(code));\n}\nconst DrawerContext = React__default__default.createContext({\n  drawerRef: {\n    current: null\n  },\n  overlayRef: {\n    current: null\n  },\n  onPress: () => {\n  },\n  onRelease: () => {\n  },\n  onDrag: () => {\n  },\n  onNestedDrag: () => {\n  },\n  onNestedOpenChange: () => {\n  },\n  onNestedRelease: () => {\n  },\n  openProp: void 0,\n  dismissible: false,\n  isOpen: false,\n  isDragging: false,\n  keyboardIsOpen: {\n    current: false\n  },\n  snapPointsOffset: null,\n  snapPoints: null,\n  handleOnly: false,\n  modal: false,\n  shouldFade: false,\n  activeSnapPoint: null,\n  onOpenChange: () => {\n  },\n  setActiveSnapPoint: () => {\n  },\n  closeDrawer: () => {\n  },\n  direction: \"bottom\",\n  shouldAnimate: {\n    current: true\n  },\n  shouldScaleBackground: false,\n  setBackgroundColorOnScale: true,\n  noBodyStyles: false,\n  container: null,\n  autoFocus: false\n});\nconst useDrawerContext = () => {\n  const context = React__default__default.useContext(DrawerContext);\n  if (!context) {\n    throw new Error(\"useDrawerContext must be used within a Drawer.Root\");\n  }\n  return context;\n};\n__insertCSS(\"[data-vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32, .72, 0, 1);animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=open]{animation-name:slideFromBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=closed]{animation-name:slideToBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=open]{animation-name:slideFromTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=closed]{animation-name:slideToTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=open]{animation-name:slideFromLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=closed]{animation-name:slideToLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=open]{animation-name:slideFromRight}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=closed]{animation-name:slideToRight}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--initial-transform,100%),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--initial-transform,100%),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-overlay][data-vaul-snap-points=false]{animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=false][data-state=open]{animation-name:fadeIn}[data-vaul-overlay][data-state=closed]{animation-name:fadeOut}[data-vaul-animate=false]{animation:none!important}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:0;transition:opacity .5s cubic-bezier(.32, .72, 0, 1)}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:1}[data-vaul-drawer]:not([data-vaul-custom-container=true])::after{content:'';position:absolute;background:inherit;background-color:inherit}[data-vaul-drawer][data-vaul-drawer-direction=top]::after{top:initial;bottom:100%;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=bottom]::after{top:100%;bottom:initial;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=left]::after{left:initial;right:100%;top:0;bottom:0;width:200%}[data-vaul-drawer][data-vaul-drawer-direction=right]::after{left:100%;right:initial;top:0;bottom:0;width:200%}[data-vaul-overlay][data-vaul-snap-points=true]:not([data-vaul-snap-points-overlay=true]):not(\\n[data-state=closed]\\n){opacity:0}[data-vaul-overlay][data-vaul-snap-points-overlay=true]{opacity:1}[data-vaul-handle]{display:block;position:relative;opacity:.7;background:#e2e2e4;margin-left:auto;margin-right:auto;height:5px;width:32px;border-radius:1rem;touch-action:pan-y}[data-vaul-handle]:active,[data-vaul-handle]:hover{opacity:1}[data-vaul-handle-hitarea]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:max(100%,2.75rem);height:max(100%,2.75rem);touch-action:inherit}@media (hover:hover) and (pointer:fine){[data-vaul-drawer]{user-select:none}}@media (pointer:fine){[data-vaul-handle-hitarea]:{width:100%;height:100%}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeOut{to{opacity:0}}@keyframes slideFromBottom{from{transform:translate3d(0,var(--initial-transform,100%),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToBottom{to{transform:translate3d(0,var(--initial-transform,100%),0)}}@keyframes slideFromTop{from{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToTop{to{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}}@keyframes slideFromLeft{from{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToLeft{to{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}}@keyframes slideFromRight{from{transform:translate3d(var(--initial-transform,100%),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToRight{to{transform:translate3d(var(--initial-transform,100%),0,0)}}\");\nfunction isMobileFirefox() {\n  const userAgent = navigator.userAgent;\n  return typeof window !== \"undefined\" && (/Firefox/.test(userAgent) && /Mobile/.test(userAgent) || // Android Firefox\n  /FxiOS/.test(userAgent));\n}\nfunction isMac() {\n  return testPlatform(/^Mac/);\n}\nfunction isIPhone() {\n  return testPlatform(/^iPhone/);\n}\nfunction isSafari() {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\nfunction isIPad() {\n  return testPlatform(/^iPad/) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n  isMac() && navigator.maxTouchPoints > 1;\n}\nfunction isIOS() {\n  return isIPhone() || isIPad();\n}\nfunction testPlatform(re) {\n  return typeof window !== \"undefined\" && window.navigator != null ? re.test(window.navigator.platform) : void 0;\n}\nconst KEYBOARD_BUFFER = 24;\nconst useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nfunction chain$1(...callbacks) {\n  return (...args) => {\n    for (let callback of callbacks) {\n      if (typeof callback === \"function\") {\n        callback(...args);\n      }\n    }\n  };\n}\nconst visualViewport = typeof document !== \"undefined\" && window.visualViewport;\nfunction isScrollable(node) {\n  let style = window.getComputedStyle(node);\n  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n}\nfunction getScrollParent(node) {\n  if (isScrollable(node)) {\n    node = node.parentElement;\n  }\n  while (node && !isScrollable(node)) {\n    node = node.parentElement;\n  }\n  return node || document.scrollingElement || document.documentElement;\n}\nconst nonTextInputTypes = /* @__PURE__ */ new Set([\n  \"checkbox\",\n  \"radio\",\n  \"range\",\n  \"color\",\n  \"file\",\n  \"image\",\n  \"button\",\n  \"submit\",\n  \"reset\"\n]);\nlet preventScrollCount = 0;\nlet restore;\nfunction usePreventScroll(options = {}) {\n  let { isDisabled } = options;\n  useIsomorphicLayoutEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n    preventScrollCount++;\n    if (preventScrollCount === 1) {\n      if (isIOS()) {\n        restore = preventScrollMobileSafari();\n      }\n    }\n    return () => {\n      preventScrollCount--;\n      if (preventScrollCount === 0) {\n        restore == null ? void 0 : restore();\n      }\n    };\n  }, [\n    isDisabled\n  ]);\n}\nfunction preventScrollMobileSafari() {\n  let scrollable;\n  let lastY = 0;\n  let onTouchStart = (e) => {\n    scrollable = getScrollParent(e.target);\n    if (scrollable === document.documentElement && scrollable === document.body) {\n      return;\n    }\n    lastY = e.changedTouches[0].pageY;\n  };\n  let onTouchMove = (e) => {\n    if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    }\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n    if (bottom === 0) {\n      return;\n    }\n    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) {\n      e.preventDefault();\n    }\n    lastY = y;\n  };\n  let onTouchEnd = (e) => {\n    let target = e.target;\n    if (isInput(target) && target !== document.activeElement) {\n      e.preventDefault();\n      target.style.transform = \"translateY(-2000px)\";\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = \"\";\n      });\n    }\n  };\n  let onFocus = (e) => {\n    let target = e.target;\n    if (isInput(target)) {\n      target.style.transform = \"translateY(-2000px)\";\n      requestAnimationFrame(() => {\n        target.style.transform = \"\";\n        if (visualViewport) {\n          if (visualViewport.height < window.innerHeight) {\n            requestAnimationFrame(() => {\n              scrollIntoView(target);\n            });\n          } else {\n            visualViewport.addEventListener(\"resize\", () => scrollIntoView(target), {\n              once: true\n            });\n          }\n        }\n      });\n    }\n  };\n  let onWindowScroll = () => {\n    window.scrollTo(0, 0);\n  };\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n  let restoreStyles = chain$1(setStyle(document.documentElement, \"paddingRight\", `${window.innerWidth - document.documentElement.clientWidth}px`));\n  window.scrollTo(0, 0);\n  let removeEvents = chain$1(addEvent(document, \"touchstart\", onTouchStart, {\n    passive: false,\n    capture: true\n  }), addEvent(document, \"touchmove\", onTouchMove, {\n    passive: false,\n    capture: true\n  }), addEvent(document, \"touchend\", onTouchEnd, {\n    passive: false,\n    capture: true\n  }), addEvent(document, \"focus\", onFocus, true), addEvent(window, \"scroll\", onWindowScroll));\n  return () => {\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n}\nfunction setStyle(element, style, value2) {\n  let cur = element.style[style];\n  element.style[style] = value2;\n  return () => {\n    element.style[style] = cur;\n  };\n}\nfunction addEvent(target, event, handler, options) {\n  target.addEventListener(event, handler, options);\n  return () => {\n    target.removeEventListener(event, handler, options);\n  };\n}\nfunction scrollIntoView(target) {\n  let root2 = document.scrollingElement || document.documentElement;\n  while (target && target !== root2) {\n    let scrollable = getScrollParent(target);\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      let targetBottom = target.getBoundingClientRect().bottom;\n      const keyboardHeight = scrollable.getBoundingClientRect().bottom + KEYBOARD_BUFFER;\n      if (targetBottom > keyboardHeight) {\n        scrollable.scrollTop += targetTop - scrollableTop;\n      }\n    }\n    target = scrollable.parentElement;\n  }\n}\nfunction isInput(target) {\n  return target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n}\nfunction setRef(ref, value2) {\n  if (typeof ref === \"function\") {\n    ref(value2);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value2;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React__default.useCallback(composeRefs(...refs), refs);\n}\nconst cache = /* @__PURE__ */ new WeakMap();\nfunction set(el, styles2, ignoreCache = false) {\n  if (!el || !(el instanceof HTMLElement)) return;\n  let originalStyles = {};\n  Object.entries(styles2).forEach(([key, value2]) => {\n    if (key.startsWith(\"--\")) {\n      el.style.setProperty(key, value2);\n      return;\n    }\n    originalStyles[key] = el.style[key];\n    el.style[key] = value2;\n  });\n  if (ignoreCache) return;\n  cache.set(el, originalStyles);\n}\nfunction reset(el, prop) {\n  if (!el || !(el instanceof HTMLElement)) return;\n  let originalStyles = cache.get(el);\n  if (!originalStyles) {\n    return;\n  }\n  {\n    el.style[prop] = originalStyles[prop];\n  }\n}\nconst isVertical = (direction) => {\n  switch (direction) {\n    case \"top\":\n    case \"bottom\":\n      return true;\n    case \"left\":\n    case \"right\":\n      return false;\n    default:\n      return direction;\n  }\n};\nfunction getTranslate(element, direction) {\n  if (!element) {\n    return null;\n  }\n  const style = window.getComputedStyle(element);\n  const transform = (\n    // @ts-ignore\n    style.transform || style.webkitTransform || style.mozTransform\n  );\n  let mat = transform.match(/^matrix3d\\((.+)\\)$/);\n  if (mat) {\n    return parseFloat(mat[1].split(\", \")[isVertical(direction) ? 13 : 12]);\n  }\n  mat = transform.match(/^matrix\\((.+)\\)$/);\n  return mat ? parseFloat(mat[1].split(\", \")[isVertical(direction) ? 5 : 4]) : null;\n}\nfunction dampenValue(v) {\n  return 8 * (Math.log(v + 1) - 2);\n}\nfunction assignStyle(element, style) {\n  if (!element) return () => {\n  };\n  const prevStyle = element.style.cssText;\n  Object.assign(element.style, style);\n  return () => {\n    element.style.cssText = prevStyle;\n  };\n}\nfunction chain(...fns) {\n  return (...args) => {\n    for (const fn of fns) {\n      if (typeof fn === \"function\") {\n        fn(...args);\n      }\n    }\n  };\n}\nconst TRANSITIONS = {\n  DURATION: 0.5,\n  EASE: [\n    0.32,\n    0.72,\n    0,\n    1\n  ]\n};\nconst VELOCITY_THRESHOLD = 0.4;\nconst CLOSE_THRESHOLD = 0.25;\nconst SCROLL_LOCK_TIMEOUT = 100;\nconst BORDER_RADIUS = 8;\nconst NESTED_DISPLACEMENT = 16;\nconst WINDOW_TOP_OFFSET = 26;\nconst DRAG_CLASS = \"vaul-dragging\";\nfunction useCallbackRef(callback) {\n  const callbackRef = React__default__default.useRef(callback);\n  React__default__default.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React__default__default.useMemo(() => (...args) => callbackRef.current == null ? void 0 : callbackRef.current.call(callbackRef, ...args), []);\n}\nfunction useUncontrolledState({ defaultProp, onChange }) {\n  const uncontrolledState = React__default__default.useState(defaultProp);\n  const [value2] = uncontrolledState;\n  const prevValueRef = React__default__default.useRef(value2);\n  const handleChange = useCallbackRef(onChange);\n  React__default__default.useEffect(() => {\n    if (prevValueRef.current !== value2) {\n      handleChange(value2);\n      prevValueRef.current = value2;\n    }\n  }, [\n    value2,\n    prevValueRef,\n    handleChange\n  ]);\n  return uncontrolledState;\n}\nfunction useControllableState({ prop, defaultProp, onChange = () => {\n} }) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({\n    defaultProp,\n    onChange\n  });\n  const isControlled = prop !== void 0;\n  const value2 = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n  const setValue = React__default__default.useCallback((nextValue) => {\n    if (isControlled) {\n      const setter = nextValue;\n      const value3 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\n      if (value3 !== prop) handleChange(value3);\n    } else {\n      setUncontrolledProp(nextValue);\n    }\n  }, [\n    isControlled,\n    prop,\n    setUncontrolledProp,\n    handleChange\n  ]);\n  return [\n    value2,\n    setValue\n  ];\n}\nfunction useSnapPoints({ activeSnapPointProp, setActiveSnapPointProp, snapPoints, drawerRef, overlayRef, fadeFromIndex, onSnapPointChange, direction = \"bottom\", container: container2, snapToSequentialPoint }) {\n  const [activeSnapPoint, setActiveSnapPoint] = useControllableState({\n    prop: activeSnapPointProp,\n    defaultProp: snapPoints == null ? void 0 : snapPoints[0],\n    onChange: setActiveSnapPointProp\n  });\n  const [windowDimensions, setWindowDimensions] = React__default__default.useState(typeof window !== \"undefined\" ? {\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight\n  } : void 0);\n  React__default__default.useEffect(() => {\n    function onResize() {\n      setWindowDimensions({\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      });\n    }\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n  const isLastSnapPoint = React__default__default.useMemo(() => activeSnapPoint === (snapPoints == null ? void 0 : snapPoints[snapPoints.length - 1]) || null, [\n    snapPoints,\n    activeSnapPoint\n  ]);\n  const activeSnapPointIndex = React__default__default.useMemo(() => {\n    var _snapPoints_findIndex;\n    return (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex((snapPoint) => snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : null;\n  }, [\n    snapPoints,\n    activeSnapPoint\n  ]);\n  const shouldFade = snapPoints && snapPoints.length > 0 && (fadeFromIndex || fadeFromIndex === 0) && !Number.isNaN(fadeFromIndex) && snapPoints[fadeFromIndex] === activeSnapPoint || !snapPoints;\n  const snapPointsOffset = React__default__default.useMemo(() => {\n    const containerSize = container2 ? {\n      width: container2.getBoundingClientRect().width,\n      height: container2.getBoundingClientRect().height\n    } : typeof window !== \"undefined\" ? {\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : {\n      width: 0,\n      height: 0\n    };\n    var _snapPoints_map;\n    return (_snapPoints_map = snapPoints == null ? void 0 : snapPoints.map((snapPoint) => {\n      const isPx = typeof snapPoint === \"string\";\n      let snapPointAsNumber = 0;\n      if (isPx) {\n        snapPointAsNumber = parseInt(snapPoint, 10);\n      }\n      if (isVertical(direction)) {\n        const height = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.height : 0;\n        if (windowDimensions) {\n          return direction === \"bottom\" ? containerSize.height - height : -containerSize.height + height;\n        }\n        return height;\n      }\n      const width = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.width : 0;\n      if (windowDimensions) {\n        return direction === \"right\" ? containerSize.width - width : -containerSize.width + width;\n      }\n      return width;\n    })) != null ? _snapPoints_map : [];\n  }, [\n    snapPoints,\n    windowDimensions,\n    container2\n  ]);\n  const activeSnapPointOffset = React__default__default.useMemo(() => activeSnapPointIndex !== null ? snapPointsOffset == null ? void 0 : snapPointsOffset[activeSnapPointIndex] : null, [\n    snapPointsOffset,\n    activeSnapPointIndex\n  ]);\n  const snapToPoint = React__default__default.useCallback((dimension) => {\n    var _snapPointsOffset_findIndex;\n    const newSnapPointIndex = (_snapPointsOffset_findIndex = snapPointsOffset == null ? void 0 : snapPointsOffset.findIndex((snapPointDim) => snapPointDim === dimension)) != null ? _snapPointsOffset_findIndex : null;\n    onSnapPointChange(newSnapPointIndex);\n    set(drawerRef.current, {\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n      transform: isVertical(direction) ? `translate3d(0, ${dimension}px, 0)` : `translate3d(${dimension}px, 0, 0)`\n    });\n    if (snapPointsOffset && newSnapPointIndex !== snapPointsOffset.length - 1 && fadeFromIndex !== void 0 && newSnapPointIndex !== fadeFromIndex && newSnapPointIndex < fadeFromIndex) {\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n        opacity: \"0\"\n      });\n    } else {\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n        opacity: \"1\"\n      });\n    }\n    setActiveSnapPoint(snapPoints == null ? void 0 : snapPoints[Math.max(newSnapPointIndex, 0)]);\n  }, [\n    drawerRef.current,\n    snapPoints,\n    snapPointsOffset,\n    fadeFromIndex,\n    overlayRef,\n    setActiveSnapPoint\n  ]);\n  React__default__default.useEffect(() => {\n    if (activeSnapPoint || activeSnapPointProp) {\n      var _snapPoints_findIndex;\n      const newIndex = (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex((snapPoint) => snapPoint === activeSnapPointProp || snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : -1;\n      if (snapPointsOffset && newIndex !== -1 && typeof snapPointsOffset[newIndex] === \"number\") {\n        snapToPoint(snapPointsOffset[newIndex]);\n      }\n    }\n  }, [\n    activeSnapPoint,\n    activeSnapPointProp,\n    snapPoints,\n    snapPointsOffset,\n    snapToPoint\n  ]);\n  function onRelease({ draggedDistance, closeDrawer, velocity, dismissible }) {\n    if (fadeFromIndex === void 0) return;\n    const currentPosition = direction === \"bottom\" || direction === \"right\" ? (activeSnapPointOffset != null ? activeSnapPointOffset : 0) - draggedDistance : (activeSnapPointOffset != null ? activeSnapPointOffset : 0) + draggedDistance;\n    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n    const isFirst = activeSnapPointIndex === 0;\n    const hasDraggedUp = draggedDistance > 0;\n    if (isOverlaySnapPoint) {\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`\n      });\n    }\n    if (!snapToSequentialPoint && velocity > 2 && !hasDraggedUp) {\n      if (dismissible) closeDrawer();\n      else snapToPoint(snapPointsOffset[0]);\n      return;\n    }\n    if (!snapToSequentialPoint && velocity > 2 && hasDraggedUp && snapPointsOffset && snapPoints) {\n      snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n      return;\n    }\n    const closestSnapPoint = snapPointsOffset == null ? void 0 : snapPointsOffset.reduce((prev, curr) => {\n      if (typeof prev !== \"number\" || typeof curr !== \"number\") return prev;\n      return Math.abs(curr - currentPosition) < Math.abs(prev - currentPosition) ? curr : prev;\n    });\n    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n    if (velocity > VELOCITY_THRESHOLD && Math.abs(draggedDistance) < dim * 0.4) {\n      const dragDirection = hasDraggedUp ? 1 : -1;\n      if (dragDirection > 0 && isLastSnapPoint && snapPoints) {\n        snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n        return;\n      }\n      if (isFirst && dragDirection < 0 && dismissible) {\n        closeDrawer();\n      }\n      if (activeSnapPointIndex === null) return;\n      snapToPoint(snapPointsOffset[activeSnapPointIndex + dragDirection]);\n      return;\n    }\n    snapToPoint(closestSnapPoint);\n  }\n  function onDrag({ draggedDistance }) {\n    if (activeSnapPointOffset === null) return;\n    const newValue = direction === \"bottom\" || direction === \"right\" ? activeSnapPointOffset - draggedDistance : activeSnapPointOffset + draggedDistance;\n    if ((direction === \"bottom\" || direction === \"right\") && newValue < snapPointsOffset[snapPointsOffset.length - 1]) {\n      return;\n    }\n    if ((direction === \"top\" || direction === \"left\") && newValue > snapPointsOffset[snapPointsOffset.length - 1]) {\n      return;\n    }\n    set(drawerRef.current, {\n      transform: isVertical(direction) ? `translate3d(0, ${newValue}px, 0)` : `translate3d(${newValue}px, 0, 0)`\n    });\n  }\n  function getPercentageDragged(absDraggedDistance, isDraggingDown) {\n    if (!snapPoints || typeof activeSnapPointIndex !== \"number\" || !snapPointsOffset || fadeFromIndex === void 0) return null;\n    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n    const isOverlaySnapPointOrHigher = activeSnapPointIndex >= fadeFromIndex;\n    if (isOverlaySnapPointOrHigher && isDraggingDown) {\n      return 0;\n    }\n    if (isOverlaySnapPoint && !isDraggingDown) return 1;\n    if (!shouldFade && !isOverlaySnapPoint) return null;\n    const targetSnapPointIndex = isOverlaySnapPoint ? activeSnapPointIndex + 1 : activeSnapPointIndex - 1;\n    const snapPointDistance = isOverlaySnapPoint ? snapPointsOffset[targetSnapPointIndex] - snapPointsOffset[targetSnapPointIndex - 1] : snapPointsOffset[targetSnapPointIndex + 1] - snapPointsOffset[targetSnapPointIndex];\n    const percentageDragged = absDraggedDistance / Math.abs(snapPointDistance);\n    if (isOverlaySnapPoint) {\n      return 1 - percentageDragged;\n    } else {\n      return percentageDragged;\n    }\n  }\n  return {\n    isLastSnapPoint,\n    activeSnapPoint,\n    shouldFade,\n    getPercentageDragged,\n    setActiveSnapPoint,\n    activeSnapPointIndex,\n    onRelease,\n    onDrag,\n    snapPointsOffset\n  };\n}\nconst noop = () => () => {\n};\nfunction useScaleBackground() {\n  const { direction, isOpen, shouldScaleBackground, setBackgroundColorOnScale, noBodyStyles } = useDrawerContext();\n  const timeoutIdRef = React__default__default.useRef(null);\n  const initialBackgroundColor = useMemo(() => document.body.style.backgroundColor, []);\n  function getScale() {\n    return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n  }\n  React__default__default.useEffect(() => {\n    if (isOpen && shouldScaleBackground) {\n      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n      const wrapper = document.querySelector(\"[data-vaul-drawer-wrapper]\") || document.querySelector(\"[vaul-drawer-wrapper]\");\n      if (!wrapper) return;\n      chain(setBackgroundColorOnScale && !noBodyStyles ? assignStyle(document.body, {\n        background: \"black\"\n      }) : noop, assignStyle(wrapper, {\n        transformOrigin: isVertical(direction) ? \"top\" : \"left\",\n        transitionProperty: \"transform, border-radius\",\n        transitionDuration: `${TRANSITIONS.DURATION}s`,\n        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`\n      }));\n      const wrapperStylesCleanup = assignStyle(wrapper, {\n        borderRadius: `${BORDER_RADIUS}px`,\n        overflow: \"hidden\",\n        ...isVertical(direction) ? {\n          transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`\n        } : {\n          transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`\n        }\n      });\n      return () => {\n        wrapperStylesCleanup();\n        timeoutIdRef.current = window.setTimeout(() => {\n          if (initialBackgroundColor) {\n            document.body.style.background = initialBackgroundColor;\n          } else {\n            document.body.style.removeProperty(\"background\");\n          }\n        }, TRANSITIONS.DURATION * 1e3);\n      };\n    }\n  }, [\n    isOpen,\n    shouldScaleBackground,\n    initialBackgroundColor\n  ]);\n}\nlet previousBodyPosition = null;\nfunction usePositionFixed({ isOpen, modal, nested, hasBeenOpened, preventScrollRestoration, noBodyStyles }) {\n  const [activeUrl, setActiveUrl] = React__default__default.useState(() => typeof window !== \"undefined\" ? window.location.href : \"\");\n  const scrollPos = React__default__default.useRef(0);\n  const setPositionFixed = React__default__default.useCallback(() => {\n    if (!isSafari()) return;\n    if (previousBodyPosition === null && isOpen && !noBodyStyles) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left,\n        height: document.body.style.height,\n        right: \"unset\"\n      };\n      const { scrollX, innerHeight } = window;\n      document.body.style.setProperty(\"position\", \"fixed\", \"important\");\n      Object.assign(document.body.style, {\n        top: `${-scrollPos.current}px`,\n        left: `${-scrollX}px`,\n        right: \"0px\",\n        height: \"auto\"\n      });\n      window.setTimeout(() => window.requestAnimationFrame(() => {\n        const bottomBarHeight = innerHeight - window.innerHeight;\n        if (bottomBarHeight && scrollPos.current >= innerHeight) {\n          document.body.style.top = `${-(scrollPos.current + bottomBarHeight)}px`;\n        }\n      }), 300);\n    }\n  }, [\n    isOpen\n  ]);\n  const restorePositionSetting = React__default__default.useCallback(() => {\n    if (!isSafari()) return;\n    if (previousBodyPosition !== null && !noBodyStyles) {\n      const y = -parseInt(document.body.style.top, 10);\n      const x = -parseInt(document.body.style.left, 10);\n      Object.assign(document.body.style, previousBodyPosition);\n      window.requestAnimationFrame(() => {\n        if (preventScrollRestoration && activeUrl !== window.location.href) {\n          setActiveUrl(window.location.href);\n          return;\n        }\n        window.scrollTo(x, y);\n      });\n      previousBodyPosition = null;\n    }\n  }, [\n    activeUrl\n  ]);\n  React__default__default.useEffect(() => {\n    function onScroll() {\n      scrollPos.current = window.scrollY;\n    }\n    onScroll();\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, []);\n  React__default__default.useEffect(() => {\n    if (!modal) return;\n    return () => {\n      if (typeof document === \"undefined\") return;\n      const hasDrawerOpened = !!document.querySelector(\"[data-vaul-drawer]\");\n      if (hasDrawerOpened) return;\n      restorePositionSetting();\n    };\n  }, [\n    modal,\n    restorePositionSetting\n  ]);\n  React__default__default.useEffect(() => {\n    if (nested || !hasBeenOpened) return;\n    if (isOpen) {\n      const isStandalone = window.matchMedia(\"(display-mode: standalone)\").matches;\n      !isStandalone && setPositionFixed();\n      if (!modal) {\n        window.setTimeout(() => {\n          restorePositionSetting();\n        }, 500);\n      }\n    } else {\n      restorePositionSetting();\n    }\n  }, [\n    isOpen,\n    hasBeenOpened,\n    activeUrl,\n    modal,\n    nested,\n    setPositionFixed,\n    restorePositionSetting\n  ]);\n  return {\n    restorePositionSetting\n  };\n}\nfunction Root({ open: openProp, onOpenChange, children, onDrag: onDragProp, onRelease: onReleaseProp, snapPoints, shouldScaleBackground = false, setBackgroundColorOnScale = true, closeThreshold = CLOSE_THRESHOLD, scrollLockTimeout = SCROLL_LOCK_TIMEOUT, dismissible = true, handleOnly = false, fadeFromIndex = snapPoints && snapPoints.length - 1, activeSnapPoint: activeSnapPointProp, setActiveSnapPoint: setActiveSnapPointProp, fixed, modal = true, onClose, nested, noBodyStyles = false, direction = \"bottom\", defaultOpen = false, disablePreventScroll = true, snapToSequentialPoint = false, preventScrollRestoration = false, repositionInputs = true, onAnimationEnd, container: container2, autoFocus = false }) {\n  var _drawerRef_current, _drawerRef_current1;\n  const [isOpen = false, setIsOpen] = useControllableState({\n    defaultProp: defaultOpen,\n    prop: openProp,\n    onChange: (o) => {\n      onOpenChange == null ? void 0 : onOpenChange(o);\n      if (!o && !nested) {\n        restorePositionSetting();\n      }\n      setTimeout(() => {\n        onAnimationEnd == null ? void 0 : onAnimationEnd(o);\n      }, TRANSITIONS.DURATION * 1e3);\n      if (o && !modal) {\n        if (typeof window !== \"undefined\") {\n          window.requestAnimationFrame(() => {\n            document.body.style.pointerEvents = \"auto\";\n          });\n        }\n      }\n      if (!o) {\n        document.body.style.pointerEvents = \"auto\";\n      }\n    }\n  });\n  const [hasBeenOpened, setHasBeenOpened] = React__default__default.useState(false);\n  const [isDragging, setIsDragging] = React__default__default.useState(false);\n  const [justReleased, setJustReleased] = React__default__default.useState(false);\n  const overlayRef = React__default__default.useRef(null);\n  const openTime = React__default__default.useRef(null);\n  const dragStartTime = React__default__default.useRef(null);\n  const dragEndTime = React__default__default.useRef(null);\n  const lastTimeDragPrevented = React__default__default.useRef(null);\n  const isAllowedToDrag = React__default__default.useRef(false);\n  const nestedOpenChangeTimer = React__default__default.useRef(null);\n  const pointerStart = React__default__default.useRef(0);\n  const keyboardIsOpen = React__default__default.useRef(false);\n  const shouldAnimate = React__default__default.useRef(!defaultOpen);\n  const previousDiffFromInitial = React__default__default.useRef(0);\n  const drawerRef = React__default__default.useRef(null);\n  const drawerHeightRef = React__default__default.useRef(((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0);\n  const drawerWidthRef = React__default__default.useRef(((_drawerRef_current1 = drawerRef.current) == null ? void 0 : _drawerRef_current1.getBoundingClientRect().width) || 0);\n  const initialDrawerHeight = React__default__default.useRef(0);\n  const onSnapPointChange = React__default__default.useCallback((activeSnapPointIndex2) => {\n    if (snapPoints && activeSnapPointIndex2 === snapPointsOffset.length - 1) openTime.current = /* @__PURE__ */ new Date();\n  }, []);\n  const { activeSnapPoint, activeSnapPointIndex, setActiveSnapPoint, onRelease: onReleaseSnapPoints, snapPointsOffset, onDrag: onDragSnapPoints, shouldFade, getPercentageDragged: getSnapPointsPercentageDragged } = useSnapPoints({\n    snapPoints,\n    activeSnapPointProp,\n    setActiveSnapPointProp,\n    drawerRef,\n    fadeFromIndex,\n    overlayRef,\n    onSnapPointChange,\n    direction,\n    container: container2,\n    snapToSequentialPoint\n  });\n  usePreventScroll({\n    isDisabled: !isOpen || isDragging || !modal || justReleased || !hasBeenOpened || !repositionInputs || !disablePreventScroll\n  });\n  const { restorePositionSetting } = usePositionFixed({\n    isOpen,\n    modal,\n    nested: nested != null ? nested : false,\n    hasBeenOpened,\n    preventScrollRestoration,\n    noBodyStyles\n  });\n  function getScale() {\n    return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n  }\n  function onPress(event) {\n    var _drawerRef_current2, _drawerRef_current12;\n    if (!dismissible && !snapPoints) return;\n    if (drawerRef.current && !drawerRef.current.contains(event.target)) return;\n    drawerHeightRef.current = ((_drawerRef_current2 = drawerRef.current) == null ? void 0 : _drawerRef_current2.getBoundingClientRect().height) || 0;\n    drawerWidthRef.current = ((_drawerRef_current12 = drawerRef.current) == null ? void 0 : _drawerRef_current12.getBoundingClientRect().width) || 0;\n    setIsDragging(true);\n    dragStartTime.current = /* @__PURE__ */ new Date();\n    if (isIOS()) {\n      window.addEventListener(\"touchend\", () => isAllowedToDrag.current = false, {\n        once: true\n      });\n    }\n    event.target.setPointerCapture(event.pointerId);\n    pointerStart.current = isVertical(direction) ? event.pageY : event.pageX;\n  }\n  function shouldDrag(el, isDraggingInDirection) {\n    var _window_getSelection;\n    let element = el;\n    const highlightedText = (_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString();\n    const swipeAmount = drawerRef.current ? getTranslate(drawerRef.current, direction) : null;\n    const date = /* @__PURE__ */ new Date();\n    if (element.tagName === \"SELECT\") {\n      return false;\n    }\n    if (element.hasAttribute(\"data-vaul-no-drag\") || element.closest(\"[data-vaul-no-drag]\")) {\n      return false;\n    }\n    if (direction === \"right\" || direction === \"left\") {\n      return true;\n    }\n    if (openTime.current && date.getTime() - openTime.current.getTime() < 500) {\n      return false;\n    }\n    if (swipeAmount !== null) {\n      if (direction === \"bottom\" ? swipeAmount > 0 : swipeAmount < 0) {\n        return true;\n      }\n    }\n    if (highlightedText && highlightedText.length > 0) {\n      return false;\n    }\n    if (lastTimeDragPrevented.current && date.getTime() - lastTimeDragPrevented.current.getTime() < scrollLockTimeout && swipeAmount === 0) {\n      lastTimeDragPrevented.current = date;\n      return false;\n    }\n    if (isDraggingInDirection) {\n      lastTimeDragPrevented.current = date;\n      return false;\n    }\n    while (element) {\n      if (element.scrollHeight > element.clientHeight) {\n        if (element.scrollTop !== 0) {\n          lastTimeDragPrevented.current = /* @__PURE__ */ new Date();\n          return false;\n        }\n        if (element.getAttribute(\"role\") === \"dialog\") {\n          return true;\n        }\n      }\n      element = element.parentNode;\n    }\n    return true;\n  }\n  function onDrag(event) {\n    if (!drawerRef.current) {\n      return;\n    }\n    if (isDragging) {\n      const directionMultiplier = direction === \"bottom\" || direction === \"right\" ? 1 : -1;\n      const draggedDistance = (pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX)) * directionMultiplier;\n      const isDraggingInDirection = draggedDistance > 0;\n      const noCloseSnapPointsPreCondition = snapPoints && !dismissible && !isDraggingInDirection;\n      if (noCloseSnapPointsPreCondition && activeSnapPointIndex === 0) return;\n      const absDraggedDistance = Math.abs(draggedDistance);\n      const wrapper = document.querySelector(\"[data-vaul-drawer-wrapper]\");\n      const drawerDimension = direction === \"bottom\" || direction === \"top\" ? drawerHeightRef.current : drawerWidthRef.current;\n      let percentageDragged = absDraggedDistance / drawerDimension;\n      const snapPointPercentageDragged = getSnapPointsPercentageDragged(absDraggedDistance, isDraggingInDirection);\n      if (snapPointPercentageDragged !== null) {\n        percentageDragged = snapPointPercentageDragged;\n      }\n      if (noCloseSnapPointsPreCondition && percentageDragged >= 1) {\n        return;\n      }\n      if (!isAllowedToDrag.current && !shouldDrag(event.target, isDraggingInDirection)) return;\n      drawerRef.current.classList.add(DRAG_CLASS);\n      isAllowedToDrag.current = true;\n      set(drawerRef.current, {\n        transition: \"none\"\n      });\n      set(overlayRef.current, {\n        transition: \"none\"\n      });\n      if (snapPoints) {\n        onDragSnapPoints({\n          draggedDistance\n        });\n      }\n      if (isDraggingInDirection && !snapPoints) {\n        const dampenedDraggedDistance = dampenValue(draggedDistance);\n        const translateValue = Math.min(dampenedDraggedDistance * -1, 0) * directionMultiplier;\n        set(drawerRef.current, {\n          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n        });\n        return;\n      }\n      const opacityValue = 1 - percentageDragged;\n      if (shouldFade || fadeFromIndex && activeSnapPointIndex === fadeFromIndex - 1) {\n        onDragProp == null ? void 0 : onDragProp(event, percentageDragged);\n        set(overlayRef.current, {\n          opacity: `${opacityValue}`,\n          transition: \"none\"\n        }, true);\n      }\n      if (wrapper && overlayRef.current && shouldScaleBackground) {\n        const scaleValue = Math.min(getScale() + percentageDragged * (1 - getScale()), 1);\n        const borderRadiusValue = 8 - percentageDragged * 8;\n        const translateValue = Math.max(0, 14 - percentageDragged * 14);\n        set(wrapper, {\n          borderRadius: `${borderRadiusValue}px`,\n          transform: isVertical(direction) ? `scale(${scaleValue}) translate3d(0, ${translateValue}px, 0)` : `scale(${scaleValue}) translate3d(${translateValue}px, 0, 0)`,\n          transition: \"none\"\n        }, true);\n      }\n      if (!snapPoints) {\n        const translateValue = absDraggedDistance * directionMultiplier;\n        set(drawerRef.current, {\n          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n        });\n      }\n    }\n  }\n  React__default__default.useEffect(() => {\n    window.requestAnimationFrame(() => {\n      shouldAnimate.current = true;\n    });\n  }, []);\n  React__default__default.useEffect(() => {\n    var _window_visualViewport;\n    function onVisualViewportChange() {\n      if (!drawerRef.current || !repositionInputs) return;\n      const focusedElement = document.activeElement;\n      if (isInput(focusedElement) || keyboardIsOpen.current) {\n        var _window_visualViewport2;\n        const visualViewportHeight = ((_window_visualViewport2 = window.visualViewport) == null ? void 0 : _window_visualViewport2.height) || 0;\n        const totalHeight = window.innerHeight;\n        let diffFromInitial = totalHeight - visualViewportHeight;\n        const drawerHeight = drawerRef.current.getBoundingClientRect().height || 0;\n        const isTallEnough = drawerHeight > totalHeight * 0.8;\n        if (!initialDrawerHeight.current) {\n          initialDrawerHeight.current = drawerHeight;\n        }\n        const offsetFromTop = drawerRef.current.getBoundingClientRect().top;\n        if (Math.abs(previousDiffFromInitial.current - diffFromInitial) > 60) {\n          keyboardIsOpen.current = !keyboardIsOpen.current;\n        }\n        if (snapPoints && snapPoints.length > 0 && snapPointsOffset && activeSnapPointIndex) {\n          const activeSnapPointHeight = snapPointsOffset[activeSnapPointIndex] || 0;\n          diffFromInitial += activeSnapPointHeight;\n        }\n        previousDiffFromInitial.current = diffFromInitial;\n        if (drawerHeight > visualViewportHeight || keyboardIsOpen.current) {\n          const height = drawerRef.current.getBoundingClientRect().height;\n          let newDrawerHeight = height;\n          if (height > visualViewportHeight) {\n            newDrawerHeight = visualViewportHeight - (isTallEnough ? offsetFromTop : WINDOW_TOP_OFFSET);\n          }\n          if (fixed) {\n            drawerRef.current.style.height = `${height - Math.max(diffFromInitial, 0)}px`;\n          } else {\n            drawerRef.current.style.height = `${Math.max(newDrawerHeight, visualViewportHeight - offsetFromTop)}px`;\n          }\n        } else if (!isMobileFirefox()) {\n          drawerRef.current.style.height = `${initialDrawerHeight.current}px`;\n        }\n        if (snapPoints && snapPoints.length > 0 && !keyboardIsOpen.current) {\n          drawerRef.current.style.bottom = `0px`;\n        } else {\n          drawerRef.current.style.bottom = `${Math.max(diffFromInitial, 0)}px`;\n        }\n      }\n    }\n    (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.addEventListener(\"resize\", onVisualViewportChange);\n    return () => {\n      var _window_visualViewport2;\n      return (_window_visualViewport2 = window.visualViewport) == null ? void 0 : _window_visualViewport2.removeEventListener(\"resize\", onVisualViewportChange);\n    };\n  }, [\n    activeSnapPointIndex,\n    snapPoints,\n    snapPointsOffset\n  ]);\n  function closeDrawer(fromWithin) {\n    cancelDrag();\n    onClose == null ? void 0 : onClose();\n    if (!fromWithin) {\n      setIsOpen(false);\n    }\n    setTimeout(() => {\n      if (snapPoints) {\n        setActiveSnapPoint(snapPoints[0]);\n      }\n    }, TRANSITIONS.DURATION * 1e3);\n  }\n  function resetDrawer() {\n    if (!drawerRef.current) return;\n    const wrapper = document.querySelector(\"[data-vaul-drawer-wrapper]\");\n    const currentSwipeAmount = getTranslate(drawerRef.current, direction);\n    set(drawerRef.current, {\n      transform: \"translate3d(0, 0, 0)\",\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`\n    });\n    set(overlayRef.current, {\n      transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n      opacity: \"1\"\n    });\n    if (shouldScaleBackground && currentSwipeAmount && currentSwipeAmount > 0 && isOpen) {\n      set(wrapper, {\n        borderRadius: `${BORDER_RADIUS}px`,\n        overflow: \"hidden\",\n        ...isVertical(direction) ? {\n          transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,\n          transformOrigin: \"top\"\n        } : {\n          transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,\n          transformOrigin: \"left\"\n        },\n        transitionProperty: \"transform, border-radius\",\n        transitionDuration: `${TRANSITIONS.DURATION}s`,\n        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`\n      }, true);\n    }\n  }\n  function cancelDrag() {\n    if (!isDragging || !drawerRef.current) return;\n    drawerRef.current.classList.remove(DRAG_CLASS);\n    isAllowedToDrag.current = false;\n    setIsDragging(false);\n    dragEndTime.current = /* @__PURE__ */ new Date();\n  }\n  function onRelease(event) {\n    if (!isDragging || !drawerRef.current) return;\n    drawerRef.current.classList.remove(DRAG_CLASS);\n    isAllowedToDrag.current = false;\n    setIsDragging(false);\n    dragEndTime.current = /* @__PURE__ */ new Date();\n    const swipeAmount = getTranslate(drawerRef.current, direction);\n    if (!event || !shouldDrag(event.target, false) || !swipeAmount || Number.isNaN(swipeAmount)) return;\n    if (dragStartTime.current === null) return;\n    const timeTaken = dragEndTime.current.getTime() - dragStartTime.current.getTime();\n    const distMoved = pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX);\n    const velocity = Math.abs(distMoved) / timeTaken;\n    if (velocity > 0.05) {\n      setJustReleased(true);\n      setTimeout(() => {\n        setJustReleased(false);\n      }, 200);\n    }\n    if (snapPoints) {\n      const directionMultiplier = direction === \"bottom\" || direction === \"right\" ? 1 : -1;\n      onReleaseSnapPoints({\n        draggedDistance: distMoved * directionMultiplier,\n        closeDrawer,\n        velocity,\n        dismissible\n      });\n      onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n      return;\n    }\n    if (direction === \"bottom\" || direction === \"right\" ? distMoved > 0 : distMoved < 0) {\n      resetDrawer();\n      onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n      return;\n    }\n    if (velocity > VELOCITY_THRESHOLD) {\n      closeDrawer();\n      onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n      return;\n    }\n    var _drawerRef_current_getBoundingClientRect_height;\n    const visibleDrawerHeight = Math.min((_drawerRef_current_getBoundingClientRect_height = drawerRef.current.getBoundingClientRect().height) != null ? _drawerRef_current_getBoundingClientRect_height : 0, window.innerHeight);\n    var _drawerRef_current_getBoundingClientRect_width;\n    const visibleDrawerWidth = Math.min((_drawerRef_current_getBoundingClientRect_width = drawerRef.current.getBoundingClientRect().width) != null ? _drawerRef_current_getBoundingClientRect_width : 0, window.innerWidth);\n    const isHorizontalSwipe = direction === \"left\" || direction === \"right\";\n    if (Math.abs(swipeAmount) >= (isHorizontalSwipe ? visibleDrawerWidth : visibleDrawerHeight) * closeThreshold) {\n      closeDrawer();\n      onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n      return;\n    }\n    onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n    resetDrawer();\n  }\n  React__default__default.useEffect(() => {\n    if (isOpen) {\n      set(document.documentElement, {\n        scrollBehavior: \"auto\"\n      });\n      openTime.current = /* @__PURE__ */ new Date();\n    }\n    return () => {\n      reset(document.documentElement, \"scrollBehavior\");\n    };\n  }, [\n    isOpen\n  ]);\n  function onNestedOpenChange(o) {\n    const scale = o ? (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth : 1;\n    const initialTranslate = o ? -16 : 0;\n    if (nestedOpenChangeTimer.current) {\n      window.clearTimeout(nestedOpenChangeTimer.current);\n    }\n    set(drawerRef.current, {\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n      transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${initialTranslate}px, 0)` : `scale(${scale}) translate3d(${initialTranslate}px, 0, 0)`\n    });\n    if (!o && drawerRef.current) {\n      nestedOpenChangeTimer.current = setTimeout(() => {\n        const translateValue = getTranslate(drawerRef.current, direction);\n        set(drawerRef.current, {\n          transition: \"none\",\n          transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n        });\n      }, 500);\n    }\n  }\n  function onNestedDrag(_event, percentageDragged) {\n    if (percentageDragged < 0) return;\n    const initialScale = (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth;\n    const newScale = initialScale + percentageDragged * (1 - initialScale);\n    const newTranslate = -16 + percentageDragged * NESTED_DISPLACEMENT;\n    set(drawerRef.current, {\n      transform: isVertical(direction) ? `scale(${newScale}) translate3d(0, ${newTranslate}px, 0)` : `scale(${newScale}) translate3d(${newTranslate}px, 0, 0)`,\n      transition: \"none\"\n    });\n  }\n  function onNestedRelease(_event, o) {\n    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n    const scale = o ? (dim - NESTED_DISPLACEMENT) / dim : 1;\n    const translate = o ? -16 : 0;\n    if (o) {\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(\",\")})`,\n        transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${translate}px, 0)` : `scale(${scale}) translate3d(${translate}px, 0, 0)`\n      });\n    }\n  }\n  React__default__default.useEffect(() => {\n    if (!modal) {\n      window.requestAnimationFrame(() => {\n        document.body.style.pointerEvents = \"auto\";\n      });\n    }\n  }, [\n    modal\n  ]);\n  return /* @__PURE__ */ React__default__default.createElement(DialogPrimitive.Root, {\n    defaultOpen,\n    onOpenChange: (open) => {\n      if (!dismissible && !open) return;\n      if (open) {\n        setHasBeenOpened(true);\n      } else {\n        closeDrawer(true);\n      }\n      setIsOpen(open);\n    },\n    open: isOpen\n  }, /* @__PURE__ */ React__default__default.createElement(DrawerContext.Provider, {\n    value: {\n      activeSnapPoint,\n      snapPoints,\n      setActiveSnapPoint,\n      drawerRef,\n      overlayRef,\n      onOpenChange,\n      onPress,\n      onRelease,\n      onDrag,\n      dismissible,\n      shouldAnimate,\n      handleOnly,\n      isOpen,\n      isDragging,\n      shouldFade,\n      closeDrawer,\n      onNestedDrag,\n      onNestedOpenChange,\n      onNestedRelease,\n      keyboardIsOpen,\n      modal,\n      snapPointsOffset,\n      activeSnapPointIndex,\n      direction,\n      shouldScaleBackground,\n      setBackgroundColorOnScale,\n      noBodyStyles,\n      container: container2,\n      autoFocus\n    }\n  }, children));\n}\nconst Overlay = /* @__PURE__ */ React__default__default.forwardRef(function({ ...rest }, ref) {\n  const { overlayRef, snapPoints, onRelease, shouldFade, isOpen, modal, shouldAnimate } = useDrawerContext();\n  const composedRef = useComposedRefs(ref, overlayRef);\n  const hasSnapPoints = snapPoints && snapPoints.length > 0;\n  if (!modal) {\n    return null;\n  }\n  const onMouseUp = React__default__default.useCallback((event) => onRelease(event), [\n    onRelease\n  ]);\n  return /* @__PURE__ */ React__default__default.createElement(DialogPrimitive.Overlay, {\n    onMouseUp,\n    ref: composedRef,\n    \"data-vaul-overlay\": \"\",\n    \"data-vaul-snap-points\": isOpen && hasSnapPoints ? \"true\" : \"false\",\n    \"data-vaul-snap-points-overlay\": isOpen && shouldFade ? \"true\" : \"false\",\n    \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? \"true\" : \"false\",\n    ...rest\n  });\n});\nOverlay.displayName = \"Drawer.Overlay\";\nconst Content = /* @__PURE__ */ React__default__default.forwardRef(function({ onPointerDownOutside, style, onOpenAutoFocus, ...rest }, ref) {\n  const { drawerRef, onPress, onRelease, onDrag, keyboardIsOpen, snapPointsOffset, activeSnapPointIndex, modal, isOpen, direction, snapPoints, container: container2, handleOnly, shouldAnimate, autoFocus } = useDrawerContext();\n  const [delayedSnapPoints, setDelayedSnapPoints] = React__default__default.useState(false);\n  const composedRef = useComposedRefs(ref, drawerRef);\n  const pointerStartRef = React__default__default.useRef(null);\n  const lastKnownPointerEventRef = React__default__default.useRef(null);\n  const wasBeyondThePointRef = React__default__default.useRef(false);\n  const hasSnapPoints = snapPoints && snapPoints.length > 0;\n  useScaleBackground();\n  const isDeltaInDirection = (delta, direction2, threshold = 0) => {\n    if (wasBeyondThePointRef.current) return true;\n    const deltaY = Math.abs(delta.y);\n    const deltaX = Math.abs(delta.x);\n    const isDeltaX = deltaX > deltaY;\n    const dFactor = [\n      \"bottom\",\n      \"right\"\n    ].includes(direction2) ? 1 : -1;\n    if (direction2 === \"left\" || direction2 === \"right\") {\n      const isReverseDirection = delta.x * dFactor < 0;\n      if (!isReverseDirection && deltaX >= 0 && deltaX <= threshold) {\n        return isDeltaX;\n      }\n    } else {\n      const isReverseDirection = delta.y * dFactor < 0;\n      if (!isReverseDirection && deltaY >= 0 && deltaY <= threshold) {\n        return !isDeltaX;\n      }\n    }\n    wasBeyondThePointRef.current = true;\n    return true;\n  };\n  React__default__default.useEffect(() => {\n    if (hasSnapPoints) {\n      window.requestAnimationFrame(() => {\n        setDelayedSnapPoints(true);\n      });\n    }\n  }, []);\n  function handleOnPointerUp(event) {\n    pointerStartRef.current = null;\n    wasBeyondThePointRef.current = false;\n    onRelease(event);\n  }\n  return /* @__PURE__ */ React__default__default.createElement(DialogPrimitive.Content, {\n    \"data-vaul-drawer-direction\": direction,\n    \"data-vaul-drawer\": \"\",\n    \"data-vaul-delayed-snap-points\": delayedSnapPoints ? \"true\" : \"false\",\n    \"data-vaul-snap-points\": isOpen && hasSnapPoints ? \"true\" : \"false\",\n    \"data-vaul-custom-container\": container2 ? \"true\" : \"false\",\n    \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? \"true\" : \"false\",\n    ...rest,\n    ref: composedRef,\n    style: snapPointsOffset && snapPointsOffset.length > 0 ? {\n      \"--snap-point-height\": `${snapPointsOffset[activeSnapPointIndex != null ? activeSnapPointIndex : 0]}px`,\n      ...style\n    } : style,\n    onPointerDown: (event) => {\n      if (handleOnly) return;\n      rest.onPointerDown == null ? void 0 : rest.onPointerDown.call(rest, event);\n      pointerStartRef.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      onPress(event);\n    },\n    onOpenAutoFocus: (e) => {\n      onOpenAutoFocus == null ? void 0 : onOpenAutoFocus(e);\n      if (!autoFocus) {\n        e.preventDefault();\n      }\n    },\n    onPointerDownOutside: (e) => {\n      onPointerDownOutside == null ? void 0 : onPointerDownOutside(e);\n      if (!modal || e.defaultPrevented) {\n        e.preventDefault();\n        return;\n      }\n      if (keyboardIsOpen.current) {\n        keyboardIsOpen.current = false;\n      }\n    },\n    onFocusOutside: (e) => {\n      if (!modal) {\n        e.preventDefault();\n        return;\n      }\n    },\n    onPointerMove: (event) => {\n      lastKnownPointerEventRef.current = event;\n      if (handleOnly) return;\n      rest.onPointerMove == null ? void 0 : rest.onPointerMove.call(rest, event);\n      if (!pointerStartRef.current) return;\n      const yPosition = event.pageY - pointerStartRef.current.y;\n      const xPosition = event.pageX - pointerStartRef.current.x;\n      const swipeStartThreshold = event.pointerType === \"touch\" ? 10 : 2;\n      const delta = {\n        x: xPosition,\n        y: yPosition\n      };\n      const isAllowedToSwipe = isDeltaInDirection(delta, direction, swipeStartThreshold);\n      if (isAllowedToSwipe) onDrag(event);\n      else if (Math.abs(xPosition) > swipeStartThreshold || Math.abs(yPosition) > swipeStartThreshold) {\n        pointerStartRef.current = null;\n      }\n    },\n    onPointerUp: (event) => {\n      rest.onPointerUp == null ? void 0 : rest.onPointerUp.call(rest, event);\n      pointerStartRef.current = null;\n      wasBeyondThePointRef.current = false;\n      onRelease(event);\n    },\n    onPointerOut: (event) => {\n      rest.onPointerOut == null ? void 0 : rest.onPointerOut.call(rest, event);\n      handleOnPointerUp(lastKnownPointerEventRef.current);\n    },\n    onContextMenu: (event) => {\n      rest.onContextMenu == null ? void 0 : rest.onContextMenu.call(rest, event);\n      if (lastKnownPointerEventRef.current) {\n        handleOnPointerUp(lastKnownPointerEventRef.current);\n      }\n    }\n  });\n});\nContent.displayName = \"Drawer.Content\";\nconst LONG_HANDLE_PRESS_TIMEOUT = 250;\nconst DOUBLE_TAP_TIMEOUT = 120;\nconst Handle = /* @__PURE__ */ React__default__default.forwardRef(function({ preventCycle = false, children, ...rest }, ref) {\n  const { closeDrawer, isDragging, snapPoints, activeSnapPoint, setActiveSnapPoint, dismissible, handleOnly, isOpen, onPress, onDrag } = useDrawerContext();\n  const closeTimeoutIdRef = React__default__default.useRef(null);\n  const shouldCancelInteractionRef = React__default__default.useRef(false);\n  function handleStartCycle() {\n    if (shouldCancelInteractionRef.current) {\n      handleCancelInteraction();\n      return;\n    }\n    window.setTimeout(() => {\n      handleCycleSnapPoints();\n    }, DOUBLE_TAP_TIMEOUT);\n  }\n  function handleCycleSnapPoints() {\n    if (isDragging || preventCycle || shouldCancelInteractionRef.current) {\n      handleCancelInteraction();\n      return;\n    }\n    handleCancelInteraction();\n    if (!snapPoints || snapPoints.length === 0) {\n      if (!dismissible) {\n        closeDrawer();\n      }\n      return;\n    }\n    const isLastSnapPoint = activeSnapPoint === snapPoints[snapPoints.length - 1];\n    if (isLastSnapPoint && dismissible) {\n      closeDrawer();\n      return;\n    }\n    const currentSnapIndex = snapPoints.findIndex((point) => point === activeSnapPoint);\n    if (currentSnapIndex === -1) return;\n    const nextSnapPoint = snapPoints[currentSnapIndex + 1];\n    setActiveSnapPoint(nextSnapPoint);\n  }\n  function handleStartInteraction() {\n    closeTimeoutIdRef.current = window.setTimeout(() => {\n      shouldCancelInteractionRef.current = true;\n    }, LONG_HANDLE_PRESS_TIMEOUT);\n  }\n  function handleCancelInteraction() {\n    if (closeTimeoutIdRef.current) {\n      window.clearTimeout(closeTimeoutIdRef.current);\n    }\n    shouldCancelInteractionRef.current = false;\n  }\n  return /* @__PURE__ */ React__default__default.createElement(\"div\", {\n    onClick: handleStartCycle,\n    onPointerCancel: handleCancelInteraction,\n    onPointerDown: (e) => {\n      if (handleOnly) onPress(e);\n      handleStartInteraction();\n    },\n    onPointerMove: (e) => {\n      if (handleOnly) onDrag(e);\n    },\n    // onPointerUp is already handled by the content component\n    ref,\n    \"data-vaul-drawer-visible\": isOpen ? \"true\" : \"false\",\n    \"data-vaul-handle\": \"\",\n    \"aria-hidden\": \"true\",\n    ...rest\n  }, /* @__PURE__ */ React__default__default.createElement(\"span\", {\n    \"data-vaul-handle-hitarea\": \"\",\n    \"aria-hidden\": \"true\"\n  }, children));\n});\nHandle.displayName = \"Drawer.Handle\";\nfunction Portal(props) {\n  const context = useDrawerContext();\n  const { container: container2 = context.container, ...portalProps } = props;\n  return /* @__PURE__ */ React__default__default.createElement(DialogPrimitive.Portal, {\n    container: container2,\n    ...portalProps\n  });\n}\nconst Drawer$1 = {\n  Root,\n  Content,\n  Overlay,\n  Portal\n};\nconst drawer = \"Drawer-module__drawer___WqK1d\";\nconst sizeSmall = \"Drawer-module__sizeSmall___ZuTDy\";\nconst sizeMedium$2 = \"Drawer-module__sizeMedium___d9Rws\";\nconst sizeLarge$2 = \"Drawer-module__sizeLarge___hy8On\";\nconst positionLeft = \"Drawer-module__positionLeft___uJr8f\";\nconst positionRight = \"Drawer-module__positionRight___hVVun\";\nconst overlay$1 = \"Drawer-module__overlay___hcG1G\";\nconst header$1 = \"Drawer-module__header___sYoP1\";\nconst headerContent = \"Drawer-module__headerContent___rrUX4\";\nconst backButton = \"Drawer-module__backButton___4kYTY\";\nconst headerPrefix = \"Drawer-module__headerPrefix___-8L-l\";\nconst headerSuffix = \"Drawer-module__headerSuffix___NN3Of\";\nconst title$2 = \"Drawer-module__title___LqUOu\";\nconst closeButton$1 = \"Drawer-module__closeButton___e-OYT\";\nconst content$3 = \"Drawer-module__content___hXFVS\";\nconst footer$1 = \"Drawer-module__footer___AuvUP\";\nconst footerContent$1 = \"Drawer-module__footerContent___dbzyB\";\nconst actions = \"Drawer-module__actions___BXTsU\";\nconst footerButton = \"Drawer-module__footerButton___Rdise\";\nconst variantPrimary = \"Drawer-module__variantPrimary___WTxvw\";\nconst variantSecondary = \"Drawer-module__variantSecondary___-bKoq\";\nconst variantTertiary = \"Drawer-module__variantTertiary___shuaI\";\nconst variantPlain = \"Drawer-module__variantPlain___OnLWi\";\nconst toneDefault$1 = \"Drawer-module__toneDefault___mXgrs\";\nconst toneCritical$1 = \"Drawer-module__toneCritical___VuNqw\";\nconst toneSuccess$1 = \"Drawer-module__toneSuccess___QTDSX\";\nconst toneNeutral = \"Drawer-module__toneNeutral___fEJjj\";\nconst disabled$3 = \"Drawer-module__disabled___6un2F\";\nconst loading = \"Drawer-module__loading___mewhj\";\nconst fadeIn$1 = \"Drawer-module__fadeIn___z-CGM\";\nconst slideInLeft = \"Drawer-module__slideInLeft___yb0xG\";\nconst slideInRight = \"Drawer-module__slideInRight___-mqFH\";\nconst styles$b = {\n  drawer,\n  sizeSmall,\n  sizeMedium: sizeMedium$2,\n  sizeLarge: sizeLarge$2,\n  positionLeft,\n  positionRight,\n  overlay: overlay$1,\n  header: header$1,\n  headerContent,\n  backButton,\n  headerPrefix,\n  headerSuffix,\n  title: title$2,\n  closeButton: closeButton$1,\n  content: content$3,\n  footer: footer$1,\n  footerContent: footerContent$1,\n  actions,\n  footerButton,\n  variantPrimary,\n  variantSecondary,\n  variantTertiary,\n  variantPlain,\n  toneDefault: toneDefault$1,\n  toneCritical: toneCritical$1,\n  toneSuccess: toneSuccess$1,\n  toneNeutral,\n  disabled: disabled$3,\n  loading,\n  fadeIn: fadeIn$1,\n  slideInLeft,\n  slideInRight\n};\nconst drawerSizes = [\"small\", \"medium\", \"large\"];\nconst drawerPositions = [\"right\", \"left\"];\nconst Drawer = forwardRef(({\n  open,\n  onOpenChange,\n  title: title2,\n  headerPrefix: headerPrefix2,\n  headerSuffix: headerSuffix2,\n  showBackButton = false,\n  showTitle = true,\n  showClose = true,\n  showFooter = false,\n  footerContent: footerContent2,\n  primaryAction,\n  secondaryAction,\n  onBackClick,\n  size = \"medium\",\n  position = \"right\",\n  className = \"\",\n  overlayOpacity = 0.7,\n  blurBackground = true,\n  useSurfaceBackground = true,\n  // Default to using the surface background color\n  fullHeight = true,\n  // Default to full height\n  children,\n  ...props\n}, ref) => {\n  const [isRTL, setIsRTL] = useState(false);\n  useEffect(() => {\n    const dir = document.dir || document.documentElement.dir;\n    setIsRTL(dir === \"rtl\");\n  }, []);\n  const adjustedPosition = isRTL ? position === \"right\" ? \"left\" : \"right\" : position;\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const handleBackClick = () => {\n    if (onBackClick) {\n      onBackClick();\n    } else {\n      onOpenChange(false);\n    }\n  };\n  const BackArrowIcon = isRTL ? IconArrowRight : IconArrowLeft;\n  const drawerClasses = clsx(\n    styles$b.drawer,\n    styles$b[`size${size.charAt(0).toUpperCase() + size.slice(1)}`],\n    styles$b[`position${adjustedPosition.charAt(0).toUpperCase() + adjustedPosition.slice(1)}`],\n    className\n  );\n  const overlayStyle = {\n    backgroundColor: `rgba(0, 0, 0, ${overlayOpacity})`,\n    backdropFilter: blurBackground ? \"blur(2px)\" : \"none\"\n  };\n  const drawerStyle = {\n    backgroundColor: useSurfaceBackground ? \"var(--t-color-surface-primary)\" : void 0,\n    height: fullHeight ? \"100vh\" : void 0,\n    maxHeight: fullHeight ? \"100vh\" : void 0\n  };\n  return /* @__PURE__ */ jsx(\n    Drawer$1.Root,\n    {\n      open,\n      onOpenChange,\n      direction: adjustedPosition,\n      shouldScaleBackground: true,\n      modal: true,\n      children: /* @__PURE__ */ jsxs(Drawer$1.Portal, { children: [\n        /* @__PURE__ */ jsx(Drawer$1.Overlay, { className: styles$b.overlay, style: overlayStyle }),\n        /* @__PURE__ */ jsxs(\n          Drawer$1.Content,\n          {\n            ref,\n            className: drawerClasses,\n            \"data-direction\": adjustedPosition,\n            style: drawerStyle,\n            ...props,\n            children: [\n              /* @__PURE__ */ jsxs(\"div\", { className: styles$b.header, children: [\n                /* @__PURE__ */ jsxs(\"div\", { className: styles$b.headerContent, children: [\n                  showBackButton && /* @__PURE__ */ jsx(\n                    Button,\n                    {\n                      variant: \"plain\",\n                      onClick: handleBackClick,\n                      \"aria-label\": isRTL ? \"التالي\" : \"Back\",\n                      className: styles$b.backButton,\n                      prefixIcon: /* @__PURE__ */ jsx(BackArrowIcon, { size: 20 })\n                    }\n                  ),\n                  headerPrefix2 && /* @__PURE__ */ jsx(\"div\", { className: styles$b.headerPrefix, children: headerPrefix2 }),\n                  showTitle && title2 && /* @__PURE__ */ jsx(\"h2\", { className: styles$b.title, style: lineHeightStyle, children: title2 }),\n                  headerSuffix2 && /* @__PURE__ */ jsx(\"div\", { className: styles$b.headerSuffix, children: headerSuffix2 })\n                ] }),\n                showClose && /* @__PURE__ */ jsx(\n                  Button,\n                  {\n                    variant: \"plain\",\n                    onClick: () => onOpenChange(false),\n                    \"aria-label\": isRTL ? \"إغلاق\" : \"Close\",\n                    className: styles$b.closeButton,\n                    prefixIcon: /* @__PURE__ */ jsx(IconX, { size: 20 })\n                  }\n                )\n              ] }),\n              /* @__PURE__ */ jsx(\"div\", { className: styles$b.content, children }),\n              showFooter && /* @__PURE__ */ jsxs(\"div\", { className: styles$b.footer, children: [\n                footerContent2 && /* @__PURE__ */ jsx(\"div\", { className: styles$b.footerContent, children: footerContent2 }),\n                /* @__PURE__ */ jsxs(\"div\", { className: styles$b.actions, children: [\n                  secondaryAction && /* @__PURE__ */ jsx(\n                    Button,\n                    {\n                      variant: secondaryAction.variant || \"secondary\",\n                      tone: secondaryAction.tone || \"default\",\n                      onClick: secondaryAction.onClick,\n                      disabled: secondaryAction.disabled,\n                      className: styles$b.footerButton,\n                      children: secondaryAction.label\n                    }\n                  ),\n                  primaryAction && /* @__PURE__ */ jsx(\n                    Button,\n                    {\n                      variant: primaryAction.variant || \"primary\",\n                      tone: primaryAction.tone || \"default\",\n                      onClick: primaryAction.onClick,\n                      disabled: primaryAction.disabled,\n                      loading: primaryAction.loading,\n                      className: styles$b.footerButton,\n                      children: primaryAction.label\n                    }\n                  )\n                ] })\n              ] })\n            ]\n          }\n        )\n      ] })\n    }\n  );\n});\nDrawer.displayName = \"Drawer\";\nconst pagination = \"Pagination-module__pagination___icb-v\";\nconst count = \"Pagination-module__count___fmHza\";\nconst controlsGroup = \"Pagination-module__controlsGroup___kcOH0\";\nconst paginationItems = \"Pagination-module__paginationItems___gRLRd\";\nconst rowsPerPage = \"Pagination-module__rowsPerPage___eM8-y\";\nconst rowsLabel = \"Pagination-module__rowsLabel___TYmSN\";\nconst selectWrapper = \"Pagination-module__selectWrapper___Zh7u2\";\nconst selectArrow = \"Pagination-module__selectArrow___WiS3f\";\nconst select = \"Pagination-module__select___rDXrA\";\nconst selectValue = \"Pagination-module__selectValue___CxEhR\";\nconst ellipsis = \"Pagination-module__ellipsis___V294k\";\nconst styles$a = {\n  pagination,\n  count,\n  controlsGroup,\n  paginationItems,\n  rowsPerPage,\n  rowsLabel,\n  selectWrapper,\n  selectArrow,\n  select,\n  selectValue,\n  ellipsis\n};\nconst DOTS$1 = \"...\";\nconst usePagination$1 = ({\n  total,\n  current,\n  pageSize = 10,\n  siblingCount = 1\n}) => {\n  const totalPages = Math.ceil(total / pageSize);\n  const range = (start, end) => {\n    const length = end - start + 1;\n    return Array.from({ length }, (_, i) => start + i);\n  };\n  const paginationRange = useMemo(() => {\n    const currentPage = Math.max(1, Math.min(current, totalPages));\n    const totalPageItems = siblingCount * 2 + 5;\n    if (totalPages <= totalPageItems) {\n      return range(1, totalPages);\n    }\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPages);\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPages - 1;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPages;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS$1, totalPages];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(totalPages - rightItemCount + 1, totalPages);\n      return [firstPageIndex, DOTS$1, ...rightRange];\n    }\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS$1, ...middleRange, DOTS$1, lastPageIndex];\n    }\n    return range(1, totalPages);\n  }, [total, current, pageSize, siblingCount]);\n  return {\n    paginationRange,\n    totalPages,\n    currentPage: current\n  };\n};\nconst Pagination = ({\n  total,\n  current = 1,\n  pageSize = 10,\n  onChange,\n  onPageSizeChange,\n  showCount = true,\n  showRowsInPage = true,\n  countType = \"long\",\n  className,\n  pageSizeOptions = [10, 20, 50, 100]\n}) => {\n  const [currentPage, setCurrentPage] = useState(current);\n  const [currentPageSize, setCurrentPageSize] = useState(pageSize);\n  useEffect(() => {\n    setCurrentPage(current);\n  }, [current]);\n  useEffect(() => {\n    setCurrentPageSize(pageSize);\n  }, [pageSize]);\n  const { paginationRange, totalPages } = usePagination$1({\n    total,\n    current: currentPage,\n    pageSize: currentPageSize,\n    siblingCount: countType === \"long\" ? 1 : 0\n    // No siblings in short mode\n  });\n  const handlePageChange = (page) => {\n    if (page === currentPage) return;\n    setCurrentPage(page);\n    onChange == null ? void 0 : onChange(page, currentPageSize);\n  };\n  const handlePrev = () => {\n    if (currentPage > 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n  const handlePageSizeChange = (e) => {\n    const newPageSize = Number(e.target.value);\n    setCurrentPageSize(newPageSize);\n    setCurrentPage(1);\n    onChange == null ? void 0 : onChange(1, newPageSize);\n    onPageSizeChange == null ? void 0 : onPageSizeChange(newPageSize);\n  };\n  const countText = useMemo(() => {\n    const start = total === 0 ? 0 : (currentPage - 1) * currentPageSize + 1;\n    const end = Math.min(currentPage * currentPageSize, total);\n    return `Showing ${start} to ${end} of ${total} entries`;\n  }, [currentPage, currentPageSize, total]);\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const renderEllipsis = (key) => /* @__PURE__ */ jsx(\"div\", { className: styles$a.ellipsis, \"aria-hidden\": \"true\", children: \"•••\" }, key);\n  if (total === 0 || totalPages <= 0) {\n    return null;\n  }\n  return /* @__PURE__ */ jsxs(\"div\", { className: clsx(styles$a.pagination, className), children: [\n    showCount && /* @__PURE__ */ jsx(\"div\", { className: styles$a.count, style: lineHeightStyle, children: isRTL ? (\n      // Arabic format\n      `عرض ${(currentPage - 1) * currentPageSize + 1} إلى ${Math.min(currentPage * currentPageSize, total)} من أصل ${total}`\n    ) : (\n      // English format\n      countText\n    ) }),\n    /* @__PURE__ */ jsxs(\"div\", { className: styles$a.controlsGroup, children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: styles$a.paginationItems, children: [\n        /* @__PURE__ */ jsx(\n          Button,\n          {\n            size: \"micro\",\n            variant: \"secondary\",\n            tone: \"neutral\",\n            onClick: handlePrev,\n            disabled: currentPage === 1,\n            \"aria-label\": \"Previous page\",\n            prefixIcon: /* @__PURE__ */ jsx(IconChevronLeft, { size: 16 })\n          }\n        ),\n        paginationRange.map((pageNumber, index) => {\n          if (pageNumber === DOTS$1) {\n            return renderEllipsis(`ellipsis-${index}`);\n          }\n          const page = pageNumber;\n          const isCurrentPage = page === currentPage;\n          return /* @__PURE__ */ jsx(\n            Button,\n            {\n              size: \"micro\",\n              variant: isCurrentPage ? \"primary\" : \"secondary\",\n              tone: isCurrentPage ? \"default\" : \"neutral\",\n              onClick: () => handlePageChange(page),\n              \"aria-current\": isCurrentPage ? \"page\" : void 0,\n              children: page\n            },\n            `page-${page}`\n          );\n        }),\n        /* @__PURE__ */ jsx(\n          Button,\n          {\n            size: \"micro\",\n            variant: \"secondary\",\n            tone: \"neutral\",\n            onClick: handleNext,\n            disabled: currentPage === totalPages,\n            \"aria-label\": \"Next page\",\n            suffixIcon: /* @__PURE__ */ jsx(IconChevronRight, { size: 16 })\n          }\n        )\n      ] }),\n      showRowsInPage && /* @__PURE__ */ jsxs(\"div\", { className: styles$a.rowsPerPage, children: [\n        /* @__PURE__ */ jsx(\"span\", { className: styles$a.rowsLabel, style: lineHeightStyle, children: isRTL ? \"عدد الصفوف\" : \"Rows in Page\" }),\n        /* @__PURE__ */ jsxs(\"div\", { className: styles$a.selectWrapper, children: [\n          /* @__PURE__ */ jsx(\n            \"select\",\n            {\n              className: styles$a.select,\n              value: currentPageSize,\n              onChange: handlePageSizeChange,\n              \"aria-label\": isRTL ? \"عدد الصفوف\" : \"Rows in Page\",\n              children: pageSizeOptions.map((size) => /* @__PURE__ */ jsx(\"option\", { value: size, className: styles$a.selectValue, style: lineHeightStyle, children: size }, size))\n            }\n          ),\n          /* @__PURE__ */ jsx(\"span\", { className: styles$a.selectArrow, children: /* @__PURE__ */ jsx(\"svg\", { width: \"12\", height: \"12\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M6 9L12 15L18 9\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }) })\n        ] })\n      ] })\n    ] })\n  ] });\n};\nconst DOTS = \"...\";\nconst usePagination = ({\n  total,\n  current,\n  pageSize = 10,\n  siblingCount = 1\n}) => {\n  const totalPages = Math.ceil(total / pageSize);\n  const range = (start, end) => {\n    const length = end - start + 1;\n    return Array.from({ length }, (_, i) => start + i);\n  };\n  const paginationRange = useMemo(() => {\n    const currentPage = Math.max(1, Math.min(current, totalPages));\n    const totalPageItems = siblingCount * 2 + 5;\n    if (totalPages <= totalPageItems) {\n      return range(1, totalPages);\n    }\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPages);\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPages - 1;\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPages;\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n      return [...leftRange, DOTS, totalPages];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(totalPages - rightItemCount + 1, totalPages);\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n    return range(1, totalPages);\n  }, [total, current, pageSize, siblingCount]);\n  return {\n    paginationRange,\n    totalPages,\n    currentPage: current\n  };\n};\nconst avatar = \"Avatar-module__avatar___3xMuZ\";\nconst sizeSm$1 = \"Avatar-module__sizeSm___Rs-fa\";\nconst sizeMd$1 = \"Avatar-module__sizeMd___aaN4-\";\nconst sizeLg = \"Avatar-module__sizeLg___LuK6q\";\nconst sizeXl = \"Avatar-module__sizeXl___dOgJy\";\nconst image = \"Avatar-module__image___ieqGp\";\nconst fallback$1 = \"Avatar-module__fallback___BWBXY\";\nconst icon$2 = \"Avatar-module__icon___zRtul\";\nconst initial = \"Avatar-module__initial___WVpCo\";\nconst styles$9 = {\n  avatar,\n  sizeSm: sizeSm$1,\n  sizeMd: sizeMd$1,\n  sizeLg,\n  sizeXl,\n  image,\n  fallback: fallback$1,\n  icon: icon$2,\n  initial\n};\nconst avatarTypes = [\"image\", \"initial\", \"icon\"];\nconst avatarSizes = [\"sm\", \"md\", \"lg\", \"xl\"];\nconst Avatar = forwardRef(({\n  type = \"icon\",\n  size = \"md\",\n  src,\n  alt,\n  initial: initial2,\n  className,\n  delayMs = 600\n}, ref) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const displayInitial = initial2 ? initial2.trim().charAt(0).toUpperCase() : \"\";\n  const avatarClasses = clsx(\n    styles$9.avatar,\n    styles$9[`size${size.charAt(0).toUpperCase() + size.slice(1)}`],\n    className\n  );\n  return /* @__PURE__ */ jsxs(RadixAvatar.Root, { className: avatarClasses, ref, children: [\n    type === \"image\" && src && /* @__PURE__ */ jsx(\n      RadixAvatar.Image,\n      {\n        className: styles$9.image,\n        src,\n        alt: alt || \"User avatar\",\n        onLoadingStatusChange: () => {\n        }\n      }\n    ),\n    /* @__PURE__ */ jsx(\n      RadixAvatar.Fallback,\n      {\n        className: styles$9.fallback,\n        delayMs: type === \"image\" ? delayMs : 0,\n        children: type === \"initial\" && displayInitial ? /* @__PURE__ */ jsx(\"span\", { className: styles$9.initial, style: lineHeightStyle, children: displayInitial }) : /* @__PURE__ */ jsx(IconUser, { className: styles$9.icon })\n      }\n    )\n  ] });\n});\nAvatar.displayName = \"Avatar\";\nconst badge = \"Badge-module__badge___RsuMz\";\nconst sizeMedium$1 = \"Badge-module__size-medium___wK6DO\";\nconst sizeLarge$1 = \"Badge-module__size-large___lQsnO\";\nconst sizeXlarge = \"Badge-module__size-xlarge___grv7V\";\nconst toneDefault = \"Badge-module__tone-default___uxymF\";\nconst toneInfo = \"Badge-module__tone-info___akTDr\";\nconst toneSuccess = \"Badge-module__tone-success___JJ4YE\";\nconst toneWarning = \"Badge-module__tone-warning___SNekk\";\nconst toneCritical = \"Badge-module__tone-critical___k9bO6\";\nconst toneMagic = \"Badge-module__tone-magic___EV-Vp\";\nconst strong = \"Badge-module__strong___EE8WJ\";\nconst icon$1 = \"Badge-module__icon___XdaQT\";\nconst label$2 = \"Badge-module__label___edPgk\";\nconst styles$8 = {\n  badge,\n  \"size-medium\": \"Badge-module__size-medium___wK6DO\",\n  sizeMedium: sizeMedium$1,\n  \"size-large\": \"Badge-module__size-large___lQsnO\",\n  sizeLarge: sizeLarge$1,\n  \"size-xlarge\": \"Badge-module__size-xlarge___grv7V\",\n  sizeXlarge,\n  \"tone-default\": \"Badge-module__tone-default___uxymF\",\n  toneDefault,\n  \"tone-info\": \"Badge-module__tone-info___akTDr\",\n  toneInfo,\n  \"tone-success\": \"Badge-module__tone-success___JJ4YE\",\n  toneSuccess,\n  \"tone-warning\": \"Badge-module__tone-warning___SNekk\",\n  toneWarning,\n  \"tone-critical\": \"Badge-module__tone-critical___k9bO6\",\n  toneCritical,\n  \"tone-magic\": \"Badge-module__tone-magic___EV-Vp\",\n  toneMagic,\n  strong,\n  icon: icon$1,\n  label: label$2\n};\nconst badgeTones = [\"default\", \"info\", \"success\", \"warning\", \"critical\", \"magic\"];\nconst badgeSizes = [\"medium\", \"large\", \"xlarge\"];\nconst Badge = ({\n  children,\n  tone = \"default\",\n  size = \"medium\",\n  strong: strong2 = false,\n  icon: icon2,\n  className,\n  ...props\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  return /* @__PURE__ */ jsxs(\n    \"span\",\n    {\n      className: clsx(\n        styles$8.badge,\n        styles$8[`tone-${tone}`],\n        styles$8[`size-${size}`],\n        strong2 && styles$8.strong,\n        className\n      ),\n      style: lineHeightStyle,\n      ...props,\n      children: [\n        icon2 && /* @__PURE__ */ jsx(\"span\", { className: styles$8.icon, children: icon2 }),\n        /* @__PURE__ */ jsx(\"span\", { className: styles$8.label, style: lineHeightStyle, children })\n      ]\n    }\n  );\n};\nconst content$2 = \"Popover-module__content___O07fj\";\nconst withScrollbar = \"Popover-module__withScrollbar___fOhQ5\";\nconst innerContent = \"Popover-module__innerContent___LTWlw\";\nconst arrow = \"Popover-module__arrow___5A-0e\";\nconst styles$7 = {\n  content: content$2,\n  withScrollbar,\n  innerContent,\n  arrow\n};\nconst Popover = ({\n  children,\n  content: content2,\n  type = \"default\",\n  className,\n  open,\n  onOpenChange,\n  side = \"bottom\",\n  align = \"center\",\n  showArrow = true,\n  contentProps,\n  animationDuration = 200\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const animationStyles = {\n    animationDuration: `${animationDuration}ms`\n  };\n  return /* @__PURE__ */ jsxs(RadixPopover.Root, { open, onOpenChange, children: [\n    /* @__PURE__ */ jsx(RadixPopover.Trigger, { asChild: true, children }),\n    /* @__PURE__ */ jsx(RadixPopover.Portal, { children: /* @__PURE__ */ jsxs(\n      RadixPopover.Content,\n      {\n        className: clsx(\n          styles$7.content,\n          type === \"with-scrollbar\" && styles$7.withScrollbar,\n          className\n        ),\n        sideOffset: 5,\n        side,\n        align,\n        style: animationStyles,\n        collisionPadding: 10,\n        ...contentProps,\n        children: [\n          /* @__PURE__ */ jsx(\"div\", { className: styles$7.innerContent, style: lineHeightStyle, children: content2 }),\n          showArrow && /* @__PURE__ */ jsx(RadixPopover.Arrow, { className: styles$7.arrow, style: animationStyles, width: 10, height: 5 })\n        ]\n      }\n    ) })\n  ] });\n};\nconst PopoverRoot = RadixPopover.Root;\nconst PopoverTrigger = RadixPopover.Trigger;\nconst PopoverContent = ({\n  children,\n  className,\n  type = \"default\",\n  style,\n  ...props\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  return /* @__PURE__ */ jsxs(\n    RadixPopover.Content,\n    {\n      className: clsx(\n        styles$7.content,\n        type === \"with-scrollbar\" && styles$7.withScrollbar,\n        className\n      ),\n      collisionPadding: 10,\n      style: {\n        ...style,\n        animationDuration: (style == null ? void 0 : style.animationDuration) || \"200ms\"\n      },\n      ...props,\n      children: [\n        /* @__PURE__ */ jsx(\"div\", { className: styles$7.innerContent, style: lineHeightStyle, children }),\n        /* @__PURE__ */ jsx(\n          RadixPopover.Arrow,\n          {\n            className: styles$7.arrow,\n            width: 10,\n            height: 5,\n            style: {\n              animationDuration: (style == null ? void 0 : style.animationDuration) || \"200ms\"\n            }\n          }\n        )\n      ]\n    }\n  );\n};\nconst PopoverArrow = RadixPopover.Arrow;\nconst PopoverClose = RadixPopover.Close;\nconst listbox = \"Listbox-module__listbox___lSHQo\";\nconst inPopover = \"Listbox-module__inPopover___8VO00\";\nconst option = \"Listbox-module__option___sCJLx\";\nconst disabled$2 = \"Listbox-module__disabled___P9SWl\";\nconst selected = \"Listbox-module__selected___zx1V4\";\nconst divider = \"Listbox-module__divider___BOq4j\";\nconst optionContent = \"Listbox-module__optionContent___lowcx\";\nconst prefix$1 = \"Listbox-module__prefix___osULb\";\nconst labelContainer$1 = \"Listbox-module__labelContainer___wGNTc\";\nconst label$1 = \"Listbox-module__label___MNwcg\";\nconst helpText$1 = \"Listbox-module__helpText___WiUcu\";\nconst suffix = \"Listbox-module__suffix___yYrFp\";\nconst moreOptions = \"Listbox-module__moreOptions___PQjDk\";\nconst styles$6 = {\n  listbox,\n  inPopover,\n  option,\n  disabled: disabled$2,\n  selected,\n  divider,\n  optionContent,\n  prefix: prefix$1,\n  labelContainer: labelContainer$1,\n  label: label$1,\n  helpText: helpText$1,\n  suffix,\n  moreOptions\n};\nconst ListboxOption = ({\n  label: label2,\n  selected: selected2 = false,\n  disabled: disabled2 = false,\n  divider: divider2 = false,\n  customContent,\n  prefix: prefix2,\n  suffix: suffix2,\n  helpText: helpText2,\n  value: value2,\n  onClick,\n  className,\n  style,\n  \"aria-selected\": ariaSelected,\n  role = \"option\",\n  id,\n  tabIndex = -1,\n  ...props\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const handleClick = () => {\n    if (!disabled2 && onClick) {\n      onClick(value2);\n    }\n  };\n  const handleKeyDown = (e) => {\n    if (disabled2) return;\n    if (e.key === \"Enter\" || e.key === \" \") {\n      e.preventDefault();\n      if (onClick) onClick(value2);\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      role,\n      id,\n      \"aria-selected\": ariaSelected !== void 0 ? ariaSelected : selected2,\n      \"aria-disabled\": disabled2,\n      tabIndex: disabled2 ? -1 : tabIndex,\n      className: clsx(\n        styles$6.option,\n        selected2 && styles$6.selected,\n        disabled2 && styles$6.disabled,\n        divider2 && styles$6.divider,\n        className\n      ),\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      \"data-state\": selected2 ? \"selected\" : disabled2 ? \"disabled\" : void 0,\n      style: { ...style },\n      ...props,\n      children: /* @__PURE__ */ jsxs(\"div\", { className: styles$6.optionContent, children: [\n        prefix2 && /* @__PURE__ */ jsx(\"div\", { className: styles$6.prefix, children: prefix2 }),\n        /* @__PURE__ */ jsx(\"div\", { className: styles$6.labelContainer, children: customContent || /* @__PURE__ */ jsxs(Fragment, { children: [\n          /* @__PURE__ */ jsx(\"span\", { className: styles$6.label, style: lineHeightStyle, children: label2 }),\n          helpText2 && /* @__PURE__ */ jsx(\"span\", { className: styles$6.helpText, style: lineHeightStyle, children: helpText2 })\n        ] }) }),\n        suffix2 && /* @__PURE__ */ jsx(\"div\", { className: styles$6.suffix, children: suffix2 })\n      ] })\n    }\n  );\n};\nconst Listbox = ({\n  options,\n  selectedValue: selectedValue2,\n  maxVisibleOptions = 5,\n  multiple = false,\n  onSelect,\n  onMultiSelect,\n  className,\n  id,\n  \"aria-label\": ariaLabel,\n  \"aria-labelledby\": ariaLabelledby,\n  inPopover: inPopover2 = true,\n  ...props\n}) => {\n  const normalizedSelectedValue = !multiple && Array.isArray(selectedValue2) ? selectedValue2[0] : selectedValue2;\n  const limitedOptions = options.slice(0, maxVisibleOptions);\n  const handleOptionSelect = (value2) => {\n    if (multiple) {\n      if (onMultiSelect && Array.isArray(selectedValue2)) {\n        const newValues = selectedValue2.includes(value2) ? selectedValue2.filter((v) => v !== value2) : [...selectedValue2, value2];\n        onMultiSelect(newValues);\n      }\n    } else {\n      if (onSelect) {\n        onSelect(value2);\n      }\n    }\n  };\n  return /* @__PURE__ */ jsxs(\n    \"div\",\n    {\n      role: \"listbox\",\n      id,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      \"aria-multiselectable\": multiple,\n      className: clsx(\n        styles$6.listbox,\n        inPopover2 && styles$6.inPopover,\n        className\n      ),\n      tabIndex: -1,\n      ...props,\n      children: [\n        limitedOptions.map((option2) => {\n          const isSelected = multiple && Array.isArray(selectedValue2) ? selectedValue2.includes(option2.value) : normalizedSelectedValue === option2.value;\n          return /* @__PURE__ */ jsx(\n            ListboxOption,\n            {\n              ...option2,\n              selected: isSelected,\n              onClick: handleOptionSelect,\n              role: \"option\",\n              \"aria-selected\": isSelected,\n              tabIndex: -1\n            },\n            option2.value\n          );\n        }),\n        options.length > maxVisibleOptions && /* @__PURE__ */ jsxs(\"div\", { className: styles$6.moreOptions, children: [\n          \"+\",\n          options.length - maxVisibleOptions,\n          \" more options\"\n        ] })\n      ]\n    }\n  );\n};\nconst tableContainer = \"Table-module__tableContainer___PkcSe\";\nconst tabsContainer = \"Table-module__tabsContainer___jdgLE\";\nconst tabsList = \"Table-module__tabsList___5cPlh\";\nconst tabTrigger = \"Table-module__tabTrigger___3srae\";\nconst tableHeader = \"Table-module__tableHeader___Rp-j2\";\nconst tableHeaderTitle = \"Table-module__tableHeaderTitle___ao-1I\";\nconst titleContainer = \"Table-module__titleContainer___GDykH\";\nconst title$1 = \"Table-module__title___reerR\";\nconst titleBadge = \"Table-module__titleBadge___cb2me\";\nconst tableHeaderActions = \"Table-module__tableHeaderActions___-1SSM\";\nconst filterButtonActive = \"Table-module__filterButtonActive___TpDxZ\";\nconst searchWrapper = \"Table-module__searchWrapper___sv3vf\";\nconst filterBar = \"Table-module__filterBar___86Gj7\";\nconst filterBarLabel = \"Table-module__filterBarLabel___OBokx\";\nconst filterItems = \"Table-module__filterItems___qzhpA\";\nconst filterItem = \"Table-module__filterItem___yn4I1\";\nconst filterInitial = \"Table-module__filterInitial___KRTxM\";\nconst filterSelected = \"Table-module__filterSelected___43eKj\";\nconst filterItemContent = \"Table-module__filterItemContent___qWFpk\";\nconst filterPlusIcon = \"Table-module__filterPlusIcon___djISO\";\nconst filterIconClickable = \"Table-module__filterIconClickable___4RDld\";\nconst filterIconRotated = \"Table-module__filterIconRotated___G8ScA\";\nconst filterChevron = \"Table-module__filterChevron___XHJHP\";\nconst filterLabel = \"Table-module__filterLabel___zkZ-K\";\nconst filterLabelSelected = \"Table-module__filterLabelSelected___5-f-m\";\nconst filterPopoverActive = \"Table-module__filterPopoverActive___OGQQD\";\nconst filterValue = \"Table-module__filterValue___jnoOn\";\nconst filterSeparator = \"Table-module__filterSeparator___7KtV0\";\nconst filterDropdown = \"Table-module__filterDropdown___EQvBB\";\nconst filterOption = \"Table-module__filterOption___JX6S7\";\nconst filterOptionSelected = \"Table-module__filterOptionSelected___fxMdG\";\nconst tableContent = \"Table-module__tableContent___G8FBo\";\nconst tableWithActiveFilter = \"Table-module__tableWithActiveFilter___cT9Jr\";\nconst table = \"Table-module__table___Dkosn\";\nconst tableHead = \"Table-module__tableHead___u0Ap5\";\nconst tableHeaderCell = \"Table-module__tableHeaderCell___AxkAJ\";\nconst headerCellContent = \"Table-module__headerCellContent___xrCyq\";\nconst headerCellLabel = \"Table-module__headerCellLabel___JQHGU\";\nconst headerCheckbox = \"Table-module__headerCheckbox___FMu45\";\nconst sortable = \"Table-module__sortable___W4c6P\";\nconst activeSorted = \"Table-module__activeSorted___ov-tA\";\nconst sortIcon = \"Table-module__sortIcon___V3-dH\";\nconst sortIconDefault = \"Table-module__sortIconDefault___eE9NA\";\nconst sortIconInactive = \"Table-module__sortIconInactive___jeOFM\";\nconst helpIconWrapper = \"Table-module__helpIconWrapper___nXKjx\";\nconst helpIcon = \"Table-module__helpIcon___6mhwY\";\nconst tableCell = \"Table-module__tableCell___nwzFB\";\nconst tableRow = \"Table-module__tableRow___snnCC\";\nconst cellText = \"Table-module__cellText___F7q38\";\nconst striped = \"Table-module__striped___5BaG7\";\nconst gridCells = \"Table-module__gridCells___ib4ET\";\nconst clickableRow = \"Table-module__clickableRow___2vEK2\";\nconst paginationContainer = \"Table-module__paginationContainer___Y-80E\";\nconst footerContent = \"Table-module__footerContent___bzSg2\";\nconst contentCaseContainer = \"Table-module__contentCaseContainer___qaOyi\";\nconst contentCaseContent = \"Table-module__contentCaseContent___4u4E8\";\nconst contentCaseIcon = \"Table-module__contentCaseIcon___LA2w4\";\nconst spinnerIcon = \"Table-module__spinnerIcon___ajA9S\";\nconst contentCaseMessage = \"Table-module__contentCaseMessage___JeEY-\";\nconst filterChevronActive = \"Table-module__filterChevronActive___tH83O\";\nconst styles$5 = {\n  tableContainer,\n  tabsContainer,\n  tabsList,\n  tabTrigger,\n  tableHeader,\n  tableHeaderTitle,\n  titleContainer,\n  title: title$1,\n  titleBadge,\n  tableHeaderActions,\n  filterButtonActive,\n  searchWrapper,\n  filterBar,\n  filterBarLabel,\n  filterItems,\n  filterItem,\n  filterInitial,\n  filterSelected,\n  filterItemContent,\n  filterPlusIcon,\n  filterIconClickable,\n  filterIconRotated,\n  filterChevron,\n  filterLabel,\n  filterLabelSelected,\n  filterPopoverActive,\n  filterValue,\n  filterSeparator,\n  filterDropdown,\n  filterOption,\n  filterOptionSelected,\n  tableContent,\n  tableWithActiveFilter,\n  table,\n  tableHead,\n  tableHeaderCell,\n  headerCellContent,\n  headerCellLabel,\n  headerCheckbox,\n  sortable,\n  activeSorted,\n  sortIcon,\n  sortIconDefault,\n  sortIconInactive,\n  helpIconWrapper,\n  helpIcon,\n  tableCell,\n  tableRow,\n  cellText,\n  striped,\n  gridCells,\n  clickableRow,\n  paginationContainer,\n  footerContent,\n  contentCaseContainer,\n  contentCaseContent,\n  contentCaseIcon,\n  spinnerIcon,\n  contentCaseMessage,\n  filterChevronActive\n};\nconst FilterItem = ({\n  name,\n  label: label2,\n  value: value2,\n  options,\n  onChange,\n  removable = true,\n  onRemove\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const selectedOption = options.find((option2) => option2.value === value2);\n  const selectedLabel = (selectedOption == null ? void 0 : selectedOption.label) || \"\";\n  const isSelected = value2 !== void 0;\n  const handleIconClick = (e) => {\n    e.stopPropagation();\n    if (isSelected && onRemove && removable) {\n      onRemove(name);\n    } else {\n      setIsOpen(true);\n    }\n  };\n  const filterTrigger = /* @__PURE__ */ jsx(\"div\", { className: clsx(\n    styles$5.filterItem,\n    isSelected ? styles$5.filterSelected : styles$5.filterInitial,\n    isOpen && styles$5.filterPopoverActive\n  ), children: /* @__PURE__ */ jsxs(\"div\", { className: styles$5.filterItemContent, children: [\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        className: clsx(\n          styles$5.filterPlusIcon,\n          isSelected && styles$5.filterIconClickable,\n          isSelected && styles$5.filterIconRotated\n        ),\n        onClick: handleIconClick,\n        role: \"button\",\n        \"aria-label\": isSelected ? \"Clear filter\" : \"Add filter\",\n        children: /* @__PURE__ */ jsx(IconPlus, { size: 16 })\n      }\n    ),\n    /* @__PURE__ */ jsx(\"span\", { className: clsx(\n      styles$5.filterLabel,\n      isSelected && styles$5.filterLabelSelected\n    ), style: lineHeightStyle, children: label2 }),\n    isSelected && /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\"span\", { className: styles$5.filterSeparator, children: \"|\" }),\n      /* @__PURE__ */ jsx(\"span\", { className: styles$5.filterValue, style: lineHeightStyle, children: selectedLabel })\n    ] }),\n    /* @__PURE__ */ jsx(\n      IconChevronDown,\n      {\n        size: 16,\n        className: clsx(\n          styles$5.filterChevron,\n          isOpen && styles$5.filterChevronActive\n        )\n      }\n    )\n  ] }) });\n  const filterContent = /* @__PURE__ */ jsx(\"div\", { className: styles$5.filterDropdown, children: options.map((option2) => {\n    var _a;\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        className: clsx(\n          styles$5.filterOption,\n          value2 === option2.value && styles$5.filterOptionSelected\n        ),\n        onClick: () => {\n          onChange(name, option2.value);\n          setIsOpen(false);\n        },\n        children: /* @__PURE__ */ jsx(\"span\", { style: lineHeightStyle, children: option2.label })\n      },\n      (_a = option2.value) == null ? void 0 : _a.toString()\n    );\n  }) });\n  return /* @__PURE__ */ jsx(\n    Popover,\n    {\n      open: isOpen,\n      onOpenChange: setIsOpen,\n      side: \"bottom\",\n      align: \"start\",\n      content: filterContent,\n      contentProps: {\n        style: { zIndex: 100 }\n        // Ensure proper z-index\n      },\n      children: filterTrigger\n    }\n  );\n};\nconst TableHeader = ({\n  title: title2,\n  badge: badge2,\n  showSearch = true,\n  showFilters = true,\n  showExport = false,\n  searchQuery = \"\",\n  onSearchChange,\n  onFilterClick,\n  onExport,\n  className = \"\",\n  isFilterBarVisible = false\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const handleFilterClick = () => {\n    onFilterClick == null ? void 0 : onFilterClick();\n  };\n  return /* @__PURE__ */ jsx(\"div\", { className: clsx(styles$5.tableHeader, className), children: /* @__PURE__ */ jsxs(\"div\", { className: styles$5.tableHeaderTitle, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: styles$5.titleContainer, children: title2 && /* @__PURE__ */ jsxs(\"h3\", { className: styles$5.title, style: lineHeightStyle, children: [\n      title2,\n      badge2 !== void 0 && badge2 !== null && /* @__PURE__ */ jsx(Badge, { tone: \"info\", className: styles$5.titleBadge, children: badge2 })\n    ] }) }),\n    /* @__PURE__ */ jsxs(\"div\", { className: styles$5.tableHeaderActions, children: [\n      showSearch && /* @__PURE__ */ jsx(\"div\", { className: styles$5.searchWrapper, children: /* @__PURE__ */ jsx(\n        TextInput,\n        {\n          size: \"medium\",\n          placeholder: isRTL ? \"ابحث باسم العنصر أو معرّفه...\" : \"Search by item name or ID...\",\n          value: searchQuery,\n          onChange: (e) => onSearchChange == null ? void 0 : onSearchChange(e.target.value),\n          prefix: /* @__PURE__ */ jsx(IconSearch, { size: 16 }),\n          hideLabel: true,\n          fullWidth: true\n        }\n      ) }),\n      showFilters && /* @__PURE__ */ jsx(\n        Button,\n        {\n          variant: \"tertiary\",\n          tone: isFilterBarVisible ? \"neutral\" : \"neutral\",\n          onClick: handleFilterClick,\n          prefixIcon: /* @__PURE__ */ jsx(IconAdjustmentsHorizontal, { size: 16 }),\n          size: \"medium\",\n          className: isFilterBarVisible ? styles$5.filterButtonActive : \"\",\n          children: isRTL ? \"تصفية\" : \"Filters\"\n        }\n      ),\n      showExport && /* @__PURE__ */ jsx(\n        Button,\n        {\n          variant: \"tertiary\",\n          tone: \"neutral\",\n          onClick: onExport,\n          prefixIcon: /* @__PURE__ */ jsx(IconFileExport, { size: 16 }),\n          size: \"medium\",\n          children: isRTL ? \"تصدير CSV\" : \"Export CSV\"\n        }\n      )\n    ] })\n  ] }) });\n};\nconst TableHeaderCell = ({\n  children,\n  isSortable = false,\n  sortDirection = false,\n  onSort,\n  showCheckbox = false,\n  isChecked = false,\n  onCheckboxChange,\n  showHelp = false,\n  helpText: helpText2,\n  className = \"\"\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const handleSort = (e) => {\n    if (isSortable && onSort) {\n      e.preventDefault();\n      onSort();\n    }\n  };\n  const handleCheckboxChange = (checked) => {\n    onCheckboxChange == null ? void 0 : onCheckboxChange(checked === true);\n  };\n  const renderSortIcon = () => {\n    if (!isSortable) return null;\n    if (sortDirection === \"asc\") {\n      return /* @__PURE__ */ jsx(IconArrowUp, { className: styles$5.sortIcon, size: 16 });\n    }\n    if (sortDirection === \"desc\") {\n      return /* @__PURE__ */ jsx(IconArrowDown, { className: styles$5.sortIcon, size: 16 });\n    }\n    return /* @__PURE__ */ jsx(\"span\", { className: styles$5.sortIconDefault, children: /* @__PURE__ */ jsx(IconArrowUp, { className: styles$5.sortIconInactive, size: 16 }) });\n  };\n  return /* @__PURE__ */ jsx(\n    \"th\",\n    {\n      className: clsx(\n        styles$5.tableHeaderCell,\n        isSortable && styles$5.sortable,\n        isSortable && sortDirection && styles$5.activeSorted,\n        className\n      ),\n      onClick: isSortable ? handleSort : void 0,\n      role: isSortable ? \"button\" : void 0,\n      tabIndex: isSortable ? 0 : void 0,\n      \"aria-sort\": sortDirection ? sortDirection === \"asc\" ? \"ascending\" : \"descending\" : void 0,\n      children: /* @__PURE__ */ jsxs(\"div\", { className: styles$5.headerCellContent, children: [\n        showCheckbox && /* @__PURE__ */ jsx(\"div\", { className: styles$5.headerCheckbox, children: /* @__PURE__ */ jsx(\n          Checkbox,\n          {\n            checked: isChecked,\n            onCheckedChange: handleCheckboxChange\n          }\n        ) }),\n        typeof children === \"string\" ? /* @__PURE__ */ jsx(\"span\", { className: styles$5.headerCellLabel, style: lineHeightStyle, children }) : children,\n        isSortable && renderSortIcon(),\n        showHelp && helpText2 && /* @__PURE__ */ jsx(\"div\", { className: styles$5.helpIconWrapper, title: helpText2, children: /* @__PURE__ */ jsx(IconHelp, { className: styles$5.helpIcon, size: 16 }) })\n      ] })\n    }\n  );\n};\nconst TableCell = ({\n  children,\n  isStriped = false,\n  isGridCell = false,\n  className = \"\",\n  onClick\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  return /* @__PURE__ */ jsx(\n    \"td\",\n    {\n      className: clsx(\n        styles$5.tableCell,\n        isStriped && styles$5.striped,\n        isGridCell && styles$5.gridCell,\n        className\n      ),\n      onClick,\n      children: typeof children === \"string\" ? /* @__PURE__ */ jsx(\"span\", { className: styles$5.cellText, style: lineHeightStyle, children }) : children\n    }\n  );\n};\nconst TableContentCase = ({\n  type,\n  message\n}) => {\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const defaultMessages = {\n    error: isRTL ? \"خطأ في استرجاع البيانات. لا تقلق، هذا خطأنا. يرجى المحاولة مرة أخرى لاحقاً\" : \"Error in data retrieving. Don't worry, it's our fault. Please try again later\",\n    empty: isRTL ? \"لا توجد سجلات للعرض\" : \"There are no records to display.\",\n    notFound: isRTL ? \"لا توجد نتائج متاحة للعنصر المطلوب\" : \"No available results for the searched item\",\n    loading: isRTL ? \"جارٍ تحميل البيانات...\" : \"Loading data...\"\n  };\n  const renderIcon = () => {\n    switch (type) {\n      case \"error\":\n        return /* @__PURE__ */ jsx(IconCloudOff, { size: 48, className: styles$5.contentCaseIcon });\n      case \"empty\":\n        return /* @__PURE__ */ jsx(IconPackageOff, { size: 48, className: styles$5.contentCaseIcon });\n      case \"notFound\":\n        return /* @__PURE__ */ jsx(IconSearch, { size: 48, className: styles$5.contentCaseIcon });\n      case \"loading\":\n        return /* @__PURE__ */ jsx(IconLoader2, { size: 48, className: clsx(styles$5.contentCaseIcon, styles$5.spinnerIcon) });\n      default:\n        return null;\n    }\n  };\n  const displayMessage = message || defaultMessages[type];\n  return /* @__PURE__ */ jsx(\"div\", { className: styles$5.contentCaseContainer, children: /* @__PURE__ */ jsxs(\"div\", { className: styles$5.contentCaseContent, children: [\n    renderIcon(),\n    /* @__PURE__ */ jsx(\"p\", { className: styles$5.contentCaseMessage, style: lineHeightStyle, children: displayMessage })\n  ] }) });\n};\nconst Table = ({\n  data,\n  columns,\n  title: title2,\n  badge: badge2,\n  pagination: pagination2,\n  striped: striped2 = true,\n  gridCells: gridCells2 = false,\n  showHeader = true,\n  showTabs = false,\n  showPagination = true,\n  showSearch = true,\n  showFilters = true,\n  showFilterBar: defaultShowFilterBar = false,\n  showExport = false,\n  showTotalBadge = true,\n  defaultSorting = [],\n  defaultColumnVisibility = {},\n  onRowClick,\n  onCellClick,\n  tabItems = [],\n  tableTabs = [],\n  onTabChange,\n  state = \"normal\",\n  errorMessage: errorMessage2,\n  emptyMessage,\n  notFoundMessage,\n  searchQuery = \"\",\n  onSearchChange,\n  onExport,\n  activeFilters = {},\n  onFilterChange,\n  filterOptions = {},\n  className = \"\",\n  footerContent: footerContent2,\n  emptyStateNode\n}) => {\n  const [sorting, setSorting] = useState(defaultSorting);\n  const [columnVisibility, setColumnVisibility] = useState(defaultColumnVisibility);\n  const [globalFilter, setGlobalFilter] = useState(searchQuery);\n  const [isFilterBarVisible, setIsFilterBarVisible] = useState(defaultShowFilterBar);\n  const [internalPagination, setInternalPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10\n  });\n  const usingEnhancedTabs = tableTabs.length > 0;\n  const initialActiveTab = useMemo(() => {\n    var _a, _b;\n    if (usingEnhancedTabs) {\n      const activeTabItem = tableTabs.find((tab) => tab.active);\n      if (activeTabItem) return activeTabItem.id;\n      return ((_a = tableTabs[0]) == null ? void 0 : _a.id) || \"\";\n    }\n    if (tabItems.length > 0) {\n      const activeTabItem = tabItems.find((tab) => tab.active);\n      if (activeTabItem) return activeTabItem.id;\n      return ((_b = tabItems[0]) == null ? void 0 : _b.id) || \"\";\n    }\n    return \"\";\n  }, [tableTabs, tabItems, usingEnhancedTabs]);\n  const [activeTab, setActiveTab] = useState(initialActiveTab);\n  const activeTabConfig = useMemo(() => {\n    if (!usingEnhancedTabs) return null;\n    return tableTabs.find((tab) => tab.id === activeTab) || null;\n  }, [activeTab, tableTabs, usingEnhancedTabs]);\n  const activeData = useMemo(() => {\n    if (usingEnhancedTabs && (activeTabConfig == null ? void 0 : activeTabConfig.data)) {\n      return activeTabConfig.data;\n    }\n    return data;\n  }, [data, activeTabConfig, usingEnhancedTabs]);\n  const activeColumns = useMemo(() => {\n    if (usingEnhancedTabs && (activeTabConfig == null ? void 0 : activeTabConfig.columns)) {\n      return activeTabConfig.columns;\n    }\n    return columns;\n  }, [columns, activeTabConfig, usingEnhancedTabs]);\n  const activeTitle = useMemo(() => {\n    if (usingEnhancedTabs && (activeTabConfig == null ? void 0 : activeTabConfig.title)) {\n      return activeTabConfig.title;\n    }\n    return title2;\n  }, [title2, activeTabConfig, usingEnhancedTabs]);\n  const activePagination = useMemo(() => {\n    if (usingEnhancedTabs && (activeTabConfig == null ? void 0 : activeTabConfig.pagination)) {\n      return activeTabConfig.pagination;\n    }\n    return pagination2;\n  }, [pagination2, activeTabConfig, usingEnhancedTabs]);\n  useEffect(() => {\n    setGlobalFilter(searchQuery);\n  }, [searchQuery]);\n  const tabsForDisplay = useMemo(() => {\n    if (usingEnhancedTabs) {\n      return tableTabs.map((tab) => ({\n        id: tab.id,\n        label: tab.label,\n        active: tab.id === activeTab,\n        badge: tab.badge\n      }));\n    } else {\n      return tabItems.map((tab) => ({\n        id: tab.id,\n        label: tab.label,\n        active: tab.id === activeTab,\n        badge: tab.badge\n      }));\n    }\n  }, [tableTabs, tabItems, activeTab, usingEnhancedTabs]);\n  const table2 = useReactTable({\n    data: activeData,\n    columns: activeColumns,\n    state: {\n      sorting,\n      columnVisibility,\n      globalFilter,\n      // Use either provided pagination or internal pagination state\n      pagination: activePagination ? {\n        pageIndex: activePagination.pageIndex,\n        pageSize: activePagination.pageSize\n      } : internalPagination\n    },\n    onSortingChange: setSorting,\n    onColumnVisibilityChange: setColumnVisibility,\n    onGlobalFilterChange: (value2) => {\n      setGlobalFilter(String(value2));\n      onSearchChange == null ? void 0 : onSearchChange(String(value2));\n    },\n    // Unified approach to handle pagination changes\n    onPaginationChange: (updater) => {\n      const newPagination = typeof updater === \"function\" ? updater(activePagination ? {\n        pageIndex: activePagination.pageIndex,\n        pageSize: activePagination.pageSize\n      } : internalPagination) : updater;\n      if (activePagination) {\n        activePagination.onPageChange(newPagination.pageIndex);\n        if (activePagination.onPageSizeChange && newPagination.pageSize !== activePagination.pageSize) {\n          activePagination.onPageSizeChange(newPagination.pageSize);\n        }\n      } else {\n        setInternalPagination(newPagination);\n      }\n    },\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    // Always use pagination model for consistent behavior\n    getPaginationRowModel: getPaginationRowModel(),\n    // Indicate if using manual pagination (e.g., server-side)\n    manualPagination: !!activePagination,\n    // Pagination page count\n    pageCount: (activePagination == null ? void 0 : activePagination.pageCount) ?? Math.ceil(activeData.length / ((activePagination == null ? void 0 : activePagination.pageSize) || internalPagination.pageSize))\n  });\n  const handleTabChange = (tabId) => {\n    setActiveTab(tabId);\n    setInternalPagination({\n      pageIndex: 0,\n      pageSize: internalPagination.pageSize\n    });\n    onTabChange == null ? void 0 : onTabChange(tabId);\n  };\n  const handleFilterClick = () => {\n    setIsFilterBarVisible(!isFilterBarVisible);\n  };\n  const handleFilterChange = (name, value2) => {\n    const newFilters = { ...activeFilters, [name]: value2 };\n    onFilterChange == null ? void 0 : onFilterChange(newFilters);\n  };\n  const handleFilterRemove = (name) => {\n    const newFilters = { ...activeFilters };\n    delete newFilters[name];\n    onFilterChange == null ? void 0 : onFilterChange(newFilters);\n  };\n  const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n  const lineHeightStyle = {\n    lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n  };\n  const effectiveBadge = useMemo(() => {\n    if (!showTotalBadge) return void 0;\n    if (badge2 !== void 0) return badge2;\n    return table2.getPrePaginationRowModel().rows.length;\n  }, [badge2, table2, showTotalBadge]);\n  const hasActiveFilters = Object.keys(activeFilters).length > 0;\n  const currentPagination = activePagination || internalPagination;\n  const renderContent = () => {\n    if (state === \"error\") {\n      return /* @__PURE__ */ jsx(TableContentCase, { type: \"error\", message: errorMessage2 });\n    }\n    if (state === \"loading\") {\n      return /* @__PURE__ */ jsx(TableContentCase, { type: \"loading\" });\n    }\n    if (state === \"notFound\") {\n      return /* @__PURE__ */ jsx(TableContentCase, { type: \"notFound\", message: notFoundMessage });\n    }\n    if (state === \"empty\" || activeData.length === 0) {\n      if (emptyStateNode) {\n        return emptyStateNode;\n      }\n      return /* @__PURE__ */ jsx(TableContentCase, { type: \"empty\", message: emptyMessage });\n    }\n    return /* @__PURE__ */ jsxs(\"table\", { className: styles$5.table, children: [\n      /* @__PURE__ */ jsx(\"thead\", { className: styles$5.tableHead, children: table2.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsx(\"tr\", { children: headerGroup.headers.map((header2) => {\n        var _a;\n        return /* @__PURE__ */ jsx(\n          TableHeaderCell,\n          {\n            isSortable: header2.column.getCanSort(),\n            sortDirection: header2.column.getIsSorted(),\n            onSort: () => header2.column.toggleSorting(),\n            className: (_a = header2.column.columnDef.meta) == null ? void 0 : _a.headerClassName,\n            children: header2.isPlaceholder ? null : flexRender(\n              header2.column.columnDef.header,\n              header2.getContext()\n            )\n          },\n          header2.id\n        );\n      }) }, headerGroup.id)) }),\n      /* @__PURE__ */ jsx(\"tbody\", { children: table2.getRowModel().rows.map((row, rowIndex) => {\n        const isEvenRow = rowIndex % 2 === 0;\n        return /* @__PURE__ */ jsx(\n          \"tr\",\n          {\n            className: clsx(\n              styles$5.tableRow,\n              onRowClick && styles$5.clickableRow\n            ),\n            onClick: () => onRowClick == null ? void 0 : onRowClick(row),\n            children: row.getVisibleCells().map((cell) => {\n              var _a;\n              return /* @__PURE__ */ jsx(\n                TableCell,\n                {\n                  isStriped: striped2 && !isEvenRow,\n                  isGridCell: gridCells2,\n                  className: (_a = cell.column.columnDef.meta) == null ? void 0 : _a.cellClassName,\n                  onClick: () => onCellClick == null ? void 0 : onCellClick(cell),\n                  children: flexRender(\n                    cell.column.columnDef.cell,\n                    cell.getContext()\n                  )\n                },\n                cell.id\n              );\n            })\n          },\n          row.id\n        );\n      }) })\n    ] });\n  };\n  return /* @__PURE__ */ jsxs(\n    \"div\",\n    {\n      className: clsx(\n        styles$5.tableContainer,\n        striped2 && styles$5.striped,\n        gridCells2 && styles$5.gridCells,\n        isFilterBarVisible && styles$5.tableWithActiveFilter,\n        className\n      ),\n      children: [\n        showTabs && tabsForDisplay.length > 0 && /* @__PURE__ */ jsx(\"div\", { className: styles$5.tabsContainer, children: /* @__PURE__ */ jsx(\n          Tabs,\n          {\n            defaultValue: activeTab,\n            onValueChange: handleTabChange,\n            value: activeTab,\n            dir: isRTL ? \"rtl\" : \"ltr\",\n            children: /* @__PURE__ */ jsx(TabsList, { className: styles$5.tabsList, children: tabsForDisplay.map((tab) => /* @__PURE__ */ jsx(\n              TabsTrigger,\n              {\n                value: tab.id,\n                badge: tab.badge,\n                className: styles$5.tabTrigger,\n                children: tab.label\n              },\n              tab.id\n            )) })\n          }\n        ) }),\n        showHeader && /* @__PURE__ */ jsx(\n          TableHeader,\n          {\n            title: hasActiveFilters && activeTitle ? `Filtered ${activeTitle}` : activeTitle,\n            badge: effectiveBadge,\n            showSearch,\n            showFilters,\n            showExport,\n            searchQuery,\n            onSearchChange,\n            onFilterClick: handleFilterClick,\n            onExport,\n            isFilterBarVisible\n          }\n        ),\n        isFilterBarVisible && showFilters && Object.keys(filterOptions).length > 0 && /* @__PURE__ */ jsxs(\"div\", { className: styles$5.filterBar, children: [\n          /* @__PURE__ */ jsx(\"div\", { className: styles$5.filterBarLabel, style: lineHeightStyle, children: isRTL ? \"تصفية:\" : \"Filters:\" }),\n          /* @__PURE__ */ jsx(\"div\", { className: styles$5.filterItems, children: Object.keys(filterOptions).map((filterKey) => /* @__PURE__ */ jsx(\n            FilterItem,\n            {\n              name: filterKey,\n              label: filterOptions[filterKey].label,\n              value: activeFilters[filterKey],\n              options: filterOptions[filterKey].options,\n              onChange: handleFilterChange,\n              removable: true,\n              onRemove: handleFilterRemove\n            },\n            filterKey\n          )) })\n        ] }),\n        /* @__PURE__ */ jsx(\"div\", { className: styles$5.tableContent, children: renderContent() }),\n        showPagination && state === \"normal\" && activeData.length > 0 && /* @__PURE__ */ jsx(\"div\", { className: styles$5.paginationContainer, children: /* @__PURE__ */ jsx(\n          Pagination,\n          {\n            total: table2.getPrePaginationRowModel().rows.length,\n            current: currentPagination.pageIndex + 1,\n            pageSize: currentPagination.pageSize,\n            onChange: (page) => {\n              if (activePagination) {\n                activePagination.onPageChange(page - 1);\n              } else {\n                table2.setPageIndex(page - 1);\n              }\n            },\n            onPageSizeChange: (newPageSize) => {\n              if (activePagination && activePagination.onPageSizeChange) {\n                activePagination.onPageSizeChange(newPageSize);\n              } else {\n                table2.setPageSize(newPageSize);\n              }\n            },\n            pageSizeOptions: (activePagination == null ? void 0 : activePagination.pageSizeOptions) || [10, 20, 50, 100],\n            showRowsInPage: true,\n            showCount: true\n          }\n        ) }),\n        footerContent2 && /* @__PURE__ */ jsx(\"div\", { className: styles$5.footerContent, children: footerContent2 })\n      ]\n    }\n  );\n};\nconst root = \"Switch-module__root___Y5Ydi\";\nconst sizeSm = \"Switch-module__sizeSm___MvsLM\";\nconst sizeMd = \"Switch-module__sizeMd___bXgKq\";\nconst disabled$1 = \"Switch-module__disabled___2aZ0V\";\nconst pressed = \"Switch-module__pressed___h2m9-\";\nconst thumb = \"Switch-module__thumb___-FTeK\";\nconst thumbSm = \"Switch-module__thumbSm___1OEvv\";\nconst thumbMd = \"Switch-module__thumbMd___7CDM3\";\nconst thumbPressed = \"Switch-module__thumbPressed___V6o5j\";\nconst styles$4 = {\n  root,\n  sizeSm,\n  sizeMd,\n  disabled: disabled$1,\n  pressed,\n  thumb,\n  thumbSm,\n  thumbMd,\n  thumbPressed\n};\nconst Switch = React__default.forwardRef(({\n  pressed: pressed2,\n  defaultPressed,\n  size = \"md\",\n  onPressedChange,\n  className,\n  ...props\n}, ref) => {\n  const [internalPressed, setInternalPressed] = React__default.useState(defaultPressed || false);\n  const isPressed = pressed2 !== void 0 ? pressed2 : internalPressed;\n  const handleCheckedChange = (checked) => {\n    if (pressed2 === void 0) {\n      setInternalPressed(checked);\n    }\n    if (onPressedChange) {\n      onPressedChange(checked);\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    SwitchPrimitive.Root,\n    {\n      ref,\n      checked: isPressed,\n      onCheckedChange: handleCheckedChange,\n      className: clsx(\n        styles$4.root,\n        size === \"sm\" ? styles$4.sizeSm : styles$4.sizeMd,\n        isPressed && styles$4.pressed,\n        props.disabled && styles$4.disabled,\n        className\n      ),\n      ...props,\n      children: /* @__PURE__ */ jsx(\n        SwitchPrimitive.Thumb,\n        {\n          className: clsx(\n            styles$4.thumb,\n            size === \"sm\" ? styles$4.thumbSm : styles$4.thumbMd,\n            isPressed && styles$4.thumbPressed\n          )\n        }\n      )\n    }\n  );\n});\nSwitch.displayName = \"Switch\";\nconst overlay = \"Modal-module__overlay___dd9h1\";\nconst overlayShow = \"Modal-module__overlayShow___bRlH2\";\nconst content$1 = \"Modal-module__content___dWO-B\";\nconst contentShow = \"Modal-module__contentShow___i4mYd\";\nconst rtl = \"Modal-module__rtl___bwk5n\";\nconst fullscreen = \"Modal-module__fullscreen___o84Xi\";\nconst header = \"Modal-module__header___ILG9i\";\nconst title = \"Modal-module__title___A5OeE\";\nconst closeButton = \"Modal-module__closeButton___3LpSf\";\nconst body = \"Modal-module__body___lVhql\";\nconst footer = \"Modal-module__footer___rro2w\";\nconst footerButtonGroup = \"Modal-module__footerButtonGroup___LwkTX\";\nconst footerSwapArea = \"Modal-module__footerSwapArea___-E3PJ\";\nconst footerStyleDefault = \"Modal-module__footerStyleDefault___I-FEX\";\nconst footerStyleStyle1 = \"Modal-module__footerStyleStyle1___pHG9p\";\nconst footerStyleStyle2 = \"Modal-module__footerStyleStyle2___I5i5-\";\nconst overlayHide = \"Modal-module__overlayHide___l686E\";\nconst contentHide = \"Modal-module__contentHide___yBwyR\";\nconst contentHideRtl = \"Modal-module__contentHideRtl___SmdsH\";\nconst contentShowRtl = \"Modal-module__contentShowRtl___IU7-e\";\nconst styles$3 = {\n  overlay,\n  overlayShow,\n  content: content$1,\n  contentShow,\n  rtl,\n  fullscreen,\n  header,\n  title,\n  closeButton,\n  body,\n  footer,\n  footerButtonGroup,\n  footerSwapArea,\n  footerStyleDefault,\n  footerStyleStyle1,\n  footerStyleStyle2,\n  overlayHide,\n  contentHide,\n  contentHideRtl,\n  contentShowRtl\n};\nconst Modal = ({\n  children,\n  trigger: trigger2,\n  title: title2 = \"Title\",\n  showTitle = true,\n  showFooter = true,\n  footerStyle = \"default\",\n  cancelLabel = \"Cancel\",\n  confirmLabel = \"Label\",\n  size = \"default\",\n  rtl: rtl2 = false,\n  onCancel,\n  onConfirm,\n  ...props\n}) => {\n  return /* @__PURE__ */ jsxs(DialogPrimitive.Root, { ...props, children: [\n    trigger2 && /* @__PURE__ */ jsx(DialogPrimitive.Trigger, { asChild: true, children: trigger2 }),\n    /* @__PURE__ */ jsxs(DialogPrimitive.Portal, { children: [\n      /* @__PURE__ */ jsx(DialogPrimitive.Overlay, { className: styles$3.overlay }),\n      /* @__PURE__ */ jsxs(\n        DialogPrimitive.Content,\n        {\n          className: clsx(styles$3.content, {\n            [styles$3.fullscreen]: size === \"fullscreen\",\n            [styles$3.rtl]: rtl2\n          }),\n          dir: rtl2 ? \"rtl\" : \"ltr\",\n          children: [\n            showTitle && /* @__PURE__ */ jsxs(\"div\", { className: styles$3.header, children: [\n              /* @__PURE__ */ jsx(DialogPrimitive.Title, { className: styles$3.title, children: title2 }),\n              /* @__PURE__ */ jsx(DialogPrimitive.Close, { className: styles$3.closeButton, \"aria-label\": \"Close\", children: /* @__PURE__ */ jsx(IconX, { size: 18 }) })\n            ] }),\n            /* @__PURE__ */ jsx(\"div\", { className: styles$3.body, children }),\n            showFooter && /* @__PURE__ */ jsxs(\"div\", { className: clsx(styles$3.footer, styles$3[`footerStyle${footerStyle.charAt(0).toUpperCase() + footerStyle.slice(1)}`]), children: [\n              footerStyle === \"default\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n                /* @__PURE__ */ jsx(\n                  Button,\n                  {\n                    variant: \"secondary\",\n                    onClick: onCancel,\n                    children: cancelLabel\n                  }\n                ),\n                /* @__PURE__ */ jsx(\n                  Button,\n                  {\n                    variant: \"primary\",\n                    onClick: onConfirm,\n                    children: confirmLabel\n                  }\n                )\n              ] }),\n              footerStyle === \"style1\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n                /* @__PURE__ */ jsx(\"div\", { className: styles$3.footerSwapArea, children: \"Swap\" }),\n                /* @__PURE__ */ jsxs(\"div\", { className: styles$3.footerButtonGroup, children: [\n                  /* @__PURE__ */ jsx(\n                    Button,\n                    {\n                      variant: \"secondary\",\n                      onClick: onCancel,\n                      children: cancelLabel\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\n                    Button,\n                    {\n                      variant: \"primary\",\n                      onClick: onConfirm,\n                      children: confirmLabel\n                    }\n                  )\n                ] })\n              ] }),\n              footerStyle === \"style2\" && /* @__PURE__ */ jsxs(\"div\", { className: styles$3.footerButtonGroup, children: [\n                /* @__PURE__ */ jsx(\n                  Button,\n                  {\n                    variant: \"secondary\",\n                    onClick: onCancel,\n                    children: cancelLabel\n                  }\n                ),\n                /* @__PURE__ */ jsx(\n                  Button,\n                  {\n                    variant: \"primary\",\n                    onClick: onConfirm,\n                    children: confirmLabel\n                  }\n                )\n              ] })\n            ] })\n          ]\n        }\n      )\n    ] })\n  ] });\n};\nconst container$1 = \"AspectRatio-module__container___5rmdW\";\nconst fallback = \"AspectRatio-module__fallback___zgJv4\";\nconst styles$2 = {\n  container: container$1,\n  fallback\n};\nconst supportsAspectRatio = () => {\n  if (typeof window === \"undefined\") return true;\n  return CSS.supports(\"aspect-ratio\", \"1\");\n};\nconst AspectRatio = forwardRef(({\n  ratio = 1,\n  className = \"\",\n  children,\n  style = {},\n  ...props\n}, ref) => {\n  const containerRef = useRef(null);\n  const hasAspectRatioSupport = supportsAspectRatio();\n  const combinedStyle = hasAspectRatioSupport ? {\n    aspectRatio: `${ratio}`,\n    ...style\n  } : {\n    ...style\n  };\n  useEffect(() => {\n    if (hasAspectRatioSupport || !containerRef.current) return;\n    const paddingTop = `${1 / ratio * 100}%`;\n    containerRef.current.style.setProperty(\"padding-top\", paddingTop);\n    const child = containerRef.current.firstElementChild;\n    if (child) {\n      child.style.position = \"absolute\";\n      child.style.top = \"0\";\n      child.style.left = \"0\";\n      child.style.width = \"100%\";\n      child.style.height = \"100%\";\n    }\n    return () => {\n      if (containerRef.current) {\n        containerRef.current.style.removeProperty(\"padding-top\");\n      }\n    };\n  }, [ratio, hasAspectRatioSupport]);\n  const setRefs = (element) => {\n    containerRef.current = element;\n    if (ref) {\n      if (typeof ref === \"function\") {\n        ref(element);\n      } else {\n        ref.current = element;\n      }\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      ref: setRefs,\n      className: clsx(styles$2.container, !hasAspectRatioSupport && styles$2.fallback, className),\n      style: combinedStyle,\n      ...props,\n      children\n    }\n  );\n});\nAspectRatio.displayName = \"AspectRatio\";\nconst separator = \"Separator-module__separator___mz39H\";\nconst horizontal = \"Separator-module__horizontal___c0qRI\";\nconst vertical = \"Separator-module__vertical___w39FN\";\nconst subtle = \"Separator-module__subtle___EeSAV\";\nconst bold = \"Separator-module__bold___OmjPz\";\nconst large = \"Separator-module__large___RSKMw\";\nconst styles$1 = {\n  separator,\n  horizontal,\n  vertical,\n  subtle,\n  bold,\n  large\n};\nconst separatorOrientations = [\"horizontal\", \"vertical\"];\nconst Separator = forwardRef(({\n  orientation = \"horizontal\",\n  decorative = false,\n  className,\n  ...props\n}, ref) => {\n  const ariaAttributes = decorative ? { role: \"presentation\" } : {\n    role: \"separator\",\n    \"aria-orientation\": orientation\n  };\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      ref,\n      className: clsx(\n        styles$1.separator,\n        styles$1[orientation],\n        className\n      ),\n      ...ariaAttributes,\n      ...props\n    }\n  );\n});\nSeparator.displayName = \"Separator\";\nconst container = \"Select-module__container___a-BT8\";\nconst fullWidth = \"Select-module__fullWidth___l-JJV\";\nconst labelContainer = \"Select-module__labelContainer___kBmqH\";\nconst label = \"Select-module__label___Lmgos\";\nconst selectedValue = \"Select-module__selectedValue___zKc6M\";\nconst required = \"Select-module__required___PvDVJ\";\nconst optional = \"Select-module__optional___-z0tF\";\nconst trigger = \"Select-module__trigger___ECKfC\";\nconst disabled = \"Select-module__disabled___8YgjS\";\nconst prefix = \"Select-module__prefix___EM20i\";\nconst value = \"Select-module__value___7CDNo\";\nconst icon = \"Select-module__icon___H40zZ\";\nconst sizeMicro = \"Select-module__sizeMicro___ho9T4\";\nconst sizeMedium = \"Select-module__sizeMedium___hnZDV\";\nconst sizeLarge = \"Select-module__sizeLarge___eBA1T\";\nconst content = \"Select-module__content___sO3OP\";\nconst fadeIn = \"Select-module__fadeIn___naBPt\";\nconst viewport = \"Select-module__viewport___HOGMk\";\nconst scrollButton = \"Select-module__scrollButton___z43KF\";\nconst item = \"Select-module__item___UFqs6\";\nconst itemDisabled = \"Select-module__itemDisabled___fbOIQ\";\nconst itemText = \"Select-module__itemText___ZStmS\";\nconst itemIndicator = \"Select-module__itemIndicator___A3hVE\";\nconst error = \"Select-module__error___sw9MU\";\nconst errorMessage = \"Select-module__errorMessage___lCseN\";\nconst errorIcon = \"Select-module__errorIcon___Hd-Us\";\nconst helpText = \"Select-module__helpText___G2Kuw\";\nconst searchContainer = \"Select-module__searchContainer___9p1aa\";\nconst searchInput = \"Select-module__searchInput___mqRgu\";\nconst noResults = \"Select-module__noResults___G8hwT\";\nconst styles = {\n  container,\n  fullWidth,\n  labelContainer,\n  label,\n  selectedValue,\n  required,\n  optional,\n  trigger,\n  disabled,\n  prefix,\n  value,\n  icon,\n  sizeMicro,\n  sizeMedium,\n  sizeLarge,\n  content,\n  fadeIn,\n  viewport,\n  scrollButton,\n  item,\n  itemDisabled,\n  itemText,\n  itemIndicator,\n  error,\n  errorMessage,\n  errorIcon,\n  helpText,\n  searchContainer,\n  searchInput,\n  noResults\n};\nconst Select = forwardRef(\n  ({\n    label: label2,\n    helpText: helpText2,\n    errorMessage: errorMessage2,\n    size = \"medium\",\n    fullWidth: fullWidth2 = false,\n    hideLabel = false,\n    optional: optional2 = false,\n    placeholder = \"Select an option...\",\n    options = [],\n    value: value2,\n    defaultValue,\n    onValueChange,\n    disabled: disabled2 = false,\n    required: required2 = false,\n    name,\n    className,\n    id,\n    prefix: prefix2,\n    searchable = false,\n    searchPlaceholder = \"Search options...\",\n    ...props\n  }, ref) => {\n    const uniqueId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const isRTL = document.dir === \"rtl\" || document.documentElement.dir === \"rtl\";\n    const lineHeightStyle = {\n      lineHeight: isRTL ? \"var(--t-line-height-arabic, 1.2)\" : \"var(--t-line-height-english, 1.5)\"\n    };\n    const filteredOptions = useMemo(() => {\n      if (!searchable || !searchTerm.trim()) {\n        return options;\n      }\n      return options.filter(\n        (option2) => option2.label.toLowerCase().includes(searchTerm.toLowerCase()) || option2.value.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }, [options, searchTerm, searchable]);\n    const hasError = !!errorMessage2;\n    const sizeClass = `size${size.charAt(0).toUpperCase() + size.slice(1)}`;\n    const selectedOption = options.find((option2) => option2.value === value2) || options.find((option2) => option2.value === defaultValue);\n    const shouldShowLabel = label2 && !hideLabel;\n    return /* @__PURE__ */ jsx(\n      Form.Root,\n      {\n        className: clsx(\n          styles.container,\n          styles[sizeClass],\n          hasError && styles.error,\n          fullWidth2 && styles.fullWidth,\n          className\n        ),\n        children: /* @__PURE__ */ jsxs(Form.Field, { name: name || \"select-field\", children: [\n          shouldShowLabel && /* @__PURE__ */ jsxs(\"div\", { className: styles.labelContainer, children: [\n            /* @__PURE__ */ jsxs(Form.Label, { className: styles.label, style: lineHeightStyle, children: [\n              label2,\n              required2 && /* @__PURE__ */ jsx(\"span\", { className: styles.required, children: \"*\" }),\n              optional2 && /* @__PURE__ */ jsx(\"span\", { className: styles.optional, children: \"(Optional)\" })\n            ] }),\n            selectedOption && /* @__PURE__ */ jsx(\"span\", { className: styles.selectedValue, style: lineHeightStyle, children: selectedOption.label })\n          ] }),\n          /* @__PURE__ */ jsxs(\n            SelectPrimitive.Root,\n            {\n              value: value2,\n              defaultValue,\n              onValueChange,\n              disabled: disabled2,\n              required: required2,\n              name,\n              children: [\n                /* @__PURE__ */ jsxs(\n                  SelectPrimitive.Trigger,\n                  {\n                    ref,\n                    id: uniqueId,\n                    className: clsx(\n                      styles.trigger,\n                      disabled2 && styles.disabled,\n                      prefix2 && styles.withPrefix\n                    ),\n                    \"aria-invalid\": hasError,\n                    \"aria-describedby\": `${uniqueId}-helptext ${uniqueId}-error`,\n                    ...props,\n                    children: [\n                      prefix2 && /* @__PURE__ */ jsx(\"div\", { className: styles.prefix, children: prefix2 }),\n                      /* @__PURE__ */ jsx(\n                        SelectPrimitive.Value,\n                        {\n                          className: styles.value,\n                          placeholder,\n                          style: lineHeightStyle\n                        }\n                      ),\n                      /* @__PURE__ */ jsx(SelectPrimitive.Icon, { className: styles.icon, children: /* @__PURE__ */ jsx(IconChevronDown, { size: 18 }) })\n                    ]\n                  }\n                ),\n                /* @__PURE__ */ jsx(SelectPrimitive.Portal, { children: /* @__PURE__ */ jsxs(\n                  SelectPrimitive.Content,\n                  {\n                    className: styles.content,\n                    position: \"popper\",\n                    sideOffset: 4,\n                    alignOffset: 0,\n                    children: [\n                      /* @__PURE__ */ jsx(SelectPrimitive.ScrollUpButton, { className: styles.scrollButton, children: /* @__PURE__ */ jsx(IconChevronUp, { size: 16 }) }),\n                      /* @__PURE__ */ jsxs(SelectPrimitive.Viewport, { className: styles.viewport, children: [\n                        searchable && /* @__PURE__ */ jsx(\"div\", { className: styles.searchContainer, children: /* @__PURE__ */ jsx(\n                          TextInput,\n                          {\n                            placeholder: searchPlaceholder,\n                            value: searchTerm,\n                            onChange: (e) => setSearchTerm(e.target.value),\n                            prefix: /* @__PURE__ */ jsx(IconSearch, { size: 16 }),\n                            size: \"micro\",\n                            hideLabel: true,\n                            className: styles.searchInput\n                          }\n                        ) }),\n                        filteredOptions.length === 0 && searchable && searchTerm ? /* @__PURE__ */ jsx(\"div\", { className: styles.noResults, children: \"No options found\" }) : filteredOptions.map((option2) => /* @__PURE__ */ jsxs(\n                          SelectPrimitive.Item,\n                          {\n                            value: option2.value,\n                            disabled: option2.disabled,\n                            className: clsx(\n                              styles.item,\n                              option2.disabled && styles.itemDisabled\n                            ),\n                            children: [\n                              /* @__PURE__ */ jsx(\n                                SelectPrimitive.ItemText,\n                                {\n                                  className: styles.itemText,\n                                  style: lineHeightStyle,\n                                  children: option2.label\n                                }\n                              ),\n                              /* @__PURE__ */ jsx(SelectPrimitive.ItemIndicator, { className: styles.itemIndicator, children: /* @__PURE__ */ jsx(IconCheck, { size: 16 }) })\n                            ]\n                          },\n                          option2.value\n                        ))\n                      ] }),\n                      /* @__PURE__ */ jsx(SelectPrimitive.ScrollDownButton, { className: styles.scrollButton, children: /* @__PURE__ */ jsx(IconChevronDown, { size: 16 }) })\n                    ]\n                  }\n                ) })\n              ]\n            }\n          ),\n          hasError ? /* @__PURE__ */ jsxs(\"div\", { id: `${uniqueId}-error`, className: styles.errorMessage, style: lineHeightStyle, children: [\n            /* @__PURE__ */ jsx(IconExclamationCircle, { size: 16, className: styles.errorIcon }),\n            errorMessage2\n          ] }) : helpText2 ? /* @__PURE__ */ jsx(\"div\", { id: `${uniqueId}-helptext`, className: styles.helpText, style: lineHeightStyle, children: helpText2 }) : null\n        ] })\n      }\n    );\n  }\n);\nSelect.displayName = \"Select\";\nconst selectSizes = [\"micro\", \"medium\", \"large\"];\nconst ThemeContext = createContext(void 0);\nconst getLocaleFromDirection = (direction) => {\n  return direction === \"rtl\" ? \"ar\" : \"en\";\n};\nconst ThemeProvider = ({\n  children,\n  defaultTheme = \"tagaddod\",\n  defaultDirection = \"ltr\",\n  defaultLocale,\n  storageKey = \"tagaddod-theme\"\n}) => {\n  const initialLocale = defaultLocale || getLocaleFromDirection(defaultDirection);\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem(storageKey);\n      if (stored) {\n        try {\n          const { theme: theme2 } = JSON.parse(stored);\n          return theme2 || defaultTheme;\n        } catch {\n          return defaultTheme;\n        }\n      }\n    }\n    return defaultTheme;\n  });\n  const [direction, setDirection] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem(storageKey);\n      if (stored) {\n        try {\n          const { direction: direction2 } = JSON.parse(stored);\n          return direction2 || defaultDirection;\n        } catch {\n          return defaultDirection;\n        }\n      }\n    }\n    return defaultDirection;\n  });\n  const [locale, setLocale] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem(storageKey);\n      if (stored) {\n        try {\n          const { locale: locale2 } = JSON.parse(stored);\n          return locale2 || initialLocale;\n        } catch {\n          return initialLocale;\n        }\n      }\n    }\n    return initialLocale;\n  });\n  useEffect(() => {\n    if (typeof document !== \"undefined\") {\n      const root2 = document.documentElement;\n      root2.setAttribute(\"data-theme\", theme);\n      root2.setAttribute(\"lang\", locale);\n      root2.setAttribute(\"dir\", direction);\n      document.dir = direction;\n      document.documentElement.lang = locale;\n      localStorage.setItem(storageKey, JSON.stringify({ theme, direction, locale }));\n    }\n  }, [theme, direction, locale, storageKey]);\n  useEffect(() => {\n    const expectedLocale = getLocaleFromDirection(direction);\n    if (locale !== expectedLocale) {\n      setLocale(expectedLocale);\n    }\n  }, [direction, locale]);\n  const value2 = {\n    theme,\n    setTheme,\n    direction,\n    setDirection,\n    locale,\n    setLocale\n  };\n  return /* @__PURE__ */ jsx(ThemeContext.Provider, { value: value2, children });\n};\nconst useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === void 0) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\nconst useThemeClasses = () => {\n  const { theme, direction, locale } = useTheme();\n  return {\n    theme,\n    direction,\n    locale,\n    isRTL: direction === \"rtl\",\n    themeClass: `theme-${theme}`,\n    dirClass: `dir-${direction}`,\n    localeClass: `locale-${locale}`\n  };\n};\nexport {\n  AspectRatio,\n  Avatar,\n  Badge,\n  Button,\n  Checkbox,\n  TabsContent as Content,\n  Drawer,\n  TabsList as List,\n  Listbox,\n  ListboxOption,\n  Modal,\n  Pagination,\n  Popover,\n  PopoverArrow,\n  PopoverClose,\n  PopoverContent,\n  PopoverRoot,\n  PopoverTrigger,\n  RadioButtonItem,\n  RadioGroup,\n  TabsRoot as Root,\n  Select,\n  Separator,\n  Switch,\n  Table,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  TextInput,\n  ThemeContext,\n  ThemeProvider,\n  TabsTrigger as Trigger,\n  avatarSizes,\n  avatarTypes,\n  badgeSizes,\n  badgeTones,\n  buttonSizes,\n  buttonTones,\n  buttonVariants,\n  drawerPositions,\n  drawerSizes,\n  selectSizes,\n  separatorOrientations,\n  tabsCounts,\n  tabsVariants,\n  textInputSizes,\n  usePagination,\n  useTheme,\n  useThemeClasses\n};\n//# sourceMappingURL=index.js.map\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Label as LabelPrimitive } from '@radix-ui/react-label';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P> = P & { __scopeForm?: Scope };\nconst [createFormContext, createFormScope] = createContextScope('Form');\n\n/* -------------------------------------------------------------------------------------------------\n * Form\n * -----------------------------------------------------------------------------------------------*/\n\nconst FORM_NAME = 'Form';\n\ntype ValidityMap = { [fieldName: string]: ValidityState | undefined };\ntype CustomMatcherEntriesMap = { [fieldName: string]: CustomMatcherEntry[] };\ntype CustomErrorsMap = { [fieldName: string]: Record<string, boolean> };\n\ntype ValidationContextValue = {\n  getFieldValidity(fieldName: string): ValidityState | undefined;\n  onFieldValidityChange(fieldName: string, validity: ValidityState): void;\n\n  getFieldCustomMatcherEntries(fieldName: string): CustomMatcherEntry[];\n  onFieldCustomMatcherEntryAdd(fieldName: string, matcherEntry: CustomMatcherEntry): void;\n  onFieldCustomMatcherEntryRemove(fieldName: string, matcherEntryId: string): void;\n\n  getFieldCustomErrors(fieldName: string): Record<string, boolean>;\n  onFieldCustomErrorsChange(fieldName: string, errors: Record<string, boolean>): void;\n\n  onFieldValiditionClear(fieldName: string): void;\n};\nconst [ValidationProvider, useValidationContext] =\n  createFormContext<ValidationContextValue>(FORM_NAME);\n\ntype MessageIdsMap = { [fieldName: string]: Set<string> };\n\ntype AriaDescriptionContextValue = {\n  onFieldMessageIdAdd(fieldName: string, id: string): void;\n  onFieldMessageIdRemove(fieldName: string, id: string): void;\n  getFieldDescription(fieldName: string): string | undefined;\n};\nconst [AriaDescriptionProvider, useAriaDescriptionContext] =\n  createFormContext<AriaDescriptionContextValue>(FORM_NAME);\n\ntype FormElement = React.ComponentRef<typeof Primitive.form>;\ntype PrimitiveFormProps = React.ComponentPropsWithoutRef<typeof Primitive.form>;\ninterface FormProps extends PrimitiveFormProps {\n  onClearServerErrors?(): void;\n}\n\nconst Form = React.forwardRef<FormElement, FormProps>(\n  (props: ScopedProps<FormProps>, forwardedRef) => {\n    const { __scopeForm, onClearServerErrors = () => {}, ...rootProps } = props;\n    const formRef = React.useRef<HTMLFormElement>(null);\n    const composedFormRef = useComposedRefs(forwardedRef, formRef);\n\n    // native validity per field\n    const [validityMap, setValidityMap] = React.useState<ValidityMap>({});\n    const getFieldValidity: ValidationContextValue['getFieldValidity'] = React.useCallback(\n      (fieldName) => validityMap[fieldName],\n      [validityMap]\n    );\n    const handleFieldValidityChange: ValidationContextValue['onFieldValidityChange'] =\n      React.useCallback(\n        (fieldName, validity) =>\n          setValidityMap((prevValidityMap) => ({\n            ...prevValidityMap,\n            [fieldName]: { ...(prevValidityMap[fieldName] ?? {}), ...validity },\n          })),\n        []\n      );\n    const handleFieldValiditionClear: ValidationContextValue['onFieldValiditionClear'] =\n      React.useCallback((fieldName) => {\n        setValidityMap((prevValidityMap) => ({ ...prevValidityMap, [fieldName]: undefined }));\n        setCustomErrorsMap((prevCustomErrorsMap) => ({ ...prevCustomErrorsMap, [fieldName]: {} }));\n      }, []);\n\n    // custom matcher entries per field\n    const [customMatcherEntriesMap, setCustomMatcherEntriesMap] =\n      React.useState<CustomMatcherEntriesMap>({});\n    const getFieldCustomMatcherEntries: ValidationContextValue['getFieldCustomMatcherEntries'] =\n      React.useCallback(\n        (fieldName) => customMatcherEntriesMap[fieldName] ?? [],\n        [customMatcherEntriesMap]\n      );\n    const handleFieldCustomMatcherAdd: ValidationContextValue['onFieldCustomMatcherEntryAdd'] =\n      React.useCallback((fieldName, matcherEntry) => {\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap) => ({\n          ...prevCustomMatcherEntriesMap,\n          [fieldName]: [...(prevCustomMatcherEntriesMap[fieldName] ?? []), matcherEntry],\n        }));\n      }, []);\n    const handleFieldCustomMatcherRemove: ValidationContextValue['onFieldCustomMatcherEntryRemove'] =\n      React.useCallback((fieldName, matcherEntryId) => {\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap) => ({\n          ...prevCustomMatcherEntriesMap,\n          [fieldName]: (prevCustomMatcherEntriesMap[fieldName] ?? []).filter(\n            (matcherEntry) => matcherEntry.id !== matcherEntryId\n          ),\n        }));\n      }, []);\n\n    // custom errors per field\n    const [customErrorsMap, setCustomErrorsMap] = React.useState<CustomErrorsMap>({});\n    const getFieldCustomErrors: ValidationContextValue['getFieldCustomErrors'] = React.useCallback(\n      (fieldName) => customErrorsMap[fieldName] ?? {},\n      [customErrorsMap]\n    );\n    const handleFieldCustomErrorsChange: ValidationContextValue['onFieldCustomErrorsChange'] =\n      React.useCallback((fieldName, customErrors) => {\n        setCustomErrorsMap((prevCustomErrorsMap) => ({\n          ...prevCustomErrorsMap,\n          [fieldName]: { ...(prevCustomErrorsMap[fieldName] ?? {}), ...customErrors },\n        }));\n      }, []);\n\n    // messageIds per field\n    const [messageIdsMap, setMessageIdsMap] = React.useState<MessageIdsMap>({});\n    const handleFieldMessageIdAdd: AriaDescriptionContextValue['onFieldMessageIdAdd'] =\n      React.useCallback((fieldName, id) => {\n        setMessageIdsMap((prevMessageIdsMap) => {\n          const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]).add(id);\n          return { ...prevMessageIdsMap, [fieldName]: fieldDescriptionIds };\n        });\n      }, []);\n    const handleFieldMessageIdRemove: AriaDescriptionContextValue['onFieldMessageIdRemove'] =\n      React.useCallback((fieldName, id) => {\n        setMessageIdsMap((prevMessageIdsMap) => {\n          const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]);\n          fieldDescriptionIds.delete(id);\n          return { ...prevMessageIdsMap, [fieldName]: fieldDescriptionIds };\n        });\n      }, []);\n    const getFieldDescription: AriaDescriptionContextValue['getFieldDescription'] =\n      React.useCallback(\n        (fieldName) => Array.from(messageIdsMap[fieldName] ?? []).join(' ') || undefined,\n        [messageIdsMap]\n      );\n\n    return (\n      <ValidationProvider\n        scope={__scopeForm}\n        getFieldValidity={getFieldValidity}\n        onFieldValidityChange={handleFieldValidityChange}\n        getFieldCustomMatcherEntries={getFieldCustomMatcherEntries}\n        onFieldCustomMatcherEntryAdd={handleFieldCustomMatcherAdd}\n        onFieldCustomMatcherEntryRemove={handleFieldCustomMatcherRemove}\n        getFieldCustomErrors={getFieldCustomErrors}\n        onFieldCustomErrorsChange={handleFieldCustomErrorsChange}\n        onFieldValiditionClear={handleFieldValiditionClear}\n      >\n        <AriaDescriptionProvider\n          scope={__scopeForm}\n          onFieldMessageIdAdd={handleFieldMessageIdAdd}\n          onFieldMessageIdRemove={handleFieldMessageIdRemove}\n          getFieldDescription={getFieldDescription}\n        >\n          <Primitive.form\n            {...rootProps}\n            ref={composedFormRef}\n            // focus first invalid control when the form is submitted\n            onInvalid={composeEventHandlers(props.onInvalid, (event) => {\n              const firstInvalidControl = getFirstInvalidControl(event.currentTarget);\n              if (firstInvalidControl === event.target) firstInvalidControl.focus();\n\n              // prevent default browser UI for form validation\n              event.preventDefault();\n            })}\n            // clear server errors when the form is re-submitted\n            onSubmit={composeEventHandlers(props.onSubmit, onClearServerErrors, {\n              checkForDefaultPrevented: false,\n            })}\n            // clear server errors when the form is reset\n            onReset={composeEventHandlers(props.onReset, onClearServerErrors)}\n          />\n        </AriaDescriptionProvider>\n      </ValidationProvider>\n    );\n  }\n);\n\nForm.displayName = FORM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormField\n * -----------------------------------------------------------------------------------------------*/\n\nconst FIELD_NAME = 'FormField';\n\ntype FormFieldContextValue = {\n  id: string;\n  name: string;\n  serverInvalid: boolean;\n};\nconst [FormFieldProvider, useFormFieldContext] =\n  createFormContext<FormFieldContextValue>(FIELD_NAME);\n\ntype FormFieldElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FormFieldProps extends PrimitiveDivProps {\n  name: string;\n  serverInvalid?: boolean;\n}\n\nconst FormField = React.forwardRef<FormFieldElement, FormFieldProps>(\n  (props: ScopedProps<FormFieldProps>, forwardedRef) => {\n    const { __scopeForm, name, serverInvalid = false, ...fieldProps } = props;\n    const validationContext = useValidationContext(FIELD_NAME, __scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const id = useId();\n\n    return (\n      <FormFieldProvider scope={__scopeForm} id={id} name={name} serverInvalid={serverInvalid}>\n        <Primitive.div\n          data-valid={getValidAttribute(validity, serverInvalid)}\n          data-invalid={getInvalidAttribute(validity, serverInvalid)}\n          {...fieldProps}\n          ref={forwardedRef}\n        />\n      </FormFieldProvider>\n    );\n  }\n);\n\nFormField.displayName = FIELD_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'FormLabel';\n\ntype FormLabelElement = React.ComponentRef<typeof LabelPrimitive>;\ntype LabelProps = React.ComponentPropsWithoutRef<typeof LabelPrimitive>;\ninterface FormLabelProps extends LabelProps {}\n\nconst FormLabel = React.forwardRef<FormLabelElement, FormLabelProps>(\n  (props: ScopedProps<FormLabelProps>, forwardedRef) => {\n    const { __scopeForm, ...labelProps } = props;\n    const validationContext = useValidationContext(LABEL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(LABEL_NAME, __scopeForm);\n    const htmlFor = labelProps.htmlFor || fieldContext.id;\n    const validity = validationContext.getFieldValidity(fieldContext.name);\n\n    return (\n      <LabelPrimitive\n        data-valid={getValidAttribute(validity, fieldContext.serverInvalid)}\n        data-invalid={getInvalidAttribute(validity, fieldContext.serverInvalid)}\n        {...labelProps}\n        ref={forwardedRef}\n        htmlFor={htmlFor}\n      />\n    );\n  }\n);\n\nFormLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormControl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTROL_NAME = 'FormControl';\n\ntype FormControlElement = React.ComponentRef<typeof Primitive.input>;\ntype PrimitiveInputProps = React.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface FormControlProps extends PrimitiveInputProps {}\n\nconst FormControl = React.forwardRef<FormControlElement, FormControlProps>(\n  (props: ScopedProps<FormControlProps>, forwardedRef) => {\n    const { __scopeForm, ...controlProps } = props;\n\n    const validationContext = useValidationContext(CONTROL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(CONTROL_NAME, __scopeForm);\n    const ariaDescriptionContext = useAriaDescriptionContext(CONTROL_NAME, __scopeForm);\n\n    const ref = React.useRef<FormControlElement>(null);\n    const composedRef = useComposedRefs(forwardedRef, ref);\n    const name = controlProps.name || fieldContext.name;\n    const id = controlProps.id || fieldContext.id;\n    const customMatcherEntries = validationContext.getFieldCustomMatcherEntries(name);\n\n    const { onFieldValidityChange, onFieldCustomErrorsChange, onFieldValiditionClear } =\n      validationContext;\n    const updateControlValidity = React.useCallback(\n      async (control: FormControlElement) => {\n        //------------------------------------------------------------------------------------------\n        // 1. first, if we have built-in errors we stop here\n\n        if (hasBuiltInError(control.validity)) {\n          const controlValidity = validityStateToObject(control.validity);\n          onFieldValidityChange(name, controlValidity);\n          return;\n        }\n\n        //------------------------------------------------------------------------------------------\n        // 2. then gather the form data to give to custom matchers for cross-comparisons\n\n        const formData = control.form ? new FormData(control.form) : new FormData();\n        const matcherArgs: CustomMatcherArgs = [control.value, formData];\n\n        //------------------------------------------------------------------------------------------\n        // 3. split sync and async custom matcher entries\n\n        const syncCustomMatcherEntries: Array<SyncCustomMatcherEntry> = [];\n        const ayncCustomMatcherEntries: Array<AsyncCustomMatcherEntry> = [];\n        customMatcherEntries.forEach((customMatcherEntry) => {\n          if (isAsyncCustomMatcherEntry(customMatcherEntry, matcherArgs)) {\n            ayncCustomMatcherEntries.push(customMatcherEntry);\n          } else if (isSyncCustomMatcherEntry(customMatcherEntry)) {\n            syncCustomMatcherEntries.push(customMatcherEntry);\n          }\n        });\n\n        //------------------------------------------------------------------------------------------\n        // 4. run sync custom matchers and update control validity / internal validity + errors\n\n        const syncCustomErrors = syncCustomMatcherEntries.map(({ id, match }) => {\n          return [id, match(...matcherArgs)] as const;\n        });\n        const syncCustomErrorsById = Object.fromEntries(syncCustomErrors);\n        const hasSyncCustomErrors = Object.values(syncCustomErrorsById).some(Boolean);\n        const hasCustomError = hasSyncCustomErrors;\n        control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : '');\n        const controlValidity = validityStateToObject(control.validity);\n        onFieldValidityChange(name, controlValidity);\n        onFieldCustomErrorsChange(name, syncCustomErrorsById);\n\n        //------------------------------------------------------------------------------------------\n        // 5. run async custom matchers and update control validity / internal validity + errors\n\n        if (!hasSyncCustomErrors && ayncCustomMatcherEntries.length > 0) {\n          const promisedCustomErrors = ayncCustomMatcherEntries.map(({ id, match }) =>\n            match(...matcherArgs).then((matches) => [id, matches] as const)\n          );\n          const asyncCustomErrors = await Promise.all(promisedCustomErrors);\n          const asyncCustomErrorsById = Object.fromEntries(asyncCustomErrors);\n          const hasAsyncCustomErrors = Object.values(asyncCustomErrorsById).some(Boolean);\n          const hasCustomError = hasAsyncCustomErrors;\n          control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : '');\n          const controlValidity = validityStateToObject(control.validity);\n          onFieldValidityChange(name, controlValidity);\n          onFieldCustomErrorsChange(name, asyncCustomErrorsById);\n        }\n      },\n      [customMatcherEntries, name, onFieldCustomErrorsChange, onFieldValidityChange]\n    );\n\n    React.useEffect(() => {\n      const control = ref.current;\n      if (control) {\n        // We only want validate on change (native `change` event, not React's `onChange`). This is primarily\n        // a UX decision, we don't want to validate on every keystroke and React's `onChange` is the `input` event.\n        const handleChange = () => updateControlValidity(control);\n        control.addEventListener('change', handleChange);\n        return () => control.removeEventListener('change', handleChange);\n      }\n    }, [updateControlValidity]);\n\n    const resetControlValidity = React.useCallback(() => {\n      const control = ref.current;\n      if (control) {\n        control.setCustomValidity('');\n        onFieldValiditionClear(name);\n      }\n    }, [name, onFieldValiditionClear]);\n\n    // reset validity and errors when the form is reset\n    React.useEffect(() => {\n      const form = ref.current?.form;\n      if (form) {\n        form.addEventListener('reset', resetControlValidity);\n        return () => form.removeEventListener('reset', resetControlValidity);\n      }\n    }, [resetControlValidity]);\n\n    // focus first invalid control when fields are set as invalid by server\n    React.useEffect(() => {\n      const control = ref.current;\n      const form = control?.closest('form');\n      if (form && fieldContext.serverInvalid) {\n        const firstInvalidControl = getFirstInvalidControl(form);\n        if (firstInvalidControl === control) firstInvalidControl.focus();\n      }\n    }, [fieldContext.serverInvalid]);\n\n    const validity = validationContext.getFieldValidity(name);\n\n    return (\n      <Primitive.input\n        data-valid={getValidAttribute(validity, fieldContext.serverInvalid)}\n        data-invalid={getInvalidAttribute(validity, fieldContext.serverInvalid)}\n        aria-invalid={fieldContext.serverInvalid ? true : undefined}\n        aria-describedby={ariaDescriptionContext.getFieldDescription(name)}\n        // disable default browser behaviour of showing built-in error message on hover\n        title=\"\"\n        {...controlProps}\n        ref={composedRef}\n        id={id}\n        name={name}\n        onInvalid={composeEventHandlers(props.onInvalid, (event) => {\n          const control = event.currentTarget;\n          updateControlValidity(control);\n        })}\n        onChange={composeEventHandlers(props.onChange, (_event) => {\n          // reset validity when user changes value\n          resetControlValidity();\n        })}\n      />\n    );\n  }\n);\n\nFormControl.displayName = CONTROL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormMessage\n * -----------------------------------------------------------------------------------------------*/\n\nconst _validityMatchers = [\n  'badInput',\n  'patternMismatch',\n  'rangeOverflow',\n  'rangeUnderflow',\n  'stepMismatch',\n  'tooLong',\n  'tooShort',\n  'typeMismatch',\n  'valid',\n  'valueMissing',\n] as const;\ntype ValidityMatcher = (typeof _validityMatchers)[number];\n\nconst DEFAULT_INVALID_MESSAGE = 'This value is not valid';\nconst DEFAULT_BUILT_IN_MESSAGES: Record<ValidityMatcher, string | undefined> = {\n  badInput: DEFAULT_INVALID_MESSAGE,\n  patternMismatch: 'This value does not match the required pattern',\n  rangeOverflow: 'This value is too large',\n  rangeUnderflow: 'This value is too small',\n  stepMismatch: 'This value does not match the required step',\n  tooLong: 'This value is too long',\n  tooShort: 'This value is too short',\n  typeMismatch: 'This value does not match the required type',\n  valid: undefined,\n  valueMissing: 'This value is missing',\n};\n\nconst MESSAGE_NAME = 'FormMessage';\n\ntype FormMessageElement = FormMessageImplElement;\ninterface FormMessageProps extends Omit<FormMessageImplProps, 'name'> {\n  match?: ValidityMatcher | CustomMatcher;\n  forceMatch?: boolean;\n  name?: string;\n}\n\nconst FormMessage = React.forwardRef<FormMessageElement, FormMessageProps>(\n  (props: ScopedProps<FormMessageProps>, forwardedRef) => {\n    const { match, name: nameProp, ...messageProps } = props;\n    const fieldContext = useFormFieldContext(MESSAGE_NAME, props.__scopeForm);\n    const name = nameProp ?? fieldContext.name;\n\n    if (match === undefined) {\n      return (\n        <FormMessageImpl {...messageProps} ref={forwardedRef} name={name}>\n          {props.children || DEFAULT_INVALID_MESSAGE}\n        </FormMessageImpl>\n      );\n    } else if (typeof match === 'function') {\n      return <FormCustomMessage match={match} {...messageProps} ref={forwardedRef} name={name} />;\n    } else {\n      return <FormBuiltInMessage match={match} {...messageProps} ref={forwardedRef} name={name} />;\n    }\n  }\n);\n\nFormMessage.displayName = MESSAGE_NAME;\n\ntype FormBuiltInMessageElement = FormMessageImplElement;\ninterface FormBuiltInMessageProps extends FormMessageImplProps {\n  match: ValidityMatcher;\n  forceMatch?: boolean;\n  name: string;\n}\n\nconst FormBuiltInMessage = React.forwardRef<FormBuiltInMessageElement, FormBuiltInMessageProps>(\n  (props: ScopedProps<FormBuiltInMessageProps>, forwardedRef) => {\n    const { match, forceMatch = false, name, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const matches = forceMatch || validity?.[match];\n\n    if (matches) {\n      return (\n        <FormMessageImpl ref={forwardedRef} {...messageProps} name={name}>\n          {children ?? DEFAULT_BUILT_IN_MESSAGES[match]}\n        </FormMessageImpl>\n      );\n    }\n\n    return null;\n  }\n);\n\ntype FormCustomMessageElement = React.ComponentRef<typeof FormMessageImpl>;\ninterface FormCustomMessageProps extends React.ComponentPropsWithoutRef<typeof FormMessageImpl> {\n  match: CustomMatcher;\n  forceMatch?: boolean;\n  name: string;\n}\n\nconst FormCustomMessage = React.forwardRef<FormCustomMessageElement, FormCustomMessageProps>(\n  (props: ScopedProps<FormCustomMessageProps>, forwardedRef) => {\n    const { match, forceMatch = false, name, id: idProp, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const ref = React.useRef<FormCustomMessageElement>(null);\n    const composedRef = useComposedRefs(forwardedRef, ref);\n    const _id = useId();\n    const id = idProp ?? _id;\n\n    const customMatcherEntry = React.useMemo(() => ({ id, match }), [id, match]);\n    const { onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove } = validationContext;\n    React.useEffect(() => {\n      onFieldCustomMatcherEntryAdd(name, customMatcherEntry);\n      return () => onFieldCustomMatcherEntryRemove(name, customMatcherEntry.id);\n    }, [customMatcherEntry, name, onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove]);\n\n    const validity = validationContext.getFieldValidity(name);\n    const customErrors = validationContext.getFieldCustomErrors(name);\n    const hasMatchingCustomError = customErrors[id];\n    const matches =\n      forceMatch || (validity && !hasBuiltInError(validity) && hasMatchingCustomError);\n\n    if (matches) {\n      return (\n        <FormMessageImpl id={id} ref={composedRef} {...messageProps} name={name}>\n          {children ?? DEFAULT_INVALID_MESSAGE}\n        </FormMessageImpl>\n      );\n    }\n\n    return null;\n  }\n);\n\ntype FormMessageImplElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface FormMessageImplProps extends PrimitiveSpanProps {\n  name: string;\n}\n\nconst FormMessageImpl = React.forwardRef<FormMessageImplElement, FormMessageImplProps>(\n  (props: ScopedProps<FormMessageImplProps>, forwardedRef) => {\n    const { __scopeForm, id: idProp, name, ...messageProps } = props;\n    const ariaDescriptionContext = useAriaDescriptionContext(MESSAGE_NAME, __scopeForm);\n    const _id = useId();\n    const id = idProp ?? _id;\n\n    const { onFieldMessageIdAdd, onFieldMessageIdRemove } = ariaDescriptionContext;\n    React.useEffect(() => {\n      onFieldMessageIdAdd(name, id);\n      return () => onFieldMessageIdRemove(name, id);\n    }, [name, id, onFieldMessageIdAdd, onFieldMessageIdRemove]);\n\n    return <Primitive.span id={id} {...messageProps} ref={forwardedRef} />;\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * FormValidityState\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALIDITY_STATE_NAME = 'FormValidityState';\n\ninterface FormValidityStateProps {\n  children(validity: ValidityState | undefined): React.ReactNode;\n  name?: string;\n}\n\nconst FormValidityState = (props: ScopedProps<FormValidityStateProps>) => {\n  const { __scopeForm, name: nameProp, children } = props;\n  const validationContext = useValidationContext(VALIDITY_STATE_NAME, __scopeForm);\n  const fieldContext = useFormFieldContext(VALIDITY_STATE_NAME, __scopeForm);\n  const name = nameProp ?? fieldContext.name;\n  const validity = validationContext.getFieldValidity(name);\n  return <>{children(validity)}</>;\n};\n\nFormValidityState.displayName = VALIDITY_STATE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormSubmit\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUBMIT_NAME = 'FormSubmit';\n\ntype FormSubmitElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface FormSubmitProps extends PrimitiveButtonProps {}\n\nconst FormSubmit = React.forwardRef<FormSubmitElement, FormSubmitProps>(\n  (props: ScopedProps<FormSubmitProps>, forwardedRef) => {\n    const { __scopeForm, ...submitProps } = props;\n    return <Primitive.button type=\"submit\" {...submitProps} ref={forwardedRef} />;\n  }\n);\n\nFormSubmit.displayName = SUBMIT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ValidityStateKey = keyof ValidityState;\ntype SyncCustomMatcher = (value: string, formData: FormData) => boolean;\ntype AsyncCustomMatcher = (value: string, formData: FormData) => Promise<boolean>;\ntype CustomMatcher = SyncCustomMatcher | AsyncCustomMatcher;\ntype CustomMatcherEntry = { id: string; match: CustomMatcher };\ntype SyncCustomMatcherEntry = { id: string; match: SyncCustomMatcher };\ntype AsyncCustomMatcherEntry = { id: string; match: AsyncCustomMatcher };\ntype CustomMatcherArgs = [string, FormData];\n\nfunction validityStateToObject(validity: ValidityState) {\n  const object: any = {};\n  for (const key in validity) {\n    object[key] = validity[key as ValidityStateKey];\n  }\n  return object as Record<ValidityStateKey, boolean>;\n}\n\nfunction isHTMLElement(element: any): element is HTMLElement {\n  return element instanceof HTMLElement;\n}\n\nfunction isFormControl(element: any): element is { validity: ValidityState } {\n  return 'validity' in element;\n}\n\nfunction isInvalid(control: HTMLElement) {\n  return (\n    isFormControl(control) &&\n    (control.validity.valid === false || control.getAttribute('aria-invalid') === 'true')\n  );\n}\n\nfunction getFirstInvalidControl(form: HTMLFormElement): HTMLElement | undefined {\n  const elements = form.elements;\n  const [firstInvalidControl] = Array.from(elements).filter(isHTMLElement).filter(isInvalid);\n  return firstInvalidControl;\n}\n\nfunction isAsyncCustomMatcherEntry(\n  entry: CustomMatcherEntry,\n  args: CustomMatcherArgs\n): entry is AsyncCustomMatcherEntry {\n  return entry.match.constructor.name === 'AsyncFunction' || returnsPromise(entry.match, args);\n}\n\nfunction isSyncCustomMatcherEntry(entry: CustomMatcherEntry): entry is SyncCustomMatcherEntry {\n  return entry.match.constructor.name === 'Function';\n}\n\nfunction returnsPromise(func: Function, args: Array<unknown>) {\n  return func(...args) instanceof Promise;\n}\n\nfunction hasBuiltInError(validity: ValidityState) {\n  let error = false;\n  for (const validityKey in validity) {\n    const key = validityKey as ValidityStateKey;\n    if (key !== 'valid' && key !== 'customError' && validity[key]) {\n      error = true;\n      break;\n    }\n  }\n  return error;\n}\n\nfunction getValidAttribute(validity: ValidityState | undefined, serverInvalid: boolean) {\n  if (validity?.valid === true && !serverInvalid) return true;\n  return undefined;\n}\nfunction getInvalidAttribute(validity: ValidityState | undefined, serverInvalid: boolean) {\n  if (validity?.valid === false || serverInvalid) return true;\n  return undefined;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Form;\nconst Field = FormField;\nconst Label = FormLabel;\nconst Control = FormControl;\nconst Message = FormMessage;\nconst ValidityState = FormValidityState;\nconst Submit = FormSubmit;\n\nexport {\n  createFormScope,\n  //\n  Form,\n  FormField,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  FormValidityState,\n  FormSubmit,\n  //\n  Root,\n  Field,\n  Label,\n  Control,\n  Message,\n  ValidityState,\n  Submit,\n};\n\nexport type {\n  FormProps,\n  FormFieldProps,\n  FormLabelProps,\n  FormControlProps,\n  FormMessageProps,\n  FormValidityStateProps,\n  FormSubmitProps,\n};\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst CHECKBOX_NAME = 'Checkbox';\n\ntype ScopedProps<P> = P & { __scopeCheckbox?: Scope };\nconst [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\n\ntype CheckedState = boolean | 'indeterminate';\n\ntype CheckboxContextValue<State extends CheckedState | boolean = CheckedState> = {\n  checked: State | boolean;\n  setChecked: React.Dispatch<React.SetStateAction<State | boolean>>;\n  disabled: boolean | undefined;\n  control: HTMLButtonElement | null;\n  setControl: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\n  name: string | undefined;\n  form: string | undefined;\n  value: string | number | readonly string[];\n  hasConsumerStoppedPropagationRef: React.RefObject<boolean>;\n  required: boolean | undefined;\n  defaultChecked: boolean | undefined;\n  isFormControl: boolean;\n  bubbleInput: HTMLInputElement | null;\n  setBubbleInput: React.Dispatch<React.SetStateAction<HTMLInputElement | null>>;\n};\n\nconst [CheckboxProviderImpl, useCheckboxContext] =\n  createCheckboxContext<CheckboxContextValue>(CHECKBOX_NAME);\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxProvider\n * -----------------------------------------------------------------------------------------------*/\n\ninterface CheckboxProviderProps<State extends CheckedState = CheckedState> {\n  checked?: State | boolean;\n  defaultChecked?: State | boolean;\n  required?: boolean;\n  onCheckedChange?(checked: State | boolean): void;\n  name?: string;\n  form?: string;\n  disabled?: boolean;\n  value?: string | number | readonly string[];\n  children?: React.ReactNode;\n}\n\nfunction CheckboxProvider<State extends CheckedState = CheckedState>(\n  props: ScopedProps<CheckboxProviderProps<State>>\n) {\n  const {\n    __scopeCheckbox,\n    checked: checkedProp,\n    children,\n    defaultChecked,\n    disabled,\n    form,\n    name,\n    onCheckedChange,\n    required,\n    value = 'on',\n    // @ts-expect-error\n    internal_do_not_use_render,\n  } = props;\n\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked ?? false,\n    onChange: onCheckedChange,\n    caller: CHECKBOX_NAME,\n  });\n  const [control, setControl] = React.useState<HTMLButtonElement | null>(null);\n  const [bubbleInput, setBubbleInput] = React.useState<HTMLInputElement | null>(null);\n  const hasConsumerStoppedPropagationRef = React.useRef(false);\n  const isFormControl = control\n    ? !!form || !!control.closest('form')\n    : // We set this to true by default so that events bubble to forms without JS (SSR)\n      true;\n\n  const context: CheckboxContextValue<State> = {\n    checked: checked,\n    disabled: disabled,\n    setChecked: setChecked,\n    control: control,\n    setControl: setControl,\n    name: name,\n    form: form,\n    value: value,\n    hasConsumerStoppedPropagationRef: hasConsumerStoppedPropagationRef,\n    required: required,\n    defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,\n    isFormControl: isFormControl,\n    bubbleInput,\n    setBubbleInput,\n  };\n\n  return (\n    <CheckboxProviderImpl\n      scope={__scopeCheckbox}\n      {...(context as unknown as CheckboxContextValue<CheckedState>)}\n    >\n      {isFunction(internal_do_not_use_render) ? internal_do_not_use_render(context) : children}\n    </CheckboxProviderImpl>\n  );\n}\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CheckboxTrigger';\n\ninterface CheckboxTriggerProps\n  extends Omit<\n    React.ComponentPropsWithoutRef<typeof Primitive.button>,\n    keyof CheckboxProviderProps\n  > {\n  children?: React.ReactNode;\n}\n\nconst CheckboxTrigger = React.forwardRef<HTMLButtonElement, CheckboxTriggerProps>(\n  (\n    { __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }: ScopedProps<CheckboxTriggerProps>,\n    forwardedRef\n  ) => {\n    const {\n      control,\n      value,\n      disabled,\n      checked,\n      required,\n      setControl,\n      setChecked,\n      hasConsumerStoppedPropagationRef,\n      isFormControl,\n      bubbleInput,\n    } = useCheckboxContext(TRIGGER_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setControl);\n\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = control?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener('reset', reset);\n        return () => form.removeEventListener('reset', reset);\n      }\n    }, [control, setChecked]);\n\n    return (\n      <Primitive.button\n        type=\"button\"\n        role=\"checkbox\"\n        aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n        aria-required={required}\n        data-state={getState(checked)}\n        data-disabled={disabled ? '' : undefined}\n        disabled={disabled}\n        value={value}\n        {...checkboxProps}\n        ref={composedRefs}\n        onKeyDown={composeEventHandlers(onKeyDown, (event) => {\n          // According to WAI ARIA, Checkboxes don't activate on enter keypress\n          if (event.key === 'Enter') event.preventDefault();\n        })}\n        onClick={composeEventHandlers(onClick, (event) => {\n          setChecked((prevChecked) => (isIndeterminate(prevChecked) ? true : !prevChecked));\n          if (bubbleInput && isFormControl) {\n            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n            // if checkbox has a bubble input and is a form control, stop\n            // propagation from the button so that we only propagate one click\n            // event (from the input). We propagate changes from an input so\n            // that native form validation works and form events reflect\n            // checkbox updates.\n            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n          }\n        })}\n      />\n    );\n  }\n);\n\nCheckboxTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\n\ntype CheckboxElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CheckboxProps extends Omit<PrimitiveButtonProps, 'checked' | 'defaultChecked'> {\n  checked?: CheckedState;\n  defaultChecked?: CheckedState;\n  required?: boolean;\n  onCheckedChange?(checked: CheckedState): void;\n}\n\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>(\n  (props: ScopedProps<CheckboxProps>, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      value,\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n\n    return (\n      <CheckboxProvider\n        __scopeCheckbox={__scopeCheckbox}\n        checked={checked}\n        defaultChecked={defaultChecked}\n        disabled={disabled}\n        required={required}\n        onCheckedChange={onCheckedChange}\n        name={name}\n        form={form}\n        value={value}\n        // @ts-expect-error\n        internal_do_not_use_render={({ isFormControl }: CheckboxContextValue) => (\n          <>\n            <CheckboxTrigger\n              {...checkboxProps}\n              ref={forwardedRef}\n              // @ts-expect-error\n              __scopeCheckbox={__scopeCheckbox}\n            />\n            {isFormControl && (\n              <CheckboxBubbleInput\n                // @ts-expect-error\n                __scopeCheckbox={__scopeCheckbox}\n              />\n            )}\n          </>\n        )}\n      />\n    );\n  }\n);\n\nCheckbox.displayName = CHECKBOX_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxIndicator';\n\ntype CheckboxIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface CheckboxIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CheckboxIndicator = React.forwardRef<CheckboxIndicatorElement, CheckboxIndicatorProps>(\n  (props: ScopedProps<CheckboxIndicatorProps>, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return (\n      <Presence\n        present={forceMount || isIndeterminate(context.checked) || context.checked === true}\n      >\n        <Primitive.span\n          data-state={getState(context.checked)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n          style={{ pointerEvents: 'none', ...props.style }}\n        />\n      </Presence>\n    );\n  }\n);\n\nCheckboxIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'CheckboxBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface CheckboxBubbleInputProps extends Omit<InputProps, 'checked'> {}\n\nconst CheckboxBubbleInput = React.forwardRef<HTMLInputElement, CheckboxBubbleInputProps>(\n  ({ __scopeCheckbox, ...props }: ScopedProps<CheckboxBubbleInputProps>, forwardedRef) => {\n    const {\n      control,\n      hasConsumerStoppedPropagationRef,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      name,\n      value,\n      form,\n      bubbleInput,\n      setBubbleInput,\n    } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);\n\n    const composedRefs = useComposedRefs(forwardedRef, setBubbleInput);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n\n    // Bubble checked change to parents (e.g form change event)\n    React.useEffect(() => {\n      const input = bubbleInput;\n      if (!input) return;\n\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        'checked'\n      ) as PropertyDescriptor;\n      const setChecked = descriptor.set;\n\n      const bubbles = !hasConsumerStoppedPropagationRef.current;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event('click', { bubbles });\n        input.indeterminate = isIndeterminate(checked);\n        setChecked.call(input, isIndeterminate(checked) ? false : checked);\n        input.dispatchEvent(event);\n      }\n    }, [bubbleInput, prevChecked, checked, hasConsumerStoppedPropagationRef]);\n\n    const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n    return (\n      <Primitive.input\n        type=\"checkbox\"\n        aria-hidden\n        defaultChecked={defaultChecked ?? defaultCheckedRef.current}\n        required={required}\n        disabled={disabled}\n        name={name}\n        value={value}\n        form={form}\n        {...props}\n        tabIndex={-1}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          ...controlSize,\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0,\n          margin: 0,\n          // We transform because the input is absolutely positioned but we have\n          // rendered it **after** the button. This pulls it back to sit on top\n          // of the button.\n          transform: 'translateX(-100%)',\n        }}\n      />\n    );\n  }\n);\n\nCheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction isFunction(value: unknown): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nexport {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxProvider,\n  CheckboxTrigger,\n  CheckboxIndicator,\n  CheckboxBubbleInput,\n  //\n  Checkbox as Root,\n  CheckboxProvider as Provider,\n  CheckboxTrigger as Trigger,\n  CheckboxIndicator as Indicator,\n  CheckboxBubbleInput as BubbleInput,\n};\nexport type {\n  CheckboxProps,\n  CheckboxProviderProps,\n  CheckboxTriggerProps,\n  CheckboxIndicatorProps,\n  CheckboxBubbleInputProps,\n  CheckedState,\n};\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ComponentRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? '',\n      caller: TABS_NAME,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { createSlot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentRef: React.RefObject<DialogContentElement | null>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DIALOG_NAME,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst Slot = createSlot('DialogOverlay.RemoveScroll');\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ComponentRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ComponentRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ComponentRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ComponentRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement | null>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useIsHydrated } from '@radix-ui/react-use-is-hydrated';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ComponentRef<typeof Primitive.img>;\ntype PrimitiveImageProps = React.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ComponentRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction resolveLoadingStatus(image: HTMLImageElement | null, src?: string): ImageLoadingStatus {\n  if (!image) {\n    return 'idle';\n  }\n  if (!src) {\n    return 'error';\n  }\n  if (image.src !== src) {\n    image.src = src;\n  }\n  return image.complete && image.naturalWidth > 0 ? 'loaded' : 'loading';\n}\n\nfunction useImageLoadingStatus(\n  src: string | undefined,\n  { referrerPolicy, crossOrigin }: AvatarImageProps\n) {\n  const isHydrated = useIsHydrated();\n  const imageRef = React.useRef<HTMLImageElement | null>(null);\n  const image = (() => {\n    if (!isHydrated) return null;\n    if (!imageRef.current) {\n      imageRef.current = new window.Image();\n    }\n    return imageRef.current;\n  })();\n\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>(() =>\n    resolveLoadingStatus(image, src)\n  );\n\n  useLayoutEffect(() => {\n    setLoadingStatus(resolveLoadingStatus(image, src));\n  }, [image, src]);\n\n  useLayoutEffect(() => {\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      setLoadingStatus(status);\n    };\n\n    if (!image) return;\n\n    const handleLoad = updateStatus('loaded');\n    const handleError = updateStatus('error');\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n    if (typeof crossOrigin === 'string') {\n      image.crossOrigin = crossOrigin;\n    }\n\n    return () => {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    };\n  }, [image, crossOrigin, referrerPolicy]);\n\n  return loadingStatus;\n}\n\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n", "import { useSyncExternalStore } from 'use-sync-external-store/shim';\n\n/**\n * Determines whether or not the component tree has been hydrated.\n */\nexport function useIsHydrated() {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false\n  );\n}\n\nfunction subscribe() {\n  return () => {};\n}\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: POPOVER_NAME,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ComponentRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Slot = createSlot('PopoverContent.RemoveScroll');\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ComponentRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n", "import {\n  AccessorFn,\n  AccessorFnColumnDef,\n  AccessorKeyColumnDef,\n  DisplayColumnDef,\n  GroupColumnDef,\n  IdentifiedColumnDef,\n  RowData,\n} from './types'\nimport { DeepKeys, DeepValue } from './utils'\n\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nexport type ColumnHelper<TData extends RowData> = {\n  accessor: <\n    TAccessor extends AccessorFn<TData> | DeepKeys<TData>,\n    TValue extends TAccessor extends AccessorFn<TData, infer TReturn>\n      ? TReturn\n      : TAccessor extends DeepKeys<TData>\n        ? DeepValue<TData, TAccessor>\n        : never,\n  >(\n    accessor: TAccessor,\n    column: TAccessor extends AccessorFn<TData>\n      ? DisplayColumnDef<TData, TValue>\n      : IdentifiedColumnDef<TData, TValue>\n  ) => TAccessor extends AccessorFn<TData>\n    ? AccessorFnColumnDef<TData, TValue>\n    : AccessorKeyColumnDef<TData, TValue>\n  display: (column: DisplayColumnDef<TData>) => DisplayColumnDef<TData, unknown>\n  group: (column: GroupColumnDef<TData>) => GroupColumnDef<TData, unknown>\n}\n\nexport function createColumnHelper<\n  TData extends RowData,\n>(): ColumnHelper<TData> {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function'\n        ? ({\n            ...column,\n            accessorFn: accessor,\n          } as any)\n        : {\n            ...column,\n            accessorKey: accessor,\n          }\n    },\n    display: column => column,\n    group: column => column,\n  }\n}\n", "import { TableOptionsResolved, TableState, Updater } from './types'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\nexport type RequiredKeys<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<\n  T,\n  keyof U\n> &\n  U\n\nexport type UnionToIntersection<T> = (\n  T extends any ? (x: T) => any : never\n) extends (x: infer R) => any\n  ? R\n  : never\n\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\n\ntype ComputeRange<\n  N extends number,\n  Result extends Array<unknown> = [],\n> = Result['length'] extends N\n  ? Result\n  : ComputeRange<N, [...Result, Result['length']]>\ntype Index40 = ComputeRange<40>[number]\n\n// Is this type a tuple?\ntype IsTuple<T> = T extends readonly any[] & { length: infer Length }\n  ? Length extends Index40\n    ? T\n    : never\n  : never\n\n// If this type is a tuple, what indices are allowed?\ntype AllowedIndexes<\n  Tuple extends ReadonlyArray<any>,\n  Keys extends number = never,\n> = Tuple extends readonly []\n  ? Keys\n  : Tuple extends readonly [infer _, ...infer Tail]\n    ? AllowedIndexes<Tail, Keys | Tail['length']>\n    : Keys\n\nexport type DeepKeys<T, TDepth extends any[] = []> = TDepth['length'] extends 5\n  ? never\n  : unknown extends T\n    ? string\n    : T extends readonly any[] & IsTuple<T>\n      ? AllowedIndexes<T> | DeepKeysPrefix<T, AllowedIndexes<T>, TDepth>\n      : T extends any[]\n        ? DeepKeys<T[number], [...TDepth, any]>\n        : T extends Date\n          ? never\n          : T extends object\n            ? (keyof T & string) | DeepKeysPrefix<T, keyof T, TDepth>\n            : never\n\ntype DeepKeysPrefix<\n  T,\n  TPrefix,\n  TDepth extends any[],\n> = TPrefix extends keyof T & (number | string)\n  ? `${TPrefix}.${DeepKeys<T[TPrefix], [...TDepth, any]> & string}`\n  : never\n\nexport type DeepValue<T, TProp> =\n  T extends Record<string | number, any>\n    ? TProp extends `${infer TBranch}.${infer TDeepProp}`\n      ? DeepValue<T[TBranch], TDeepProp>\n      : T[TProp & string]\n    : never\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport type Getter<TValue> = <TTValue = TValue>() => NoInfer<TTValue>\n\n///\n\nexport function functionalUpdate<T>(updater: Updater<T>, input: T): T {\n  return typeof updater === 'function'\n    ? (updater as (input: T) => T)(input)\n    : updater\n}\n\nexport function noop() {\n  //\n}\n\nexport function makeStateUpdater<K extends keyof TableState>(\n  key: K,\n  instance: unknown\n) {\n  return (updater: Updater<TableState[K]>) => {\n    ;(instance as any).setState(<TTableState>(old: TTableState) => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, (old as any)[key]),\n      }\n    })\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\nexport function isFunction<T extends AnyFunction>(d: any): d is T {\n  return d instanceof Function\n}\n\nexport function isNumberArray(d: any): d is number[] {\n  return Array.isArray(d) && d.every(val => typeof val === 'number')\n}\n\nexport function flattenBy<TNode>(\n  arr: TNode[],\n  getChildren: (item: TNode) => TNode[]\n) {\n  const flat: TNode[] = []\n\n  const recurse = (subArr: TNode[]) => {\n    subArr.forEach(item => {\n      flat.push(item)\n      const children = getChildren(item)\n      if (children?.length) {\n        recurse(children)\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function memo<TDeps extends readonly any[], TDepArgs, TResult>(\n  getDeps: (depArgs?: TDepArgs) => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  }\n): (depArgs?: TDepArgs) => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return depArgs => {\n    let depTime: number\n    if (opts.key && opts.debug) depTime = Date.now()\n\n    const newDeps = getDeps(depArgs)\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug) {\n      if (opts?.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n        const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n        const resultFpsPercentage = resultEndTime / 16\n\n        const pad = (str: number | string, num: number) => {\n          str = String(str)\n          while (str.length < num) {\n            str = ' ' + str\n          }\n          return str\n        }\n\n        console.info(\n          `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n          `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120)\n            )}deg 100% 31%);`,\n          opts?.key\n        )\n      }\n    }\n\n    return result!\n  }\n}\n\nexport function getMemoOptions(\n  tableOptions: Partial<TableOptionsResolved<any>>,\n  debugLevel:\n    | 'debugAll'\n    | 'debugCells'\n    | 'debugTable'\n    | 'debugColumns'\n    | 'debugRows'\n    | 'debugHeaders',\n  key: string,\n  onChange?: (result: any) => void\n) {\n  return {\n    debug: () => tableOptions?.debugAll ?? tableOptions[debugLevel],\n    key: process.env.NODE_ENV === 'development' && key,\n    onChange,\n  }\n}\n", "import { RowData, Cell, Column, Row, Table } from '../types'\nimport { Getter, getMemoOptions, memo } from '../utils'\n\nexport interface CellContext<TData extends RowData, TValue> {\n  cell: Cell<TData, TValue>\n  column: Column<TData, TValue>\n  getValue: Getter<TValue>\n  renderValue: Getter<TValue | null>\n  row: Row<TData>\n  table: Table<TData>\n}\n\nexport interface CoreCell<TData extends RowData, TValue> {\n  /**\n   * The associated Column object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  column: Column<TData, TValue>\n  /**\n   * Returns the rendering context (or props) for cell-based components like cells and aggregated cells. Use these props with your framework's `flexRender` utility to render these using the template of your choice:\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getContext: () => CellContext<TData, TValue>\n  /**\n   * Returns the value for the cell, accessed via the associated column's accessor key or accessor function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getValue: CellContext<TData, TValue>['getValue']\n  /**\n   * The unique ID for the cell across the entire table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  id: string\n  /**\n   * Renders the value for a cell the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  renderValue: CellContext<TData, TValue>['renderValue']\n  /**\n   * The associated Row object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#row)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  row: Row<TData>\n}\n\nexport function createCell<TData extends RowData, TValue>(\n  table: Table<TData>,\n  row: Row<TData>,\n  column: Column<TData, TValue>,\n  columnId: string\n): Cell<TData, TValue> {\n  const getRenderValue = () =>\n    cell.getValue() ?? table.options.renderFallbackValue\n\n  const cell: CoreCell<TData, TValue> = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(\n      () => [table, column, row, cell],\n      (table, column, row, cell) => ({\n        table,\n        column,\n        row,\n        cell: cell as Cell<TData, TValue>,\n        getValue: cell.getValue,\n        renderValue: cell.renderValue,\n      }),\n      getMemoOptions(table.options, 'debugCells', 'cell.getContext')\n    ),\n  }\n\n  table._features.forEach(feature => {\n    feature.createCell?.(\n      cell as Cell<TData, TValue>,\n      column,\n      row as Row<TData>,\n      table\n    )\n  }, {})\n\n  return cell as Cell<TData, TValue>\n}\n", "import {\n  Column,\n  Table,\n  AccessorFn,\n  ColumnDef,\n  RowData,\n  ColumnDefResolved,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport interface CoreColumn<TData extends RowData, TValue> {\n  /**\n   * The resolved accessor function to use when extracting the value for the column from each row. Will only be defined if the column def has a valid accessor key or function defined.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#accessorfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  accessorFn?: AccessorFn<TData, TValue>\n  /**\n   * The original column def used to create the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columndef)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columnDef: ColumnDef<TData, TValue>\n  /**\n   * The child column (if the column is a group column). Will be an empty array if the column is not a group column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columns: Column<TData, TValue>[]\n  /**\n   * The depth of the column (if grouped) relative to the root column def array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  depth: number\n  /**\n   * Returns the flattened array of this column and all child/grand-child columns for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getFlatColumns: () => Column<TData, TValue>[]\n  /**\n   * Returns an array of all leaf-node columns for this column. If a column has no children, it is considered the only leaf-node column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getLeafColumns: () => Column<TData, TValue>[]\n  /**\n   * The resolved unique identifier for the column resolved in this priority:\n      - A manual `id` property from the column def\n      - The accessor key from the column def\n      - The header string from the column def\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  id: string\n  /**\n   * The parent column for this column. Will be undefined if this is a root column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#parent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  parent?: Column<TData, TValue>\n}\n\nexport function createColumn<TData extends RowData, TValue>(\n  table: Table<TData>,\n  columnDef: ColumnDef<TData, TValue>,\n  depth: number,\n  parent?: Column<TData, TValue>\n): Column<TData, TValue> {\n  const defaultColumn = table._getDefaultColumnDef()\n\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef,\n  } as ColumnDefResolved<TData>\n\n  const accessorKey = resolvedColumnDef.accessorKey\n\n  let id =\n    resolvedColumnDef.id ??\n    (accessorKey\n      ? typeof String.prototype.replaceAll === 'function'\n        ? accessorKey.replaceAll('.', '_')\n        : accessorKey.replace(/\\./g, '_')\n      : undefined) ??\n    (typeof resolvedColumnDef.header === 'string'\n      ? resolvedColumnDef.header\n      : undefined)\n\n  let accessorFn: AccessorFn<TData> | undefined\n\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = (originalRow: TData) => {\n        let result = originalRow as Record<string, any>\n\n        for (const key of accessorKey.split('.')) {\n          result = result?.[key]\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(\n              `\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`\n            )\n          }\n        }\n\n        return result\n      }\n    } else {\n      accessorFn = (originalRow: TData) =>\n        (originalRow as any)[resolvedColumnDef.accessorKey]\n    }\n  }\n\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        resolvedColumnDef.accessorFn\n          ? `Columns require an id when using an accessorFn`\n          : `Columns require an id when using a non-string header`\n      )\n    }\n    throw new Error()\n  }\n\n  let column: CoreColumn<TData, any> = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent as any,\n    depth,\n    columnDef: resolvedColumnDef as ColumnDef<TData, any>,\n    columns: [],\n    getFlatColumns: memo(\n      () => [true],\n      () => {\n        return [\n          column as Column<TData, TValue>,\n          ...column.columns?.flatMap(d => d.getFlatColumns()),\n        ]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getFlatColumns')\n    ),\n    getLeafColumns: memo(\n      () => [table._getOrderColumnsFn()],\n      orderColumns => {\n        if (column.columns?.length) {\n          let leafColumns = column.columns.flatMap(column =>\n            column.getLeafColumns()\n          )\n\n          return orderColumns(leafColumns)\n        }\n\n        return [column as Column<TData, TValue>]\n      },\n      getMemoOptions(table.options, 'debugColumns', 'column.getLeafColumns')\n    ),\n  }\n\n  for (const feature of table._features) {\n    feature.createColumn?.(column as Column<TData, TValue>, table)\n  }\n\n  // Yes, we have to convert table to unknown, because we know more than the compiler here.\n  return column as Column<TData, TValue>\n}\n", "import {\n  RowData,\n  Column,\n  Header,\n  HeaderGroup,\n  Table,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nconst debug = 'debugHeaders'\n\nexport interface CoreHeaderGroup<TData extends RowData> {\n  depth: number\n  headers: Header<TData, unknown>[]\n  id: string\n}\n\nexport interface HeaderContext<TData, TValue> {\n  /**\n   * An instance of a column.\n   */\n  column: Column<TData, TValue>\n  /**\n   * An instance of a header.\n   */\n  header: Header<TData, TValue>\n  /**\n   * The table instance.\n   */\n  table: Table<TData>\n}\n\nexport interface CoreHeader<TData extends RowData, TValue> {\n  /**\n   * The col-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#colspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  colSpan: number\n  /**\n   * The header's associated column object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  column: Column<TData, TValue>\n  /**\n   * The depth of the header, zero-indexed based.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  depth: number\n  /**\n   * Returns the rendering context (or props) for column-based components like headers, footers and filters.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getContext: () => HeaderContext<TData, TValue>\n  /**\n   * Returns the leaf headers hierarchically nested under this header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * The header's associated header group object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#headergroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  headerGroup: HeaderGroup<TData>\n  /**\n   * The unique identifier for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  id: string\n  /**\n   * The index for the header within the header group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  index: number\n  /**\n   * A boolean denoting if the header is a placeholder header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#isplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  isPlaceholder: boolean\n  /**\n   * If the header is a placeholder header, this will be a unique header ID that does not conflict with any other headers across the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#placeholderid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  placeholderId?: string\n  /**\n   * The row-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#rowspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  rowSpan: number\n  /**\n   * The header's hierarchical sub/child headers. Will be empty if the header's associated column is a leaf-column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#subheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  subHeaders: Header<TData, TValue>[]\n}\n\nexport interface HeadersInstance<TData extends RowData> {\n  /**\n   * Returns all header groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightHeaderGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns the footer groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFooterGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns headers for all columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFlatHeaders: () => Header<TData, unknown>[]\n\n  /**\n   * Returns headers for all leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightLeafHeaders: () => Header<TData, unknown>[]\n}\n\n//\n\nfunction createHeader<TData extends RowData, TValue>(\n  table: Table<TData>,\n  column: Column<TData, TValue>,\n  options: {\n    id?: string\n    isPlaceholder?: boolean\n    placeholderId?: string\n    index: number\n    depth: number\n  }\n): Header<TData, TValue> {\n  const id = options.id ?? column.id\n\n  let header: CoreHeader<TData, TValue> = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null!,\n    getLeafHeaders: (): Header<TData, unknown>[] => {\n      const leafHeaders: Header<TData, unknown>[] = []\n\n      const recurseHeader = (h: CoreHeader<TData, any>) => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader)\n        }\n        leafHeaders.push(h as Header<TData, unknown>)\n      }\n\n      recurseHeader(header)\n\n      return leafHeaders\n    },\n    getContext: () => ({\n      table,\n      header: header as Header<TData, TValue>,\n      column,\n    }),\n  }\n\n  table._features.forEach(feature => {\n    feature.createHeader?.(header as Header<TData, TValue>, table)\n  })\n\n  return header as Header<TData, TValue>\n}\n\nexport const Headers: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        const leftColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const rightColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const centerColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n\n        const headerGroups = buildHeaderGroups(\n          allColumns,\n          [...leftColumns, ...centerColumns, ...rightColumns],\n          table\n        )\n\n        return headerGroups\n      },\n      getMemoOptions(table.options, debug, 'getHeaderGroups')\n    )\n\n    table.getCenterHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        leafColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n        return buildHeaderGroups(allColumns, leafColumns, table, 'center')\n      },\n      getMemoOptions(table.options, debug, 'getCenterHeaderGroups')\n    )\n\n    table.getLeftHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n      ],\n      (allColumns, leafColumns, left) => {\n        const orderedLeafColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left')\n      },\n      getMemoOptions(table.options, debug, 'getLeftHeaderGroups')\n    )\n\n    table.getRightHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, right) => {\n        const orderedLeafColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right')\n      },\n      getMemoOptions(table.options, debug, 'getRightHeaderGroups')\n    )\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getFooterGroups')\n    )\n\n    table.getLeftFooterGroups = memo(\n      () => [table.getLeftHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFooterGroups')\n    )\n\n    table.getCenterFooterGroups = memo(\n      () => [table.getCenterHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFooterGroups')\n    )\n\n    table.getRightFooterGroups = memo(\n      () => [table.getRightHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      getMemoOptions(table.options, debug, 'getRightFooterGroups')\n    )\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return headerGroups\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getFlatHeaders')\n    )\n\n    table.getLeftFlatHeaders = memo(\n      () => [table.getLeftHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeftFlatHeaders')\n    )\n\n    table.getCenterFlatHeaders = memo(\n      () => [table.getCenterHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getCenterFlatHeaders')\n    )\n\n    table.getRightFlatHeaders = memo(\n      () => [table.getRightHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getRightFlatHeaders')\n    )\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(\n      () => [table.getCenterFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getCenterLeafHeaders')\n    )\n\n    table.getLeftLeafHeaders = memo(\n      () => [table.getLeftFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getLeftLeafHeaders')\n    )\n\n    table.getRightLeafHeaders = memo(\n      () => [table.getRightFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      getMemoOptions(table.options, debug, 'getRightLeafHeaders')\n    )\n\n    table.getLeafHeaders = memo(\n      () => [\n        table.getLeftHeaderGroups(),\n        table.getCenterHeaderGroups(),\n        table.getRightHeaderGroups(),\n      ],\n      (left, center, right) => {\n        return [\n          ...(left[0]?.headers ?? []),\n          ...(center[0]?.headers ?? []),\n          ...(right[0]?.headers ?? []),\n        ]\n          .map(header => {\n            return header.getLeafHeaders()\n          })\n          .flat()\n      },\n      getMemoOptions(table.options, debug, 'getLeafHeaders')\n    )\n  },\n}\n\nexport function buildHeaderGroups<TData extends RowData>(\n  allColumns: Column<TData, unknown>[],\n  columnsToGroup: Column<TData, unknown>[],\n  table: Table<TData>,\n  headerFamily?: 'center' | 'left' | 'right'\n) {\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0\n\n  const findMaxDepth = (columns: Column<TData, unknown>[], depth = 1) => {\n    maxDepth = Math.max(maxDepth, depth)\n\n    columns\n      .filter(column => column.getIsVisible())\n      .forEach(column => {\n        if (column.columns?.length) {\n          findMaxDepth(column.columns, depth + 1)\n        }\n      }, 0)\n  }\n\n  findMaxDepth(allColumns)\n\n  let headerGroups: HeaderGroup<TData>[] = []\n\n  const createHeaderGroup = (\n    headersToGroup: Header<TData, unknown>[],\n    depth: number\n  ) => {\n    // The header group we are creating\n    const headerGroup: HeaderGroup<TData> = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders: Header<TData, unknown>[] = []\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0]\n\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth\n\n      let column: Column<TData, unknown>\n      let isPlaceholder = false\n\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column\n        isPlaceholder = true\n      }\n\n      if (\n        latestPendingParentHeader &&\n        latestPendingParentHeader?.column === column\n      ) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup)\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup?.id]\n            .filter(Boolean)\n            .join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder\n            ? `${pendingParentHeaders.filter(d => d.column === column).length}`\n            : undefined,\n          depth,\n          index: pendingParentHeaders.length,\n        })\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup)\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header)\n      }\n\n      headerGroup.headers.push(headerToGroup)\n      headerToGroup.headerGroup = headerGroup\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1)\n    }\n  }\n\n  const bottomHeaders = columnsToGroup.map((column, index) =>\n    createHeader(table, column, {\n      depth: maxDepth,\n      index,\n    })\n  )\n\n  createHeaderGroup(bottomHeaders, maxDepth - 1)\n\n  headerGroups.reverse()\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = (\n    headers: Header<TData, unknown>[]\n  ): { colSpan: number; rowSpan: number }[] => {\n    const filteredHeaders = headers.filter(header =>\n      header.column.getIsVisible()\n    )\n\n    return filteredHeaders.map(header => {\n      let colSpan = 0\n      let rowSpan = 0\n      let childRowSpans = [0]\n\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = []\n\n        recurseHeadersForSpans(header.subHeaders).forEach(\n          ({ colSpan: childColSpan, rowSpan: childRowSpan }) => {\n            colSpan += childColSpan\n            childRowSpans.push(childRowSpan)\n          }\n        )\n      } else {\n        colSpan = 1\n      }\n\n      const minChildRowSpan = Math.min(...childRowSpans)\n      rowSpan = rowSpan + minChildRowSpan\n\n      header.colSpan = colSpan\n      header.rowSpan = rowSpan\n\n      return { colSpan, rowSpan }\n    })\n  }\n\n  recurseHeadersForSpans(headerGroups[0]?.headers ?? [])\n\n  return headerGroups\n}\n", "import { RowData, Cell, Row, Table } from '../types'\nimport { flattenBy, getMemoOptions, memo } from '../utils'\nimport { createCell } from './cell'\n\nexport interface CoreRow<TData extends RowData> {\n  _getAllCellsByColumnId: () => Record<string, Cell<TData, unknown>>\n  _uniqueValuesCache: Record<string, unknown>\n  _valuesCache: Record<string, unknown>\n  /**\n   * The depth of the row (if nested or grouped) relative to the root row array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  depth: number\n  /**\n   * Returns all of the cells for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getallcells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getAllCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns the leaf rows for the row, not including any parent rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getLeafRows: () => Row<TData>[]\n  /**\n   * Returns the parent row for the row, if it exists.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRow: () => Row<TData> | undefined\n  /**\n   * Returns the parent rows for the row, all the way up to a root row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRows: () => Row<TData>[]\n  /**\n   * Returns a unique array of values from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getuniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getUniqueValues: <TValue>(columnId: string) => TValue[]\n  /**\n   * Returns the value from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getValue: <TValue>(columnId: string) => TValue\n  /**\n   * The resolved unique identifier for the row resolved via the `options.getRowId` option. Defaults to the row's index (or relative index if it is a subRow).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  id: string\n  /**\n   * The index of the row within its parent array (or the root data array).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  index: number\n  /**\n   * The original row object provided to the table. If the row is a grouped row, the original row object will be the first original in the group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#original)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  original: TData\n  /**\n   * An array of the original subRows as returned by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#originalsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  originalSubRows?: TData[]\n  /**\n   * If nested, this row's parent row id.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#parentid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  parentId?: string\n  /**\n   * Renders the value for the row in a given columnId the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  renderValue: <TValue>(columnId: string) => TValue\n  /**\n   * An array of subRows for the row as returned and created by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#subrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  subRows: Row<TData>[]\n}\n\nexport const createRow = <TData extends RowData>(\n  table: Table<TData>,\n  id: string,\n  original: TData,\n  rowIndex: number,\n  depth: number,\n  subRows?: Row<TData>[],\n  parentId?: string\n): Row<TData> => {\n  let row: CoreRow<TData> = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      row._valuesCache[columnId] = column.accessorFn(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._valuesCache[columnId] as any\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)]\n        return row._uniqueValuesCache[columnId]\n      }\n\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._uniqueValuesCache[columnId] as any\n    },\n    renderValue: columnId =>\n      row.getValue(columnId) ?? table.options.renderFallbackValue,\n    subRows: subRows ?? [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () =>\n      row.parentId ? table.getRow(row.parentId, true) : undefined,\n    getParentRows: () => {\n      let parentRows: Row<TData>[] = []\n      let currentRow = row\n      while (true) {\n        const parentRow = currentRow.getParentRow()\n        if (!parentRow) break\n        parentRows.push(parentRow)\n        currentRow = parentRow\n      }\n      return parentRows.reverse()\n    },\n    getAllCells: memo(\n      () => [table.getAllLeafColumns()],\n      leafColumns => {\n        return leafColumns.map(column => {\n          return createCell(table, row as Row<TData>, column, column.id)\n        })\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCells')\n    ),\n\n    _getAllCellsByColumnId: memo(\n      () => [row.getAllCells()],\n      allCells => {\n        return allCells.reduce(\n          (acc, cell) => {\n            acc[cell.column.id] = cell\n            return acc\n          },\n          {} as Record<string, Cell<TData, unknown>>\n        )\n      },\n      getMemoOptions(table.options, 'debugRows', 'getAllCellsByColumnId')\n    ),\n  }\n\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i]\n    feature?.createRow?.(row as Row<TData>, table)\n  }\n\n  return row as Row<TData>\n}\n", "import { RowModel } from '..'\nimport { Column, RowData, Table, TableFeature } from '../types'\n\nexport interface FacetedColumn<TData extends RowData> {\n  _getFacetedMinMaxValues?: () => undefined | [number, number]\n  _getFacetedRowModel?: () => RowModel<TData>\n  _getFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * A function that **computes and returns** a min/max tuple derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedMinMaxValues` function to `options.getFacetedMinMaxValues`. A default implementation is provided via the exported `getFacetedMinMaxValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedminmaxvalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model with all other column filters applied, excluding its own filter. Useful for displaying faceted result counts.\n   * > ⚠️ Requires that you pass a valid `getFacetedRowModel` function to `options.facetedRowModel`. A default implementation is provided via the exported `getFacetedRowModel` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedRowModel: () => RowModel<TData>\n  /**\n   * A function that **computes and returns** a `Map` of unique values and their occurrences derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedUniqueValues` function to `options.getFacetedUniqueValues`. A default implementation is provided via the exported `getFacetedUniqueValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-faceting#getfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-faceting)\n   */\n  getFacetedUniqueValues: () => Map<any, number>\n}\n\nexport interface FacetedOptions<TData extends RowData> {\n  getFacetedMinMaxValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => undefined | [number, number]\n  getFacetedRowModel?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => RowModel<TData>\n  getFacetedUniqueValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => Map<any, number>\n}\n\n//\n\nexport const ColumnFaceting: TableFeature = {\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column._getFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, column.id)\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return column._getFacetedRowModel()\n    }\n    column._getFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, column.id)\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return column._getFacetedUniqueValues()\n    }\n    column._getFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, column.id)\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined\n      }\n\n      return column._getFacetedMinMaxValues()\n    }\n  },\n}\n", "import { FilterFn } from './features/ColumnFiltering'\n\nconst includesString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  const search = filterValue?.toString()?.toLowerCase()\n  return Boolean(\n    row\n      .getValue<string | null>(columnId)\n      ?.toString()\n      ?.toLowerCase()\n      ?.includes(search)\n  )\n}\n\nincludesString.autoRemove = (val: any) => testFalsey(val)\n\nconst includesStringSensitive: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return Boolean(\n    row.getValue<string | null>(columnId)?.toString()?.includes(filterValue)\n  )\n}\n\nincludesStringSensitive.autoRemove = (val: any) => testFalsey(val)\n\nconst equalsString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return (\n    row.getValue<string | null>(columnId)?.toString()?.toLowerCase() ===\n    filterValue?.toLowerCase()\n  )\n}\n\nequalsString.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludes: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue<unknown[]>(columnId)?.includes(filterValue)\n}\n\narrIncludes.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludesAll: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return !filterValue.some(\n    val => !row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesSome: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return filterValue.some(val =>\n    row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst equals: FilterFn<any> = (row, columnId: string, filterValue: unknown) => {\n  return row.getValue(columnId) === filterValue\n}\n\nequals.autoRemove = (val: any) => testFalsey(val)\n\nconst weakEquals: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue(columnId) == filterValue\n}\n\nweakEquals.autoRemove = (val: any) => testFalsey(val)\n\nconst inNumberRange: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: [number, number]\n) => {\n  let [min, max] = filterValue\n\n  const rowValue = row.getValue<number>(columnId)\n  return rowValue >= min && rowValue <= max\n}\n\ninNumberRange.resolveFilterValue = (val: [any, any]) => {\n  let [unsafeMin, unsafeMax] = val\n\n  let parsedMin =\n    typeof unsafeMin !== 'number' ? parseFloat(unsafeMin as string) : unsafeMin\n  let parsedMax =\n    typeof unsafeMax !== 'number' ? parseFloat(unsafeMax as string) : unsafeMax\n\n  let min =\n    unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return [min, max] as const\n}\n\ninNumberRange.autoRemove = (val: any) =>\n  testFalsey(val) || (testFalsey(val[0]) && testFalsey(val[1]))\n\n// Export\n\nexport const filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange,\n}\n\nexport type BuiltInFilterFn = keyof typeof filterFns\n\n// Utils\n\nfunction testFalsey(val: any) {\n  return val === undefined || val === null || val === ''\n}\n", "import { RowModel } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  FilterFns,\n  FilterMeta,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { functionalUpdate, isFunction, makeStateUpdater } from '../utils'\n\nexport interface ColumnFiltersTableState {\n  columnFilters: ColumnFiltersState\n}\n\nexport type ColumnFiltersState = ColumnFilter[]\n\nexport interface ColumnFilter {\n  id: string\n  value: unknown\n}\n\nexport interface ResolvedColumnFilter<TData extends RowData> {\n  filterFn: FilterFn<TData>\n  id: string\n  resolvedValue: unknown\n}\n\nexport interface FilterFn<TData extends RowData> {\n  (\n    row: Row<TData>,\n    columnId: string,\n    filterValue: any,\n    addMeta: (meta: FilterMeta) => void\n  ): boolean\n  autoRemove?: ColumnFilterAutoRemoveTestFn<TData>\n  resolveFilterValue?: TransformFilterValueFn<TData>\n}\n\nexport type TransformFilterValueFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => unknown\n\nexport type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => boolean\n\nexport type CustomFilterFns<TData extends RowData> = Record<\n  string,\n  FilterFn<TData>\n>\n\nexport type FilterFnOption<TData extends RowData> =\n  | 'auto'\n  | BuiltInFilterFn\n  | keyof FilterFns\n  | FilterFn<TData>\n\nexport interface ColumnFiltersColumnDef<TData extends RowData> {\n  /**\n   * Enables/disables the **column** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilter?: boolean\n  /**\n   * The filter function to use with this column. Can be the name of a built-in filter function or a custom filter function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFn?: FilterFnOption<TData>\n}\n\nexport interface ColumnFiltersColumn<TData extends RowData> {\n  /**\n   * Returns an automatically calculated filter function for the column based off of the columns first known value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be **column** filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getcanfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getCanFilter: () => boolean\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the columnId specified.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the index (including `-1`) of the column filter in the table's `state.columnFilters` array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilterindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterIndex: () => number\n  /**\n   * Returns the current filter value for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilterValue: () => unknown\n  /**\n   * Returns whether or not the column is currently filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getisfiltered)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getIsFiltered: () => boolean\n  /**\n   * A function that sets the current filter value for the column. You can pass it a value or an updater function for immutability-safe operations on existing values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setFilterValue: (updater: Updater<any>) => void\n}\n\nexport interface ColumnFiltersRow<TData extends RowData> {\n  /**\n   * The column filters map for the row. This object tracks whether a row is passing/failing specific filters by their column ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFilters: Record<string, boolean>\n  /**\n   * The column filters meta map for the row. This object tracks any filter meta for a row as optionally provided during the filtering process.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#columnfiltersmeta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  columnFiltersMeta: Record<string, FilterMeta>\n}\n\ninterface ColumnFiltersOptionsBase<TData extends RowData> {\n  /**\n   * Enables/disables **column** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablecolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableColumnFilters?: boolean\n  /**\n   * Enables/disables all filtering for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#enablefilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  enableFilters?: boolean\n  /**\n   * By default, filtering is done from parent rows down (so if a parent row is filtered out, all of its children will be filtered out as well). Setting this option to `true` will cause filtering to be done from leaf rows up (which means parent rows will be included so long as one of their child or grand-child rows is also included).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#filterfromleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  filterFromLeafRows?: boolean\n  /**\n   * If provided, this function is called **once** per table and should return a **new function** which will calculate and return the row model for the table when it's filtered.\n   * - For server-side filtering, this function is unnecessary and can be ignored since the server should already return the filtered row model.\n   * - For client-side filtering, this function is required. A default implementation is provided via any table adapter's `{ getFilteredRowModel }` export.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Disables the `getFilteredRowModel` from being used to filter data. This may be useful if your table needs to dynamically support both client-side and server-side filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#manualfiltering)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  manualFiltering?: boolean\n  /**\n   * By default, filtering is done for all rows (max depth of 100), no matter if they are root level parent rows or the child leaf rows of a parent row. Setting this option to `0` will cause filtering to only be applied to the root level parent rows, with all sub-rows remaining unfiltered. Similarly, setting this option to `1` will cause filtering to only be applied to child leaf rows 1 level deep, and so on.\n\n   * This is useful for situations where you want a row's entire child hierarchy to be visible regardless of the applied filter.\n    * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#maxleafrowfilterdepth)\n    * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  maxLeafRowFilterDepth?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnFilters` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#oncolumnfilterschange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  onColumnFiltersChange?: OnChangeFn<ColumnFiltersState>\n}\n\ntype ResolvedFilterFns = keyof FilterFns extends never\n  ? {\n      filterFns?: Record<string, FilterFn<any>>\n    }\n  : {\n      filterFns: Record<keyof FilterFns, FilterFn<any>>\n    }\n\nexport interface ColumnFiltersOptions<TData extends RowData>\n  extends ColumnFiltersOptionsBase<TData>,\n    ResolvedFilterFns {}\n\nexport interface ColumnFiltersInstance<TData extends RowData> {\n  _getFilteredRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getFilteredRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#getprefilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  getPreFilteredRowModel: () => RowModel<TData>\n  /**\n   * Resets the **columnFilters** state to `initialState.columnFilters`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetColumnFilters: (defaultState?: boolean) => void\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnFilters` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setColumnFilters: (updater: Updater<ColumnFiltersState>) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const ColumnFiltering: TableFeature = {\n  getDefaultColumnDef: <\n    TData extends RowData,\n  >(): ColumnFiltersColumnDef<TData> => {\n    return {\n      filterFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): ColumnFiltersTableState => {\n    return {\n      columnFilters: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnFiltersOptions<TData> => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n    } as ColumnFiltersOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return filterFns.includesString\n      }\n\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange\n      }\n\n      if (typeof value === 'boolean') {\n        return filterFns.equals\n      }\n\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals\n      }\n\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes\n      }\n\n      return filterFns.weakEquals\n    }\n    column.getFilterFn = () => {\n      return isFunction(column.columnDef.filterFn)\n        ? column.columnDef.filterFn\n        : column.columnDef.filterFn === 'auto'\n          ? column.getAutoFilterFn()\n          : // @ts-ignore\n            table.options.filterFns?.[column.columnDef.filterFn as string] ??\n            filterFns[column.columnDef.filterFn as BuiltInFilterFn]\n    }\n    column.getCanFilter = () => {\n      return (\n        (column.columnDef.enableColumnFilter ?? true) &&\n        (table.options.enableColumnFilters ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsFiltered = () => column.getFilterIndex() > -1\n\n    column.getFilterValue = () =>\n      table.getState().columnFilters?.find(d => d.id === column.id)?.value\n\n    column.getFilterIndex = () =>\n      table.getState().columnFilters?.findIndex(d => d.id === column.id) ?? -1\n\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn()\n        const previousFilter = old?.find(d => d.id === column.id)\n\n        const newFilter = functionalUpdate(\n          value,\n          previousFilter ? previousFilter.value : undefined\n        )\n\n        //\n        if (\n          shouldAutoRemoveFilter(filterFn as FilterFn<TData>, newFilter, column)\n        ) {\n          return old?.filter(d => d.id !== column.id) ?? []\n        }\n\n        const newFilterObj = { id: column.id, value: newFilter }\n\n        if (previousFilter) {\n          return (\n            old?.map(d => {\n              if (d.id === column.id) {\n                return newFilterObj\n              }\n              return d\n            }) ?? []\n          )\n        }\n\n        if (old?.length) {\n          return [...old, newFilterObj]\n        }\n\n        return [newFilterObj]\n      })\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    _table: Table<TData>\n  ): void => {\n    row.columnFilters = {}\n    row.columnFiltersMeta = {}\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnFilters = (updater: Updater<ColumnFiltersState>) => {\n      const leafColumns = table.getAllLeafColumns()\n\n      const updateFn = (old: ColumnFiltersState) => {\n        return functionalUpdate(updater, old)?.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id)\n\n          if (column) {\n            const filterFn = column.getFilterFn()\n\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      }\n\n      table.options.onColumnFiltersChange?.(updateFn)\n    }\n\n    table.resetColumnFilters = defaultState => {\n      table.setColumnFilters(\n        defaultState ? [] : table.initialState?.columnFilters ?? []\n      )\n    }\n\n    table.getPreFilteredRowModel = () => table.getCoreRowModel()\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table)\n      }\n\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getFilteredRowModel()\n    }\n  },\n}\n\nexport function shouldAutoRemoveFilter<TData extends RowData>(\n  filterFn?: FilterFn<TData>,\n  value?: any,\n  column?: Column<TData, unknown>\n) {\n  return (\n    (filterFn && filterFn.autoRemove\n      ? filterFn.autoRemove(value, column)\n      : false) ||\n    typeof value === 'undefined' ||\n    (typeof value === 'string' && !value)\n  )\n}\n", "import { AggregationFn } from './features/ColumnGrouping'\nimport { isNumberArray } from './utils'\n\nconst sum: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId)\n    return sum + (typeof nextValue === 'number' ? nextValue : 0)\n  }, 0)\n}\n\nconst min: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n\n    if (\n      value != null &&\n      (min! > value || (min === undefined && value >= value))\n    ) {\n      min = value\n    }\n  })\n\n  return min\n}\n\nconst max: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (\n      value != null &&\n      (max! < value || (max === undefined && value >= value))\n    ) {\n      max = value\n    }\n  })\n\n  return max\n}\n\nconst extent: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value\n      } else {\n        if (min > value) min = value\n        if (max! < value) max = value\n      }\n    }\n  })\n\n  return [min, max]\n}\n\nconst mean: AggregationFn<any> = (columnId, leafRows) => {\n  let count = 0\n  let sum = 0\n\n  leafRows.forEach(row => {\n    let value = row.getValue<number>(columnId)\n    if (value != null && (value = +value) >= value) {\n      ++count, (sum += value)\n    }\n  })\n\n  if (count) return sum / count\n\n  return\n}\n\nconst median: AggregationFn<any> = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return\n  }\n\n  const values = leafRows.map(row => row.getValue(columnId))\n  if (!isNumberArray(values)) {\n    return\n  }\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = values.sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1]! + nums[mid]!) / 2\n}\n\nconst unique: AggregationFn<any> = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values())\n}\n\nconst uniqueCount: AggregationFn<any> = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size\n}\n\nconst count: AggregationFn<any> = (_columnId, leafRows) => {\n  return leafRows.length\n}\n\nexport const aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count,\n}\n\nexport type BuiltInAggregationFn = keyof typeof aggregationFns\n", "import { RowModel } from '..'\nimport { BuiltInAggregationFn, aggregationFns } from '../aggregationFns'\nimport {\n  AggregationFns,\n  Cell,\n  Column,\n  ColumnDefTemplate,\n  OnChangeFn,\n  Row,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type GroupingState = string[]\n\nexport interface GroupingTableState {\n  grouping: GroupingState\n}\n\nexport type AggregationFn<TData extends RowData> = (\n  columnId: string,\n  leafRows: Row<TData>[],\n  childRows: Row<TData>[]\n) => any\n\nexport type CustomAggregationFns = Record<string, AggregationFn<any>>\n\nexport type AggregationFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof AggregationFns\n  | BuiltInAggregationFn\n  | AggregationFn<TData>\n\nexport interface GroupingColumnDef<TData extends RowData, TValue> {\n  /**\n   * The cell to display each row for the column if the cell is an aggregate. If a function is passed, it will be passed a props object with the context of the cell and should return the property type for your adapter (the exact type depends on the adapter being used).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregatedcell)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregatedCell?: ColumnDefTemplate<\n    ReturnType<Cell<TData, TValue>['getContext']>\n  >\n  /**\n   * The resolved aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregationFn?: AggregationFnOption<TData>\n  /**\n   * Enables/disables grouping for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Specify a value to be used for grouping rows on this column. If this option is not specified, the value derived from `accessorKey` / `accessorFn` will be used instead.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue?: (row: TData) => any\n}\n\nexport interface GroupingColumn<TData extends RowData> {\n  /**\n   * Returns the aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns the automatically inferred aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getautoaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAutoAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getcangroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getCanGroup: () => boolean\n  /**\n   * Returns the index of the column in the grouping state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedIndex: () => number\n  /**\n   * Returns whether or not the column is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns a function that toggles the grouping state of the column. This is useful for passing to the `onClick` prop of a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#gettogglegroupinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getToggleGroupingHandler: () => () => void\n  /**\n   * Toggles the grouping state of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#togglegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  toggleGrouping: () => void\n}\n\nexport interface GroupingRow {\n  _groupingValuesCache: Record<string, any>\n  /**\n   * Returns the grouping value for any row and column (including leaf rows).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue: (columnId: string) => unknown\n  /**\n   * Returns whether or not the row is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * If this row is grouped, this is the id of the column that this row is grouped by.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingcolumnid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingColumnId?: string\n  /**\n   * If this row is grouped, this is the unique/shared value for the `groupingColumnId` for all of the rows in this group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingValue?: unknown\n}\n\nexport interface GroupingCell {\n  /**\n   * Returns whether or not the cell is currently aggregated.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisaggregated)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsAggregated: () => boolean\n  /**\n   * Returns whether or not the cell is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns whether or not the cell is currently a placeholder cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsPlaceholder: () => boolean\n}\n\nexport interface ColumnDefaultOptions {\n  enableGrouping: boolean\n  onGroupingChange: OnChangeFn<GroupingState>\n}\n\ninterface GroupingOptionsBase {\n  /**\n   * Enables/disables grouping for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Returns the row model after grouping has taken place, but no further.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Grouping columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupedcolumnmode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupedColumnMode?: false | 'reorder' | 'remove'\n  /**\n   * Enables manual grouping. If this option is set to `true`, the table will not automatically group rows using `getGroupedRowModel()` and instead will expect you to manually group the rows before passing them to the table. This is useful if you are doing server-side grouping and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#manualgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  manualGrouping?: boolean\n  /**\n   * If this function is provided, it will be called when the grouping state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.grouping` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#ongroupingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  onGroupingChange?: OnChangeFn<GroupingState>\n}\n\ntype ResolvedAggregationFns = keyof AggregationFns extends never\n  ? {\n      aggregationFns?: Record<string, AggregationFn<any>>\n    }\n  : {\n      aggregationFns: Record<keyof AggregationFns, AggregationFn<any>>\n    }\n\nexport interface GroupingOptions\n  extends GroupingOptionsBase,\n    ResolvedAggregationFns {}\n\nexport type GroupingColumnMode = false | 'reorder' | 'remove'\n\nexport interface GroupingInstance<TData extends RowData> {\n  _getGroupedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getpregroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getPreGroupedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **grouping** state to `initialState.grouping`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#resetgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  resetGrouping: (defaultState?: boolean) => void\n  /**\n   * Updates the grouping state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#setgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  setGrouping: (updater: Updater<GroupingState>) => void\n}\n\n//\n\nexport const ColumnGrouping: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): GroupingColumnDef<\n    TData,\n    unknown\n  > => {\n    return {\n      aggregatedCell: props => (props.getValue() as any)?.toString?.() ?? null,\n      aggregationFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): GroupingTableState => {\n    return {\n      grouping: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingOptions => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder',\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old?.includes(column.id)) {\n          return old.filter(d => d !== column.id)\n        }\n\n        return [...(old ?? []), column.id]\n      })\n    }\n\n    column.getCanGroup = () => {\n      return (\n        (column.columnDef.enableGrouping ?? true) &&\n        (table.options.enableGrouping ?? true) &&\n        (!!column.accessorFn || !!column.columnDef.getGroupingValue)\n      )\n    }\n\n    column.getIsGrouped = () => {\n      return table.getState().grouping?.includes(column.id)\n    }\n\n    column.getGroupedIndex = () => table.getState().grouping?.indexOf(column.id)\n\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup()\n\n      return () => {\n        if (!canGroup) return\n        column.toggleGrouping()\n      }\n    }\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'number') {\n        return aggregationFns.sum\n      }\n\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent\n      }\n    }\n    column.getAggregationFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.aggregationFn)\n        ? column.columnDef.aggregationFn\n        : column.columnDef.aggregationFn === 'auto'\n          ? column.getAutoAggregationFn()\n          : table.options.aggregationFns?.[\n              column.columnDef.aggregationFn as string\n            ] ??\n            aggregationFns[\n              column.columnDef.aggregationFn as BuiltInAggregationFn\n            ]\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setGrouping = updater => table.options.onGroupingChange?.(updater)\n\n    table.resetGrouping = defaultState => {\n      table.setGrouping(defaultState ? [] : table.initialState?.grouping ?? [])\n    }\n\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel()\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table)\n      }\n\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel()\n      }\n\n      return table._getGroupedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getIsGrouped = () => !!row.groupingColumnId\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.columnDef.getGroupingValue) {\n        return row.getValue(columnId)\n      }\n\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(\n        row.original\n      )\n\n      return row._groupingValuesCache[columnId]\n    }\n    row._groupingValuesCache = {}\n  },\n\n  createCell: <TData extends RowData, TValue>(\n    cell: Cell<TData, TValue>,\n    column: Column<TData, TValue>,\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    const getRenderValue = () =>\n      cell.getValue() ?? table.options.renderFallbackValue\n\n    cell.getIsGrouped = () =>\n      column.getIsGrouped() && column.id === row.groupingColumnId\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped()\n    cell.getIsAggregated = () =>\n      !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!row.subRows?.length\n  },\n}\n\nexport function orderColumns<TData extends RowData>(\n  leafColumns: Column<TData, unknown>[],\n  grouping: string[],\n  groupedColumnMode?: GroupingColumnMode\n) {\n  if (!grouping?.length || !groupedColumnMode) {\n    return leafColumns\n  }\n\n  const nonGroupingColumns = leafColumns.filter(\n    col => !grouping.includes(col.id)\n  )\n\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns\n  }\n\n  const groupingColumns = grouping\n    .map(g => leafColumns.find(col => col.id === g)!)\n    .filter(Boolean)\n\n  return [...groupingColumns, ...nonGroupingColumns]\n}\n", "import { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nimport {\n  Column,\n  OnChangeFn,\n  RowData,\n  Table,\n  TableFeature,\n  Updater,\n} from '../types'\n\nimport { orderColumns } from './ColumnGrouping'\nimport { ColumnPinningPosition, _getVisibleLeafColumns } from '..'\n\nexport interface ColumnOrderTableState {\n  columnOrder: ColumnOrderState\n}\n\nexport type ColumnOrderState = string[]\n\nexport interface ColumnOrderOptions {\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnOrder` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#oncolumnorderchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  onColumnOrderChange?: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderColumn {\n  /**\n   * Returns the index of the column in the order of the visible columns. Optionally pass a `position` parameter to get the index of the column in a sub-section of the table\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIndex: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns `true` if the column is the first column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the first in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getisfirstcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsFirstColumn: (position?: ColumnPinningPosition | 'center') => boolean\n  /**\n   * Returns `true` if the column is the last column in the order of the visible columns. Optionally pass a `position` parameter to check if the column is the last in a sub-section of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#getislastcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  getIsLastColumn: (position?: ColumnPinningPosition | 'center') => boolean\n}\n\nexport interface ColumnOrderDefaultOptions {\n  onColumnOrderChange: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderInstance<TData extends RowData> {\n  _getOrderColumnsFn: () => (\n    columns: Column<TData, unknown>[]\n  ) => Column<TData, unknown>[]\n  /**\n   * Resets the **columnOrder** state to `initialState.columnOrder`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#resetcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  resetColumnOrder: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnOrder` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#setcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  setColumnOrder: (updater: Updater<ColumnOrderState>) => void\n}\n\n//\n\nexport const ColumnOrdering: TableFeature = {\n  getInitialState: (state): ColumnOrderTableState => {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderDefaultOptions => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table),\n    }\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getIndex = memo(\n      position => [_getVisibleLeafColumns(table, position)],\n      columns => columns.findIndex(d => d.id === column.id),\n      getMemoOptions(table.options, 'debugColumns', 'getIndex')\n    )\n    column.getIsFirstColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[0]?.id === column.id\n    }\n    column.getIsLastColumn = position => {\n      const columns = _getVisibleLeafColumns(table, position)\n      return columns[columns.length - 1]?.id === column.id\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnOrder = updater =>\n      table.options.onColumnOrderChange?.(updater)\n    table.resetColumnOrder = defaultState => {\n      table.setColumnOrder(\n        defaultState ? [] : table.initialState.columnOrder ?? []\n      )\n    }\n    table._getOrderColumnsFn = memo(\n      () => [\n        table.getState().columnOrder,\n        table.getState().grouping,\n        table.options.groupedColumnMode,\n      ],\n      (columnOrder, grouping, groupedColumnMode) =>\n        (columns: Column<TData, unknown>[]) => {\n          // Sort grouped columns to the start of the column list\n          // before the headers are built\n          let orderedColumns: Column<TData, unknown>[] = []\n\n          // If there is no order, return the normal columns\n          if (!columnOrder?.length) {\n            orderedColumns = columns\n          } else {\n            const columnOrderCopy = [...columnOrder]\n\n            // If there is an order, make a copy of the columns\n            const columnsCopy = [...columns]\n\n            // And make a new ordered array of the columns\n\n            // Loop over the columns and place them in order into the new array\n            while (columnsCopy.length && columnOrderCopy.length) {\n              const targetColumnId = columnOrderCopy.shift()\n              const foundIndex = columnsCopy.findIndex(\n                d => d.id === targetColumnId\n              )\n              if (foundIndex > -1) {\n                orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]!)\n              }\n            }\n\n            // If there are any columns left, add them to the end\n            orderedColumns = [...orderedColumns, ...columnsCopy]\n          }\n\n          return orderColumns(orderedColumns, grouping, groupedColumnMode)\n        },\n      getMemoOptions(table.options, 'debugTable', '_getOrderColumnsFn')\n    )\n  },\n}\n", "import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Column,\n  Row,\n  Cell,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type ColumnPinningPosition = false | 'left' | 'right'\n\nexport interface ColumnPinningState {\n  left?: string[]\n  right?: string[]\n}\n\nexport interface ColumnPinningTableState {\n  columnPinning: ColumnPinningState\n}\n\nexport interface ColumnPinningOptions {\n  /**\n   * Enables/disables column pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablecolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enableColumnPinning?: boolean\n  /**\n   * @deprecated Use `enableColumnPinning` or `enableRowPinning` instead.\n   * Enables/disables all pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnPinning` changes. This overrides the default internal state management, so you will also need to supply `state.columnPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#oncolumnpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/oncolumnpinningchange)\n   */\n  onColumnPinningChange?: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningDefaultOptions {\n  onColumnPinningChange: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningColumnDef {\n  /**\n   * Enables/disables column pinning for this column. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#enablepinning-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningColumn {\n  /**\n   * Returns whether or not the column can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcanpin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the column. (`'left'`, `'right'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getispinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsPinned: () => ColumnPinningPosition\n  /**\n   * Returns the numeric pinned index of the column within a pinned column group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getpinnedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a column to the `'left'` or `'right'`, or unpins the column to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#pin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  pin: (position: ColumnPinningPosition) => void\n}\n\nexport interface ColumnPinningRow<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcentervisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all left pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface ColumnPinningInstance<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getcenterleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getCenterLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether or not any columns are pinned. Optionally specify to only check for pinned columns in either the `left` or `right` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getissomecolumnspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getIsSomeColumnsPinned: (position?: ColumnPinningPosition) => boolean\n  /**\n   * Returns all left pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getleftleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getLeftLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#getrightleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  getRightLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the **columnPinning** state to `initialState.columnPinning`, or `true` can be passed to force a default blank state reset to `{ left: [], right: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#resetcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  resetColumnPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-pinning#setcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-pinning)\n   */\n  setColumnPinning: (updater: Updater<ColumnPinningState>) => void\n}\n\n//\n\nconst getDefaultColumnPinningState = (): ColumnPinningState => ({\n  left: [],\n  right: [],\n})\n\nexport const ColumnPinning: TableFeature = {\n  getInitialState: (state): ColumnPinningTableState => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningDefaultOptions => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.pin = position => {\n      const columnIds = column\n        .getLeafColumns()\n        .map(d => d.id)\n        .filter(Boolean) as string[]\n\n      table.setColumnPinning(old => {\n        if (position === 'right') {\n          return {\n            left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n            right: [\n              ...(old?.right ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n          }\n        }\n\n        if (position === 'left') {\n          return {\n            left: [\n              ...(old?.left ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n            right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n          }\n        }\n\n        return {\n          left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n          right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n        }\n      })\n    }\n\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns()\n\n      return leafColumns.some(\n        d =>\n          (d.columnDef.enablePinning ?? true) &&\n          (table.options.enableColumnPinning ??\n            table.options.enablePinning ??\n            true)\n      )\n    }\n\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id)\n\n      const { left, right } = table.getState().columnPinning\n\n      const isLeft = leafColumnIds.some(d => left?.includes(d))\n      const isRight = leafColumnIds.some(d => right?.includes(d))\n\n      return isLeft ? 'left' : isRight ? 'right' : false\n    }\n\n    column.getPinnedIndex = () => {\n      const position = column.getIsPinned()\n\n      return position\n        ? table.getState().columnPinning?.[position]?.indexOf(column.id) ?? -1\n        : 0\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getCenterVisibleCells = memo(\n      () => [\n        row._getAllVisibleCells(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allCells, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allCells.filter(d => !leftAndRight.includes(d.column.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterVisibleCells')\n    )\n    row.getLeftVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.left],\n      (allCells, left) => {\n        const cells = (left ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'left' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getLeftVisibleCells')\n    )\n    row.getRightVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.right],\n      (allCells, right) => {\n        const cells = (right ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'right' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      getMemoOptions(table.options, 'debugRows', 'getRightVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnPinning = updater =>\n      table.options.onColumnPinningChange?.(updater)\n\n    table.resetColumnPinning = defaultState =>\n      table.setColumnPinning(\n        defaultState\n          ? getDefaultColumnPinningState()\n          : table.initialState?.columnPinning ?? getDefaultColumnPinningState()\n      )\n\n    table.getIsSomeColumnsPinned = position => {\n      const pinningState = table.getState().columnPinning\n\n      if (!position) {\n        return Boolean(pinningState.left?.length || pinningState.right?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table.getLeftLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.left],\n      (allColumns, left) => {\n        return (left ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getLeftLeafColumns')\n    )\n\n    table.getRightLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.right],\n      (allColumns, right) => {\n        return (right ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getRightLeafColumns')\n    )\n\n    table.getCenterLeafColumns = memo(\n      () => [\n        table.getAllLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allColumns.filter(d => !leftAndRight.includes(d.id))\n      },\n      getMemoOptions(table.options, 'debugColumns', 'getCenterLeafColumns')\n    )\n  },\n}\n", "export function safelyAccessDocument(_document?: Document): Document | null {\n  return _document || (typeof document !== 'undefined' ? document : null)\n}\n\nexport function safelyAccessDocumentEvent(event: Event): Document | null {\n  return !!event &&\n    !!event.target &&\n    typeof event.target === 'object' &&\n    'ownerDocument' in event.target\n    ? (event.target.ownerDocument as Document | null)\n    : null\n}\n", "import { _getVisibleLeafColumns } from '..'\nimport {\n  RowData,\n  Column,\n  Header,\n  OnChangeFn,\n  Table,\n  Updater,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\nimport { ColumnPinningPosition } from './ColumnPinning'\nimport { safelyAccessDocument } from '../utils/document'\n\n//\n\nexport interface ColumnSizingTableState {\n  columnSizing: ColumnSizingState\n  columnSizingInfo: ColumnSizingInfoState\n}\n\nexport type ColumnSizingState = Record<string, number>\n\nexport interface ColumnSizingInfoState {\n  columnSizingStart: [string, number][]\n  deltaOffset: null | number\n  deltaPercentage: null | number\n  isResizingColumn: false | string\n  startOffset: null | number\n  startSize: null | number\n}\n\nexport type ColumnResizeMode = 'onChange' | 'onEnd'\n\nexport type ColumnResizeDirection = 'ltr' | 'rtl'\n\nexport interface ColumnSizingOptions {\n  /**\n   * Determines when the columnSizing state is updated. `onChange` updates the state when the user is dragging the resize handle. `onEnd` updates the state when the user releases the resize handle.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnresizemode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeMode?: ColumnResizeMode\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enablecolumnresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableColumnResizing?: boolean\n  /**\n   * Enables or disables right-to-left support for resizing the column. defaults to 'ltr'.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnResizeDirection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeDirection?: ColumnResizeDirection\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizing` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizing` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingChange?: OnChangeFn<ColumnSizingState>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizingInfo` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizingInfo` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizinginfochange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingInfoChange?: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport type ColumnSizingDefaultOptions = Pick<\n  ColumnSizingOptions,\n  | 'columnResizeMode'\n  | 'onColumnSizingChange'\n  | 'onColumnSizingInfoChange'\n  | 'columnResizeDirection'\n>\n\nexport interface ColumnSizingInstance {\n  /**\n   * If pinning, returns the total size of the center portion of the table by calculating the sum of the sizes of all unpinned/center leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcentertotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCenterTotalSize: () => number\n  /**\n   * Returns the total size of the left portion of the table by calculating the sum of the sizes of all left leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getlefttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getLeftTotalSize: () => number\n  /**\n   * Returns the total size of the right portion of the table by calculating the sum of the sizes of all right leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getrighttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getRightTotalSize: () => number\n  /**\n   * Returns the total size of the table by calculating the sum of the sizes of all leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#gettotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getTotalSize: () => number\n  /**\n   * Resets column sizing to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetColumnSizing: (defaultState?: boolean) => void\n  /**\n   * Resets column sizing info to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetheadersizeinfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetHeaderSizeInfo: (defaultState?: boolean) => void\n  /**\n   * Sets the column sizing state using an updater function or a value. This will trigger the underlying `onColumnSizingChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizing: (updater: Updater<ColumnSizingState>) => void\n  /**\n   * Sets the column sizing info state using an updater function or a value. This will trigger the underlying `onColumnSizingInfoChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizinginfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void\n}\n\nexport interface ColumnSizingColumnDef {\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enableresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableResizing?: boolean\n  /**\n   * The maximum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#maxsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  maxSize?: number\n  /**\n   * The minimum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#minsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  minSize?: number\n  /**\n   * The desired size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#size)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  size?: number\n}\n\nexport interface ColumnSizingColumn {\n  /**\n   * Returns `true` if the column can be resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcanresize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCanResize: () => boolean\n  /**\n   * Returns `true` if the column is currently being resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getisresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getIsResizing: () => boolean\n  /**\n   * Returns the current size of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding (left) headers in relation to the current column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all succeeding (right) headers in relation to the current column.\n   */\n  getAfter: (position?: ColumnPinningPosition | 'center') => number\n  /**\n   * Resets the column to its initial size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetSize: () => void\n}\n\nexport interface ColumnSizingHeader {\n  /**\n   * Returns an event handler function that can be used to resize the header. It can be used as an:\n   * - `onMouseDown` handler\n   * - `onTouchStart` handler\n   *\n   * The dragging and release events are automatically handled for you.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getresizehandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getResizeHandler: (context?: Document) => (event: unknown) => void\n  /**\n   * Returns the current size of the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition) => number\n}\n\n//\n\nexport const defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER,\n}\n\nconst getDefaultColumnSizingInfoState = (): ColumnSizingInfoState => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: [],\n})\n\nexport const ColumnSizing: TableFeature = {\n  getDefaultColumnDef: (): ColumnSizingColumnDef => {\n    return defaultColumnSizing\n  },\n  getInitialState: (state): ColumnSizingTableState => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingDefaultOptions => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getSize = () => {\n      const columnSize = table.getState().columnSizing[column.id]\n\n      return Math.min(\n        Math.max(\n          column.columnDef.minSize ?? defaultColumnSizing.minSize,\n          columnSize ?? column.columnDef.size ?? defaultColumnSizing.size\n        ),\n        column.columnDef.maxSize ?? defaultColumnSizing.maxSize\n      )\n    }\n\n    column.getStart = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(0, column.getIndex(position))\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getStart')\n    )\n\n    column.getAfter = memo(\n      position => [\n        position,\n        _getVisibleLeafColumns(table, position),\n        table.getState().columnSizing,\n      ],\n      (position, columns) =>\n        columns\n          .slice(column.getIndex(position) + 1)\n          .reduce((sum, column) => sum + column.getSize(), 0),\n      getMemoOptions(table.options, 'debugColumns', 'getAfter')\n    )\n\n    column.resetSize = () => {\n      table.setColumnSizing(({ [column.id]: _, ...rest }) => {\n        return rest\n      })\n    }\n    column.getCanResize = () => {\n      return (\n        (column.columnDef.enableResizing ?? true) &&\n        (table.options.enableColumnResizing ?? true)\n      )\n    }\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id\n    }\n  },\n\n  createHeader: <TData extends RowData, TValue>(\n    header: Header<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    header.getSize = () => {\n      let sum = 0\n\n      const recurse = (header: Header<TData, TValue>) => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse)\n        } else {\n          sum += header.column.getSize() ?? 0\n        }\n      }\n\n      recurse(header)\n\n      return sum\n    }\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1]!\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize()\n      }\n\n      return 0\n    }\n    header.getResizeHandler = _contextDocument => {\n      const column = table.getColumn(header.column.id)\n      const canResize = column?.getCanResize()\n\n      return (e: unknown) => {\n        if (!column || !canResize) {\n          return\n        }\n\n        ;(e as any).persist?.()\n\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return\n          }\n        }\n\n        const startSize = header.getSize()\n\n        const columnSizingStart: [string, number][] = header\n          ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()])\n          : [[column.id, column.getSize()]]\n\n        const clientX = isTouchStartEvent(e)\n          ? Math.round(e.touches[0]!.clientX)\n          : (e as MouseEvent).clientX\n\n        const newColumnSizing: ColumnSizingState = {}\n\n        const updateOffset = (\n          eventType: 'move' | 'end',\n          clientXPos?: number\n        ) => {\n          if (typeof clientXPos !== 'number') {\n            return\n          }\n\n          table.setColumnSizingInfo(old => {\n            const deltaDirection =\n              table.options.columnResizeDirection === 'rtl' ? -1 : 1\n            const deltaOffset =\n              (clientXPos - (old?.startOffset ?? 0)) * deltaDirection\n            const deltaPercentage = Math.max(\n              deltaOffset / (old?.startSize ?? 0),\n              -0.999999\n            )\n\n            old.columnSizingStart.forEach(([columnId, headerSize]) => {\n              newColumnSizing[columnId] =\n                Math.round(\n                  Math.max(headerSize + headerSize * deltaPercentage, 0) * 100\n                ) / 100\n            })\n\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage,\n            }\n          })\n\n          if (\n            table.options.columnResizeMode === 'onChange' ||\n            eventType === 'end'\n          ) {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing,\n            }))\n          }\n        }\n\n        const onMove = (clientXPos?: number) => updateOffset('move', clientXPos)\n\n        const onEnd = (clientXPos?: number) => {\n          updateOffset('end', clientXPos)\n\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: [],\n          }))\n        }\n\n        const contextDocument = safelyAccessDocument(_contextDocument)\n\n        const mouseEvents = {\n          moveHandler: (e: MouseEvent) => onMove(e.clientX),\n          upHandler: (e: MouseEvent) => {\n            contextDocument?.removeEventListener(\n              'mousemove',\n              mouseEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'mouseup',\n              mouseEvents.upHandler\n            )\n            onEnd(e.clientX)\n          },\n        }\n\n        const touchEvents = {\n          moveHandler: (e: TouchEvent) => {\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onMove(e.touches[0]!.clientX)\n            return false\n          },\n          upHandler: (e: TouchEvent) => {\n            contextDocument?.removeEventListener(\n              'touchmove',\n              touchEvents.moveHandler\n            )\n            contextDocument?.removeEventListener(\n              'touchend',\n              touchEvents.upHandler\n            )\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onEnd(e.touches[0]?.clientX)\n          },\n        }\n\n        const passiveIfSupported = passiveEventSupported()\n          ? { passive: false }\n          : false\n\n        if (isTouchStartEvent(e)) {\n          contextDocument?.addEventListener(\n            'touchmove',\n            touchEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'touchend',\n            touchEvents.upHandler,\n            passiveIfSupported\n          )\n        } else {\n          contextDocument?.addEventListener(\n            'mousemove',\n            mouseEvents.moveHandler,\n            passiveIfSupported\n          )\n          contextDocument?.addEventListener(\n            'mouseup',\n            mouseEvents.upHandler,\n            passiveIfSupported\n          )\n        }\n\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id,\n        }))\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnSizing = updater =>\n      table.options.onColumnSizingChange?.(updater)\n    table.setColumnSizingInfo = updater =>\n      table.options.onColumnSizingInfoChange?.(updater)\n    table.resetColumnSizing = defaultState => {\n      table.setColumnSizing(\n        defaultState ? {} : table.initialState.columnSizing ?? {}\n      )\n    }\n    table.resetHeaderSizeInfo = defaultState => {\n      table.setColumnSizingInfo(\n        defaultState\n          ? getDefaultColumnSizingInfoState()\n          : table.initialState.columnSizingInfo ??\n              getDefaultColumnSizingInfoState()\n      )\n    }\n    table.getTotalSize = () =>\n      table.getHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getLeftTotalSize = () =>\n      table.getLeftHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getCenterTotalSize = () =>\n      table.getCenterHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getRightTotalSize = () =>\n      table.getRightHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n  },\n}\n\nlet passiveSupported: boolean | null = null\nexport function passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    const noop = () => {}\n\n    window.addEventListener('test', noop, options)\n    window.removeEventListener('test', noop)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\nfunction isTouchStartEvent(e: unknown): e is TouchEvent {\n  return (e as TouchEvent).type === 'touchstart'\n}\n", "import { ColumnPinningPosition } from '..'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type VisibilityState = Record<string, boolean>\n\nexport interface VisibilityTableState {\n  columnVisibility: VisibilityState\n}\n\nexport interface VisibilityOptions {\n  /**\n   * Whether to enable column hiding. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#enablehiding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  enableHiding?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnVisibility` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#oncolumnvisibilitychange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  onColumnVisibilityChange?: OnChangeFn<VisibilityState>\n}\n\nexport type VisibilityDefaultOptions = Pick<\n  VisibilityOptions,\n  'onColumnVisibilityChange'\n>\n\nexport interface VisibilityInstance<TData extends RowData> {\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the unpinned/center portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcentervisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCenterVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether all columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsAllColumnsVisible: () => boolean\n  /**\n   * Returns whether any columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getissomecolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsSomeColumnsVisible: () => boolean\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the left portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getleftvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getLeftVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the right portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getrightvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getRightVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a handler for toggling the visibility of all columns, meant to be bound to a `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettoggleallcolumnsvisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleAllColumnsVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Returns a flat array of columns that are visible, including parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a flat array of leaf-node columns that are visible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the column visibility state to the initial state. If `defaultState` is provided, the state will be reset to `{}`\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#resetcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  resetColumnVisibility: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnVisibility` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#setcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  setColumnVisibility: (updater: Updater<VisibilityState>) => void\n  /**\n   * Toggles the visibility of all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#toggleallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleAllColumnsVisible: (value?: boolean) => void\n}\n\nexport interface VisibilityColumnDef {\n  enableHiding?: boolean\n}\n\nexport interface VisibilityRow<TData extends RowData> {\n  _getAllVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns an array of cells that account for column visibility for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface VisibilityColumn {\n  /**\n   * Returns whether the column can be hidden\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcanhide)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCanHide: () => boolean\n  /**\n   * Returns whether the column is visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsVisible: () => boolean\n  /**\n   * Returns a function that can be used to toggle the column visibility. This function can be used to bind to an event handler to a checkbox.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettogglevisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Toggles the visibility of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#togglevisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleVisibility: (value?: boolean) => void\n}\n\n//\n\nexport const ColumnVisibility: TableFeature = {\n  getInitialState: (state): VisibilityTableState => {\n    return {\n      columnVisibility: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityDefaultOptions => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value ?? !column.getIsVisible(),\n        }))\n      }\n    }\n    column.getIsVisible = () => {\n      const childColumns = column.columns\n      return (\n        (childColumns.length\n          ? childColumns.some(c => c.getIsVisible())\n          : table.getState().columnVisibility?.[column.id]) ?? true\n      )\n    }\n\n    column.getCanHide = () => {\n      return (\n        (column.columnDef.enableHiding ?? true) &&\n        (table.options.enableHiding ?? true)\n      )\n    }\n    column.getToggleVisibilityHandler = () => {\n      return (e: unknown) => {\n        column.toggleVisibility?.(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row._getAllVisibleCells = memo(\n      () => [row.getAllCells(), table.getState().columnVisibility],\n      cells => {\n        return cells.filter(cell => cell.column.getIsVisible())\n      },\n      getMemoOptions(table.options, 'debugRows', '_getAllVisibleCells')\n    )\n    row.getVisibleCells = memo(\n      () => [\n        row.getLeftVisibleCells(),\n        row.getCenterVisibleCells(),\n        row.getRightVisibleCells(),\n      ],\n      (left, center, right) => [...left, ...center, ...right],\n      getMemoOptions(table.options, 'debugRows', 'getVisibleCells')\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    const makeVisibleColumnsMethod = (\n      key: string,\n      getColumns: () => Column<TData, unknown>[]\n    ): (() => Column<TData, unknown>[]) => {\n      return memo(\n        () => [\n          getColumns(),\n          getColumns()\n            .filter(d => d.getIsVisible())\n            .map(d => d.id)\n            .join('_'),\n        ],\n        columns => {\n          return columns.filter(d => d.getIsVisible?.())\n        },\n        getMemoOptions(table.options, 'debugColumns', key)\n      )\n    }\n\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod(\n      'getVisibleFlatColumns',\n      () => table.getAllFlatColumns()\n    )\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getVisibleLeafColumns',\n      () => table.getAllLeafColumns()\n    )\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getLeftVisibleLeafColumns',\n      () => table.getLeftLeafColumns()\n    )\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getRightVisibleLeafColumns',\n      () => table.getRightLeafColumns()\n    )\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getCenterVisibleLeafColumns',\n      () => table.getCenterLeafColumns()\n    )\n\n    table.setColumnVisibility = updater =>\n      table.options.onColumnVisibilityChange?.(updater)\n\n    table.resetColumnVisibility = defaultState => {\n      table.setColumnVisibility(\n        defaultState ? {} : table.initialState.columnVisibility ?? {}\n      )\n    }\n\n    table.toggleAllColumnsVisible = value => {\n      value = value ?? !table.getIsAllColumnsVisible()\n\n      table.setColumnVisibility(\n        table.getAllLeafColumns().reduce(\n          (obj, column) => ({\n            ...obj,\n            [column.id]: !value ? !column.getCanHide?.() : value,\n          }),\n          {}\n        )\n      )\n    }\n\n    table.getIsAllColumnsVisible = () =>\n      !table.getAllLeafColumns().some(column => !column.getIsVisible?.())\n\n    table.getIsSomeColumnsVisible = () =>\n      table.getAllLeafColumns().some(column => column.getIsVisible?.())\n\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllColumnsVisible(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nexport function _getVisibleLeafColumns<TData extends RowData>(\n  table: Table<TData>,\n  position?: ColumnPinningPosition | 'center'\n) {\n  return !position\n    ? table.getVisibleLeafColumns()\n    : position === 'center'\n      ? table.getCenterVisibleLeafColumns()\n      : position === 'left'\n        ? table.getLeftVisibleLeafColumns()\n        : table.getRightVisibleLeafColumns()\n}\n", "import { RowModel } from '..'\nimport { Table, RowData, TableFeature } from '../types'\n\nexport interface GlobalFacetingInstance<TData extends RowData> {\n  _getGlobalFacetedMinMaxValues?: () => undefined | [number, number]\n  _getGlobalFacetedRowModel?: () => RowModel<TData>\n  _getGlobalFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model for the table after **global** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedRowModel: () => RowModel<TData>\n  /**\n   * Returns the faceted unique values for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-faceting#getglobalfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-faceting)\n   */\n  getGlobalFacetedUniqueValues: () => Map<any, number>\n}\n\n//\n\nexport const GlobalFaceting: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table._getGlobalFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, '__global__')\n\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getGlobalFacetedRowModel()\n    }\n\n    table._getGlobalFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, '__global__')\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return table._getGlobalFacetedUniqueValues()\n    }\n\n    table._getGlobalFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, '__global__')\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return\n      }\n\n      return table._getGlobalFacetedMinMaxValues()\n    }\n  },\n}\n", "import { FilterFn, FilterFnOption } from '..'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport interface GlobalFilterTableState {\n  globalFilter: any\n}\n\nexport interface GlobalFilterColumnDef {\n  /**\n   * Enables/disables the **global** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n}\n\nexport interface GlobalFilterColumn {\n  /**\n   * Returns whether or not the column can be **globally** filtered. Set to `false` to disable a column from being scanned during global filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getCanGlobalFilter: () => boolean\n}\n\nexport interface GlobalFilterOptions<TData extends RowData> {\n  /**\n   * Enables/disables **global** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  enableGlobalFilter?: boolean\n  /**\n   * If provided, this function will be called with the column and should return `true` or `false` to indicate whether this column should be used for global filtering.\n   *\n   * This is useful if the column can contain data that is not `string` or `number` (i.e. `undefined`).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getcolumncanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getColumnCanGlobalFilter?: (column: Column<TData, unknown>) => boolean\n  /**\n   * The filter function to use for global filtering.\n   * - A `string` referencing a built-in filter function\n   * - A `string` that references a custom filter functions provided via the `tableOptions.filterFns` option\n   * - A custom filter function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#globalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  globalFilterFn?: FilterFnOption<TData>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.globalFilter` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#onglobalfilterchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  onGlobalFilterChange?: OnChangeFn<any>\n}\n\nexport interface GlobalFilterInstance<TData extends RowData> {\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#getglobalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  getGlobalFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/global-filtering#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/global-filtering)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const GlobalFiltering: TableFeature = {\n  getInitialState: (state): GlobalFilterTableState => {\n    return {\n      globalFilter: undefined,\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GlobalFilterOptions<TData> => {\n    return {\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        const value = table\n          .getCoreRowModel()\n          .flatRows[0]?._getAllCellsByColumnId()\n          [column.id]?.getValue()\n\n        return typeof value === 'string' || typeof value === 'number'\n      },\n    } as GlobalFilterOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getCanGlobalFilter = () => {\n      return (\n        (column.columnDef.enableGlobalFilter ?? true) &&\n        (table.options.enableGlobalFilter ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        (table.options.getColumnCanGlobalFilter?.(column) ?? true) &&\n        !!column.accessorFn\n      )\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString\n    }\n\n    table.getGlobalFilterFn = () => {\n      const { globalFilterFn: globalFilterFn } = table.options\n\n      return isFunction(globalFilterFn)\n        ? globalFilterFn\n        : globalFilterFn === 'auto'\n          ? table.getGlobalAutoFilterFn()\n          : table.options.filterFns?.[globalFilterFn as string] ??\n            filterFns[globalFilterFn as BuiltInFilterFn]\n    }\n\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange?.(updater)\n    }\n\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(\n        defaultState ? undefined : table.initialState.globalFilter\n      )\n    }\n  },\n}\n", "import { RowModel } from '..'\nimport {\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { makeStateUpdater } from '../utils'\n\nexport type ExpandedStateList = Record<string, boolean>\nexport type ExpandedState = true | Record<string, boolean>\nexport interface ExpandedTableState {\n  expanded: ExpandedState\n}\n\nexport interface ExpandedRow {\n  /**\n   * Returns whether the row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanExpand: () => boolean\n  /**\n   * Returns whether all parent rows of the row are expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallparentsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllParentsExpanded: () => boolean\n  /**\n   * Returns whether the row is expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsExpanded: () => boolean\n  /**\n   * Returns a function that can be used to toggle the expanded state of the row. This function can be used to bind to an event handler to a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleExpandedHandler: () => () => void\n  /**\n   * Toggles the expanded state (or sets it if `expanded` is provided) for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleExpanded: (expanded?: boolean) => void\n}\n\nexport interface ExpandedOptions<TData extends RowData> {\n  /**\n   * Enable this setting to automatically reset the expanded state of the table when expanding state changes.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#autoresetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  autoResetExpanded?: boolean\n  /**\n   * Enable/disable expanding for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#enableexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  enableExpanding?: boolean\n  /**\n   * This function is responsible for returning the expanded row model. If this function is not provided, the table will not expand rows. You can use the default exported `getExpandedRowModel` function to get the expanded row model or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row is currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisrowexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsRowExpanded?: (row: Row<TData>) => boolean\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getrowcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getRowCanExpand?: (row: Row<TData>) => boolean\n  /**\n   * Enables manual row expansion. If this is set to `true`, `getExpandedRowModel` will not be used to expand rows and you would be expected to perform the expansion in your own data model. This is useful if you are doing server-side expansion.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#manualexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  manualExpanding?: boolean\n  /**\n   * This function is called when the `expanded` table state changes. If a function is provided, you will be responsible for managing this state on your own. To pass the managed state back to the table, use the `tableOptions.state.expanded` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#onexpandedchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  onExpandedChange?: OnChangeFn<ExpandedState>\n  /**\n   * If `true` expanded rows will be paginated along with the rest of the table (which means expanded rows may span multiple pages). If `false` expanded rows will not be considered for pagination (which means expanded rows will always render on their parents page. This also means more rows will be rendered than the set page size)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#paginateexpandedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  paginateExpandedRows?: boolean\n}\n\nexport interface ExpandedInstance<TData extends RowData> {\n  _autoResetExpanded: () => void\n  _getExpandedRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether there are any rows that can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcansomerowsexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanSomeRowsExpand: () => boolean\n  /**\n   * Returns the maximum depth of the expanded rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandeddepth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedDepth: () => number\n  /**\n   * Returns the row model after expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether all rows are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllRowsExpanded: () => boolean\n  /**\n   * Returns whether there are any rows that are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getissomerowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsSomeRowsExpanded: () => boolean\n  /**\n   * Returns the row model before expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getpreexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getPreExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle the expanded state of all rows. This handler is meant to be used with an `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleallrowsexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleAllRowsExpandedHandler: () => (event: unknown) => void\n  /**\n   * Resets the expanded state of the table to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#resetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  resetExpanded: (defaultState?: boolean) => void\n  /**\n   * Updates the expanded state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#setexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  setExpanded: (updater: Updater<ExpandedState>) => void\n  /**\n   * Toggles the expanded state for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleAllRowsExpanded: (expanded?: boolean) => void\n}\n\n//\n\nexport const RowExpanding: TableFeature = {\n  getInitialState: (state): ExpandedTableState => {\n    return {\n      expanded: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedOptions<TData> => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetExpanded = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetExpanded ??\n        !table.options.manualExpanding\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetExpanded()\n          queued = false\n        })\n      }\n    }\n    table.setExpanded = updater => table.options.onExpandedChange?.(updater)\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded ?? !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true)\n      } else {\n        table.setExpanded({})\n      }\n    }\n    table.resetExpanded = defaultState => {\n      table.setExpanded(defaultState ? {} : table.initialState?.expanded ?? {})\n    }\n    table.getCanSomeRowsExpand = () => {\n      return table\n        .getPrePaginationRowModel()\n        .flatRows.some(row => row.getCanExpand())\n    }\n    table.getToggleAllRowsExpandedHandler = () => {\n      return (e: unknown) => {\n        ;(e as any).persist?.()\n        table.toggleAllRowsExpanded()\n      }\n    }\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded\n      return expanded === true || Object.values(expanded).some(Boolean)\n    }\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true\n      }\n\n      if (!Object.keys(expanded).length) {\n        return false\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false\n      }\n\n      // They must all be expanded :shrug:\n      return true\n    }\n    table.getExpandedDepth = () => {\n      let maxDepth = 0\n\n      const rowIds =\n        table.getState().expanded === true\n          ? Object.keys(table.getRowModel().rowsById)\n          : Object.keys(table.getState().expanded)\n\n      rowIds.forEach(id => {\n        const splitId = id.split('.')\n        maxDepth = Math.max(maxDepth, splitId.length)\n      })\n\n      return maxDepth\n    }\n    table.getPreExpandedRowModel = () => table.getSortedRowModel()\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table)\n      }\n\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel()\n      }\n\n      return table._getExpandedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        const exists = old === true ? true : !!old?.[row.id]\n\n        let oldExpanded: ExpandedStateList = {}\n\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true\n          })\n        } else {\n          oldExpanded = old\n        }\n\n        expanded = expanded ?? !exists\n\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true,\n          }\n        }\n\n        if (exists && !expanded) {\n          const { [row.id]: _, ...rest } = oldExpanded\n          return rest\n        }\n\n        return old\n      })\n    }\n    row.getIsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      return !!(\n        table.options.getIsRowExpanded?.(row) ??\n        (expanded === true || expanded?.[row.id])\n      )\n    }\n    row.getCanExpand = () => {\n      return (\n        table.options.getRowCanExpand?.(row) ??\n        ((table.options.enableExpanding ?? true) && !!row.subRows?.length)\n      )\n    }\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true\n      let currentRow = row\n\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true)\n        isFullyExpanded = currentRow.getIsExpanded()\n      }\n\n      return isFullyExpanded\n    }\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand()\n\n      return () => {\n        if (!canExpand) return\n        row.toggleExpanded()\n      }\n    }\n  },\n}\n", "import {\n  OnChangeFn,\n  Table,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport {\n  functionalUpdate,\n  getMemoOptions,\n  makeStateUpdater,\n  memo,\n} from '../utils'\n\nexport interface PaginationState {\n  pageIndex: number\n  pageSize: number\n}\n\nexport interface PaginationTableState {\n  pagination: PaginationState\n}\n\nexport interface PaginationInitialTableState {\n  pagination?: Partial<PaginationState>\n}\n\nexport interface PaginationOptions {\n  /**\n   * If set to `true`, pagination will be reset to the first page when page-altering state changes eg. `data` is updated, filters change, grouping changes, etc.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#autoresetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  autoResetPageIndex?: boolean\n  /**\n   * Returns the row model after pagination has taken place, but no further.\n   *\n   * Pagination columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Enables manual pagination. If this option is set to `true`, the table will not automatically paginate rows using `getPaginationRowModel()` and instead will expect you to manually paginate the rows before passing them to the table. This is useful if you are doing server-side pagination and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#manualpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  manualPagination?: boolean\n  /**\n   * If this function is provided, it will be called when the pagination state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.pagination` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#onpaginationchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  onPaginationChange?: OnChangeFn<PaginationState>\n  /**\n   * When manually controlling pagination, you can supply a total `pageCount` value to the table if you know it (Or supply a `rowCount` and `pageCount` will be calculated). If you do not know how many pages there are, you can set this to `-1`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#pagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  pageCount?: number\n  /**\n   * When manually controlling pagination, you can supply a total `rowCount` value to the table if you know it. The `pageCount` can be calculated from this value and the `pageSize`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#rowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  rowCount?: number\n}\n\nexport interface PaginationDefaultOptions {\n  onPaginationChange: OnChangeFn<PaginationState>\n}\n\nexport interface PaginationInstance<TData extends RowData> {\n  _autoResetPageIndex: () => void\n  _getPaginationRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether the table can go to the next page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcannextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanNextPage: () => boolean\n  /**\n   * Returns whether the table can go to the previous page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcanpreviouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanPreviousPage: () => boolean\n  /**\n   * Returns the page count. If manually paginating or controlling the pagination state, this will come directly from the `options.pageCount` table option, otherwise it will be calculated from the table data using the total row count and current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageCount: () => number\n  /**\n   * Returns the row count. If manually paginating or controlling the pagination state, this will come directly from the `options.rowCount` table option, otherwise it will be calculated from the table data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getrowcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getRowCount: () => number\n  /**\n   * Returns an array of page options (zero-index-based) for the current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpageoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageOptions: () => number[]\n  /**\n   * Returns the row model for the table after pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getprepaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPrePaginationRowModel: () => RowModel<TData>\n  /**\n   * Increments the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#nextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  nextPage: () => void\n  /**\n   * Decrements the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#previouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  previousPage: () => void\n  /**\n   * Sets the page index to `0`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#firstpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  firstPage: () => void\n  /**\n   * Sets the page index to the last page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#lastpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  lastPage: () => void\n  /**\n   * Resets the page index to its initial state. If `defaultState` is `true`, the page index will be reset to `0` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageIndex: (defaultState?: boolean) => void\n  /**\n   * Resets the page size to its initial state. If `defaultState` is `true`, the page size will be reset to `10` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageSize: (defaultState?: boolean) => void\n  /**\n   * Resets the **pagination** state to `initialState.pagination`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPagination: (defaultState?: boolean) => void\n  /**\n   * @deprecated The page count no longer exists in the pagination state. Just pass as a table option instead.\n   */\n  setPageCount: (updater: Updater<number>) => void\n  /**\n   * Updates the page index using the provided function or value in the `state.pagination.pageIndex` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageIndex: (updater: Updater<number>) => void\n  /**\n   * Updates the page size using the provided function or value in the `state.pagination.pageSize` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageSize: (updater: Updater<number>) => void\n  /**\n   * Sets or updates the `state.pagination` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPagination: (updater: Updater<PaginationState>) => void\n}\n\n//\n\nconst defaultPageIndex = 0\nconst defaultPageSize = 10\n\nconst getDefaultPaginationState = (): PaginationState => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize,\n})\n\nexport const RowPagination: TableFeature = {\n  getInitialState: (state): PaginationTableState => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...state?.pagination,\n      },\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationDefaultOptions => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetPageIndex = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetPageIndex ??\n        !table.options.manualPagination\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetPageIndex()\n          queued = false\n        })\n      }\n    }\n    table.setPagination = updater => {\n      const safeUpdater: Updater<PaginationState> = old => {\n        let newState = functionalUpdate(updater, old)\n\n        return newState\n      }\n\n      return table.options.onPaginationChange?.(safeUpdater)\n    }\n    table.resetPagination = defaultState => {\n      table.setPagination(\n        defaultState\n          ? getDefaultPaginationState()\n          : table.initialState.pagination ?? getDefaultPaginationState()\n      )\n    }\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex)\n\n        const maxPageIndex =\n          typeof table.options.pageCount === 'undefined' ||\n          table.options.pageCount === -1\n            ? Number.MAX_SAFE_INTEGER\n            : table.options.pageCount - 1\n\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex))\n\n        return {\n          ...old,\n          pageIndex,\n        }\n      })\n    }\n    table.resetPageIndex = defaultState => {\n      table.setPageIndex(\n        defaultState\n          ? defaultPageIndex\n          : table.initialState?.pagination?.pageIndex ?? defaultPageIndex\n      )\n    }\n    table.resetPageSize = defaultState => {\n      table.setPageSize(\n        defaultState\n          ? defaultPageSize\n          : table.initialState?.pagination?.pageSize ?? defaultPageSize\n      )\n    }\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize))\n        const topRowIndex = old.pageSize * old.pageIndex!\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      })\n    }\n    //deprecated\n    table.setPageCount = updater =>\n      table.setPagination(old => {\n        let newPageCount = functionalUpdate(\n          updater,\n          table.options.pageCount ?? -1\n        )\n\n        if (typeof newPageCount === 'number') {\n          newPageCount = Math.max(-1, newPageCount)\n        }\n\n        return {\n          ...old,\n          pageCount: newPageCount,\n        }\n      })\n\n    table.getPageOptions = memo(\n      () => [table.getPageCount()],\n      pageCount => {\n        let pageOptions: number[] = []\n        if (pageCount && pageCount > 0) {\n          pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i)\n        }\n        return pageOptions\n      },\n      getMemoOptions(table.options, 'debugTable', 'getPageOptions')\n    )\n\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0\n\n    table.getCanNextPage = () => {\n      const { pageIndex } = table.getState().pagination\n\n      const pageCount = table.getPageCount()\n\n      if (pageCount === -1) {\n        return true\n      }\n\n      if (pageCount === 0) {\n        return false\n      }\n\n      return pageIndex < pageCount - 1\n    }\n\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1)\n    }\n\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1\n      })\n    }\n\n    table.firstPage = () => {\n      return table.setPageIndex(0)\n    }\n\n    table.lastPage = () => {\n      return table.setPageIndex(table.getPageCount() - 1)\n    }\n\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel()\n    table.getPaginationRowModel = () => {\n      if (\n        !table._getPaginationRowModel &&\n        table.options.getPaginationRowModel\n      ) {\n        table._getPaginationRowModel =\n          table.options.getPaginationRowModel(table)\n      }\n\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel()\n      }\n\n      return table._getPaginationRowModel()\n    }\n\n    table.getPageCount = () => {\n      return (\n        table.options.pageCount ??\n        Math.ceil(table.getRowCount() / table.getState().pagination.pageSize)\n      )\n    }\n\n    table.getRowCount = () => {\n      return (\n        table.options.rowCount ?? table.getPrePaginationRowModel().rows.length\n      )\n    }\n  },\n}\n", "import {\n  OnChangeFn,\n  Updater,\n  Table,\n  Row,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowPinningPosition = false | 'top' | 'bottom'\n\nexport interface RowPinningState {\n  bottom?: string[]\n  top?: string[]\n}\n\nexport interface RowPinningTableState {\n  rowPinning: RowPinningState\n}\n\nexport interface RowPinningOptions<TData extends RowData> {\n  /**\n   * Enables/disables row pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#enablerowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  enableRowPinning?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * When `false`, pinned rows will not be visible if they are filtered or paginated out of the table. When `true`, pinned rows will always be visible regardless of filtering or pagination. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#keeppinnedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  keepPinnedRows?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowPinning` changes. This overrides the default internal state management, so you will also need to supply `state.rowPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#onrowpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/onrowpinningchange)\n   */\n  onRowPinningChange?: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningDefaultOptions {\n  onRowPinningChange: OnChangeFn<RowPinningState>\n}\n\nexport interface RowPinningRow {\n  /**\n   * Returns whether or not the row can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcanpin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the row. (`'top'`, `'bottom'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getispinned-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsPinned: () => RowPinningPosition\n  /**\n   * Returns the numeric pinned index of the row within a pinned row group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getpinnedindex-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a row to the `'top'` or `'bottom'`, or unpins the row to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#pin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  pin: (\n    position: RowPinningPosition,\n    includeLeafRows?: boolean,\n    includeParentRows?: boolean\n  ) => void\n}\n\nexport interface RowPinningInstance<TData extends RowData> {\n  _getPinnedRows: (\n    visiblePinnedRows: Array<Row<TData>>,\n    pinnedRowIds: Array<string> | undefined,\n    position: 'top' | 'bottom'\n  ) => Row<TData>[]\n  /**\n   * Returns all bottom pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getbottomrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getBottomRows: () => Row<TData>[]\n  /**\n   * Returns all rows that are not pinned to the top or bottom.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getcenterrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getCenterRows: () => Row<TData>[]\n  /**\n   * Returns whether or not any rows are pinned. Optionally specify to only check for pinned rows in either the `top` or `bottom` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#getissomerowspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getIsSomeRowsPinned: (position?: RowPinningPosition) => boolean\n  /**\n   * Returns all top pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#gettoprows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  getTopRows: () => Row<TData>[]\n  /**\n   * Resets the **rowPinning** state to `initialState.rowPinning`, or `true` can be passed to force a default blank state reset to `{ top: [], bottom: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#resetrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  resetRowPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-pinning#setrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-pinning)\n   */\n  setRowPinning: (updater: Updater<RowPinningState>) => void\n}\n\n//\n\nconst getDefaultRowPinningState = (): RowPinningState => ({\n  top: [],\n  bottom: [],\n})\n\nexport const RowPinning: TableFeature = {\n  getInitialState: (state): RowPinningTableState => {\n    return {\n      rowPinning: getDefaultRowPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowPinningDefaultOptions => {\n    return {\n      onRowPinningChange: makeStateUpdater('rowPinning', table),\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows\n        ? row.getLeafRows().map(({ id }) => id)\n        : []\n      const parentRowIds = includeParentRows\n        ? row.getParentRows().map(({ id }) => id)\n        : []\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds])\n\n      table.setRowPinning(old => {\n        if (position === 'bottom') {\n          return {\n            top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n            bottom: [\n              ...(old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n          }\n        }\n\n        if (position === 'top') {\n          return {\n            top: [\n              ...(old?.top ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n            bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n          }\n        }\n\n        return {\n          top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n          bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n        }\n      })\n    }\n    row.getCanPin = () => {\n      const { enableRowPinning, enablePinning } = table.options\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row)\n      }\n      return enableRowPinning ?? enablePinning ?? true\n    }\n    row.getIsPinned = () => {\n      const rowIds = [row.id]\n\n      const { top, bottom } = table.getState().rowPinning\n\n      const isTop = rowIds.some(d => top?.includes(d))\n      const isBottom = rowIds.some(d => bottom?.includes(d))\n\n      return isTop ? 'top' : isBottom ? 'bottom' : false\n    }\n    row.getPinnedIndex = () => {\n      const position = row.getIsPinned()\n      if (!position) return -1\n\n      const visiblePinnedRowIds = (\n        position === 'top' ? table.getTopRows() : table.getBottomRows()\n      )?.map(({ id }) => id)\n\n      return visiblePinnedRowIds?.indexOf(row.id) ?? -1\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowPinning = updater => table.options.onRowPinningChange?.(updater)\n\n    table.resetRowPinning = defaultState =>\n      table.setRowPinning(\n        defaultState\n          ? getDefaultRowPinningState()\n          : table.initialState?.rowPinning ?? getDefaultRowPinningState()\n      )\n\n    table.getIsSomeRowsPinned = position => {\n      const pinningState = table.getState().rowPinning\n\n      if (!position) {\n        return Boolean(pinningState.top?.length || pinningState.bottom?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table._getPinnedRows = (visibleRows, pinnedRowIds, position) => {\n      const rows =\n        table.options.keepPinnedRows ?? true\n          ? //get all rows that are pinned even if they would not be otherwise visible\n            //account for expanded parent rows, but not pagination or filtering\n            (pinnedRowIds ?? []).map(rowId => {\n              const row = table.getRow(rowId, true)\n              return row.getIsAllParentsExpanded() ? row : null\n            })\n          : //else get only visible rows that are pinned\n            (pinnedRowIds ?? []).map(\n              rowId => visibleRows.find(row => row.id === rowId)!\n            )\n\n      return rows.filter(Boolean).map(d => ({ ...d, position })) as Row<TData>[]\n    }\n\n    table.getTopRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.top],\n      (allRows, topPinnedRowIds) =>\n        table._getPinnedRows(allRows, topPinnedRowIds, 'top'),\n      getMemoOptions(table.options, 'debugRows', 'getTopRows')\n    )\n\n    table.getBottomRows = memo(\n      () => [table.getRowModel().rows, table.getState().rowPinning.bottom],\n      (allRows, bottomPinnedRowIds) =>\n        table._getPinnedRows(allRows, bottomPinnedRowIds, 'bottom'),\n      getMemoOptions(table.options, 'debugRows', 'getBottomRows')\n    )\n\n    table.getCenterRows = memo(\n      () => [\n        table.getRowModel().rows,\n        table.getState().rowPinning.top,\n        table.getState().rowPinning.bottom,\n      ],\n      (allRows, top, bottom) => {\n        const topAndBottom = new Set([...(top ?? []), ...(bottom ?? [])])\n        return allRows.filter(d => !topAndBottom.has(d.id))\n      },\n      getMemoOptions(table.options, 'debugRows', 'getCenterRows')\n    )\n  },\n}\n", "import {\n  OnChangeFn,\n  Table,\n  Row,\n  RowModel,\n  Updater,\n  RowData,\n  TableFeature,\n} from '../types'\nimport { getMemoOptions, makeStateUpdater, memo } from '../utils'\n\nexport type RowSelectionState = Record<string, boolean>\n\nexport interface RowSelectionTableState {\n  rowSelection: RowSelectionState\n}\n\nexport interface RowSelectionOptions<TData extends RowData> {\n  /**\n   * - Enables/disables multiple row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable multiple row selection for that row's children/grandchildren\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablemultirowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableMultiRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * - Enables/disables row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable row selection for that row\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablerowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * Enables/disables automatic sub-row selection when a parent row is selected, or a function that enables/disables automatic sub-row selection for each row.\n   * (Use in combination with expanding or grouping features)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablesubrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableSubRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowSelection` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#onrowselectionchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  onRowSelectionChange?: OnChangeFn<RowSelectionState>\n  // enableGroupingRowSelection?:\n  //   | boolean\n  //   | ((\n  //       row: Row<TData>\n  //     ) => boolean)\n  // isAdditiveSelectEvent?: (e: unknown) => boolean\n  // isInclusiveSelectEvent?: (e: unknown) => boolean\n  // selectRowsFn?: (\n  //   table: Table<TData>,\n  //   rowModel: RowModel<TData>\n  // ) => RowModel<TData>\n}\n\nexport interface RowSelectionRow {\n  /**\n   * Returns whether or not the row can multi-select.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanmultiselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanMultiSelect: () => boolean\n  /**\n   * Returns whether or not the row can be selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelect: () => boolean\n  /**\n   * Returns whether or not the row can select sub rows automatically when the parent row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselectsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelectSubRows: () => boolean\n  /**\n   * Returns whether or not all of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallsubrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllSubRowsSelected: () => boolean\n  /**\n   * Returns whether or not the row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSelected: () => boolean\n  /**\n   * Returns whether or not some of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomeselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeSelected: () => boolean\n  /**\n   * Returns a handler that can be used to toggle the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleSelectedHandler: () => (event: unknown) => void\n  /**\n   * Selects/deselects the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleSelected: (value?: boolean, opts?: { selectChildren?: boolean }) => void\n}\n\nexport interface RowSelectionInstance<TData extends RowData> {\n  /**\n   * Returns the row model of all rows that are selected after filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getfilteredselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getFilteredSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getgroupedselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getGroupedSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether or not all rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllPageRowsSelected: () => boolean\n  /**\n   * Returns whether or not all rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomepagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomePageRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeRowsSelected: () => boolean\n  /**\n   * Returns the core row model of all rows before row selection has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getpreselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getPreSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallpagerowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllPageRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Returns a handler that can be used to toggle all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallrowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Resets the **rowSelection** state to the `initialState.rowSelection`, or `true` can be passed to force a default blank state reset to `{}`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#resetrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  resetRowSelection: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowSelection` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#setrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  setRowSelection: (updater: Updater<RowSelectionState>) => void\n  /**\n   * Selects/deselects all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllPageRowsSelected: (value?: boolean) => void\n  /**\n   * Selects/deselects all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllRowsSelected: (value?: boolean) => void\n}\n\n//\n\nexport const RowSelection: TableFeature = {\n  getInitialState: (state): RowSelectionTableState => {\n    return {\n      rowSelection: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionOptions<TData> => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true,\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowSelection = updater =>\n      table.options.onRowSelectionChange?.(updater)\n    table.resetRowSelection = defaultState =>\n      table.setRowSelection(\n        defaultState ? {} : table.initialState.rowSelection ?? {}\n      )\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value =\n          typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected()\n\n        const rowSelection = { ...old }\n\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return\n            }\n            rowSelection[row.id] = true\n          })\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id]\n          })\n        }\n\n        return rowSelection\n      })\n    }\n    table.toggleAllPageRowsSelected = value =>\n      table.setRowSelection(old => {\n        const resolvedValue =\n          typeof value !== 'undefined'\n            ? value\n            : !table.getIsAllPageRowsSelected()\n\n        const rowSelection: RowSelectionState = { ...old }\n\n        table.getRowModel().rows.forEach(row => {\n          mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table)\n        })\n\n        return rowSelection\n      })\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel()\n    table.getSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getCoreRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSelectedRowModel')\n    )\n\n    table.getFilteredSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getFilteredRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFilteredSelectedRowModel')\n    )\n\n    table.getGroupedSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getSortedRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getGroupedSelectedRowModel')\n    )\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows\n      const { rowSelection } = table.getState()\n\n      let isAllRowsSelected = Boolean(\n        preGroupedFlatRows.length && Object.keys(rowSelection).length\n      )\n\n      if (isAllRowsSelected) {\n        if (\n          preGroupedFlatRows.some(\n            row => row.getCanSelect() && !rowSelection[row.id]\n          )\n        ) {\n          isAllRowsSelected = false\n        }\n      }\n\n      return isAllRowsSelected\n    }\n\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table\n        .getPaginationRowModel()\n        .flatRows.filter(row => row.getCanSelect())\n      const { rowSelection } = table.getState()\n\n      let isAllPageRowsSelected = !!paginationFlatRows.length\n\n      if (\n        isAllPageRowsSelected &&\n        paginationFlatRows.some(row => !rowSelection[row.id])\n      ) {\n        isAllPageRowsSelected = false\n      }\n\n      return isAllPageRowsSelected\n    }\n\n    table.getIsSomeRowsSelected = () => {\n      const totalSelected = Object.keys(\n        table.getState().rowSelection ?? {}\n      ).length\n      return (\n        totalSelected > 0 &&\n        totalSelected < table.getFilteredRowModel().flatRows.length\n      )\n    }\n\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows\n      return table.getIsAllPageRowsSelected()\n        ? false\n        : paginationFlatRows\n            .filter(row => row.getCanSelect())\n            .some(d => d.getIsSelected() || d.getIsSomeSelected())\n    }\n\n    table.getToggleAllRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllPageRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected()\n\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !isSelected\n\n        if (row.getCanSelect() && isSelected === value) {\n          return old\n        }\n\n        const selectedRowIds = { ...old }\n\n        mutateRowIsSelected(\n          selectedRowIds,\n          row.id,\n          value,\n          opts?.selectChildren ?? true,\n          table\n        )\n\n        return selectedRowIds\n      })\n    }\n    row.getIsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isRowSelected(row, rowSelection)\n    }\n\n    row.getIsSomeSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'some'\n    }\n\n    row.getIsAllSubRowsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'all'\n    }\n\n    row.getCanSelect = () => {\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row)\n      }\n\n      return table.options.enableRowSelection ?? true\n    }\n\n    row.getCanSelectSubRows = () => {\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row)\n      }\n\n      return table.options.enableSubRowSelection ?? true\n    }\n\n    row.getCanMultiSelect = () => {\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row)\n      }\n\n      return table.options.enableMultiRowSelection ?? true\n    }\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect()\n\n      return (e: unknown) => {\n        if (!canSelect) return\n        row.toggleSelected(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nconst mutateRowIsSelected = <TData extends RowData>(\n  selectedRowIds: Record<string, boolean>,\n  id: string,\n  value: boolean,\n  includeChildren: boolean,\n  table: Table<TData>\n) => {\n  const row = table.getRow(id, true)\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key])\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true\n    }\n  } else {\n    delete selectedRowIds[id]\n  }\n  // }\n\n  if (includeChildren && row.subRows?.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row =>\n      mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table)\n    )\n  }\n}\n\nexport function selectRowsFn<TData extends RowData>(\n  table: Table<TData>,\n  rowModel: RowModel<TData>\n): RowModel<TData> {\n  const rowSelection = table.getState().rowSelection\n\n  const newSelectedFlatRows: Row<TData>[] = []\n  const newSelectedRowsById: Record<string, Row<TData>> = {}\n\n  // Filters top level and nested rows\n  const recurseRows = (rows: Row<TData>[], depth = 0): Row<TData>[] => {\n    return rows\n      .map(row => {\n        const isSelected = isRowSelected(row, rowSelection)\n\n        if (isSelected) {\n          newSelectedFlatRows.push(row)\n          newSelectedRowsById[row.id] = row\n        }\n\n        if (row.subRows?.length) {\n          row = {\n            ...row,\n            subRows: recurseRows(row.subRows, depth + 1),\n          }\n        }\n\n        if (isSelected) {\n          return row\n        }\n      })\n      .filter(Boolean) as Row<TData>[]\n  }\n\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById,\n  }\n}\n\nexport function isRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>\n): boolean {\n  return selection[row.id] ?? false\n}\n\nexport function isSubRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>,\n  table: Table<TData>\n): boolean | 'some' | 'all' {\n  if (!row.subRows?.length) return false\n\n  let allChildrenSelected = true\n  let someSelected = false\n\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return\n    }\n\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection, table)\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true\n        allChildrenSelected = false\n      } else {\n        allChildrenSelected = false\n      }\n    }\n  })\n\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false\n}\n", "import { SortingFn } from './features/RowSorting'\n\nexport const reSplitAlphaNumeric = /([0-9]+)/gm\n\nconst alphanumeric: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\nconst alphanumericCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\nconst datetime: SortingFn<any> = (rowA, rowB, columnId) => {\n  const a = rowA.getValue<Date>(columnId)\n  const b = rowB.getValue<Date>(columnId)\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nconst basic: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId))\n}\n\n// Utils\n\nfunction compareBasic(a: any, b: any) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction toString(a: any) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr: string, bStr: string) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean)\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift()!\n    const bb = b.shift()!\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0]!)) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1]!)) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\n// Exports\n\nexport const sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic,\n}\n\nexport type BuiltInSortingFn = keyof typeof sortingFns\n", "import { RowModel } from '..'\nimport {\n  BuiltInSortingFn,\n  reSplitAlphaNumeric,\n  sortingFns,\n} from '../sortingFns'\n\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  SortingFns,\n  TableFeature,\n} from '../types'\n\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type SortDirection = 'asc' | 'desc'\n\nexport interface ColumnSort {\n  desc: boolean\n  id: string\n}\n\nexport type SortingState = ColumnSort[]\n\nexport interface SortingTableState {\n  sorting: SortingState\n}\n\nexport interface SortingFn<TData extends RowData> {\n  (rowA: Row<TData>, rowB: Row<TData>, columnId: string): number\n}\n\nexport type CustomSortingFns<TData extends RowData> = Record<\n  string,\n  SortingFn<TData>\n>\n\nexport type SortingFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof SortingFns\n  | BuiltInSortingFn\n  | SortingFn<TData>\n\nexport interface SortingColumnDef<TData extends RowData> {\n  /**\n   * Enables/Disables multi-sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Inverts the order of the sorting for this column. This is useful for values that have an inverted best/worst scale where lower numbers are better, eg. a ranking (1st, 2nd, 3rd) or golf-like scoring\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#invertsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  invertSorting?: boolean\n  /**\n   * Set to `true` for sorting toggles on this column to start in the descending direction.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n  /**\n   * The sorting function to use with this column.\n   * - A `string` referencing a built-in sorting function\n   * - A custom sorting function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortingFn?: SortingFnOption<TData>\n  /**\n   * The priority of undefined values when sorting this column.\n   * - `false`\n   *   - Undefined values will be considered tied and need to be sorted by the next column filter or original index (whichever applies)\n   * - `-1`\n   *   - Undefined values will be sorted with higher priority (ascending) (if ascending, undefined will appear on the beginning of the list)\n   * - `1`\n   *   - Undefined values will be sorted with lower priority (descending) (if ascending, undefined will appear on the end of the list)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortundefined)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortUndefined?: false | -1 | 1 | 'first' | 'last'\n}\n\nexport interface SortingColumn<TData extends RowData> {\n  /**\n   * Removes this column from the table's sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#clearsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  clearSorting: () => void\n  /**\n   * Returns a sort direction automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortDir: () => SortDirection\n  /**\n   * Returns a sorting function automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortingFn: () => SortingFn<TData>\n  /**\n   * Returns whether this column can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcanmultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanMultiSort: () => boolean\n  /**\n   * Returns whether this column can be sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcansort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanSort: () => boolean\n  /**\n   * Returns the first direction that should be used when sorting this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getfirstsortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getFirstSortDir: () => SortDirection\n  /**\n   * Returns the current sort direction of this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getissorted)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getIsSorted: () => false | SortDirection\n  /**\n   * Returns the next sorting order.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getnextsortingorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getNextSortingOrder: () => SortDirection | false\n  /**\n   * Returns the index position of this column's sorting within the sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortIndex: () => number\n  /**\n   * Returns the resolved sorting function to be used for this column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortingFn: () => SortingFn<TData>\n  /**\n   * Returns a function that can be used to toggle this column's sorting state. This is useful for attaching a click handler to the column header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#gettogglesortinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getToggleSortingHandler: () => undefined | ((event: unknown) => void)\n  /**\n   * Toggles this columns sorting state. If `desc` is provided, it will force the sort direction to that value. If `isMulti` is provided, it will additivity multi-sort the column (or toggle it if it is already sorted).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#togglesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  toggleSorting: (desc?: boolean, isMulti?: boolean) => void\n}\n\ninterface SortingOptionsBase {\n  /**\n   * Enables/disables the ability to remove multi-sorts\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultiremove)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiRemove?: boolean\n  /**\n   * Enables/Disables multi-sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Enables/Disables the ability to remove sorting for the table.\n   * - If `true` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'none' -> ...\n   * - If `false` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'desc' -> 'asc' -> ...\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesortingremoval)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSortingRemoval?: boolean\n  /**\n   * This function is used to retrieve the sorted row model. If using server-side sorting, this function is not required. To use client-side sorting, pass the exported `getSortedRowModel()` from your adapter to your table or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Pass a custom function that will be used to determine if a multi-sort event should be triggered. It is passed the event from the sort toggle handler and should return `true` if the event should trigger a multi-sort.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#ismultisortevent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  isMultiSortEvent?: (e: unknown) => boolean\n  /**\n   * Enables manual sorting for the table. If this is `true`, you will be expected to sort your data before it is passed to the table. This is useful if you are doing server-side sorting.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#manualsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  manualSorting?: boolean\n  /**\n   * Set a maximum number of columns that can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#maxmultisortcolcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  maxMultiSortColCount?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.sorting` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#onsortingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  onSortingChange?: OnChangeFn<SortingState>\n  /**\n   * If `true`, all sorts will default to descending as their first toggle state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n}\n\ntype ResolvedSortingFns = keyof SortingFns extends never\n  ? {\n      sortingFns?: Record<string, SortingFn<any>>\n    }\n  : {\n      sortingFns: Record<keyof SortingFns, SortingFn<any>>\n    }\n\nexport interface SortingOptions<TData extends RowData>\n  extends SortingOptionsBase,\n    ResolvedSortingFns {}\n\nexport interface SortingInstance<TData extends RowData> {\n  _getSortedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getpresortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getPreSortedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **sorting** state to `initialState.sorting`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#resetsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  resetSorting: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.sorting` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#setsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  setSorting: (updater: Updater<SortingState>) => void\n}\n\n//\n\nexport const RowSorting: TableFeature = {\n  getInitialState: (state): SortingTableState => {\n    return {\n      sorting: [],\n      ...state,\n    }\n  },\n\n  getDefaultColumnDef: <TData extends RowData>(): SortingColumnDef<TData> => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingOptions<TData> => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: (e: unknown) => {\n        return (e as MouseEvent).shiftKey\n      },\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10)\n\n      let isString = false\n\n      for (const row of firstRows) {\n        const value = row?.getValue(column.id)\n\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime\n        }\n\n        if (typeof value === 'string') {\n          isString = true\n\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric\n          }\n        }\n      }\n\n      if (isString) {\n        return sortingFns.text\n      }\n\n      return sortingFns.basic\n    }\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return 'asc'\n      }\n\n      return 'desc'\n    }\n    column.getSortingFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.sortingFn)\n        ? column.columnDef.sortingFn\n        : column.columnDef.sortingFn === 'auto'\n          ? column.getAutoSortingFn()\n          : table.options.sortingFns?.[column.columnDef.sortingFn as string] ??\n            sortingFns[column.columnDef.sortingFn as BuiltInSortingFn]\n    }\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder()\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null\n\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old?.find(d => d.id === column.id)\n        const existingIndex = old?.findIndex(d => d.id === column.id)\n\n        let newSorting: SortingState = []\n\n        // What should we do with this sort action?\n        let sortAction: 'add' | 'remove' | 'toggle' | 'replace'\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc'\n\n        // Multi-mode\n        if (old?.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'add'\n          }\n        } else {\n          // Normal mode\n          if (old?.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace'\n          } else if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'replace'\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove'\n            }\n          }\n        }\n\n        if (sortAction === 'add') {\n          newSorting = [\n            ...old,\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n          // Take latest n columns\n          newSorting.splice(\n            0,\n            newSorting.length -\n              (table.options.maxMultiSortColCount ?? Number.MAX_SAFE_INTEGER)\n          )\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc,\n              }\n            }\n            return d\n          })\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id)\n        } else {\n          newSorting = [\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n        }\n\n        return newSorting\n      })\n    }\n\n    column.getFirstSortDir = () => {\n      const sortDescFirst =\n        column.columnDef.sortDescFirst ??\n        table.options.sortDescFirst ??\n        column.getAutoSortDir() === 'desc'\n      return sortDescFirst ? 'desc' : 'asc'\n    }\n\n    column.getNextSortingOrder = (multi?: boolean) => {\n      const firstSortDirection = column.getFirstSortDir()\n      const isSorted = column.getIsSorted()\n\n      if (!isSorted) {\n        return firstSortDirection\n      }\n\n      if (\n        isSorted !== firstSortDirection &&\n        (table.options.enableSortingRemoval ?? true) && // If enableSortRemove, enable in general\n        (multi ? table.options.enableMultiRemove ?? true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc'\n    }\n\n    column.getCanSort = () => {\n      return (\n        (column.columnDef.enableSorting ?? true) &&\n        (table.options.enableSorting ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getCanMultiSort = () => {\n      return (\n        column.columnDef.enableMultiSort ??\n        table.options.enableMultiSort ??\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsSorted = () => {\n      const columnSort = table.getState().sorting?.find(d => d.id === column.id)\n\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc'\n    }\n\n    column.getSortIndex = () =>\n      table.getState().sorting?.findIndex(d => d.id === column.id) ?? -1\n\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old =>\n        old?.length ? old.filter(d => d.id !== column.id) : []\n      )\n    }\n\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort()\n\n      return (e: unknown) => {\n        if (!canSort) return\n        ;(e as any).persist?.()\n        column.toggleSorting?.(\n          undefined,\n          column.getCanMultiSort() ? table.options.isMultiSortEvent?.(e) : false\n        )\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setSorting = updater => table.options.onSortingChange?.(updater)\n    table.resetSorting = defaultState => {\n      table.setSorting(defaultState ? [] : table.initialState?.sorting ?? [])\n    }\n    table.getPreSortedRowModel = () => table.getGroupedRowModel()\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table)\n      }\n\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel()\n      }\n\n      return table._getSortedRowModel()\n    }\n  },\n}\n", "import { functionalUpdate, getMemoOptions, memo, RequiredKeys } from '../utils'\n\nimport {\n  Updater,\n  TableOptionsResolved,\n  TableState,\n  Table,\n  InitialTableState,\n  Row,\n  Column,\n  RowModel,\n  ColumnDef,\n  TableOptions,\n  RowData,\n  TableMeta,\n  ColumnDefResolved,\n  GroupColumnDef,\n  TableFeature,\n} from '../types'\n\n//\nimport { createColumn } from './column'\nimport { Headers } from './headers'\n//\n\nimport { ColumnFaceting } from '../features/ColumnFaceting'\nimport { ColumnFiltering } from '../features/ColumnFiltering'\nimport { ColumnGrouping } from '../features/ColumnGrouping'\nimport { ColumnOrdering } from '../features/ColumnOrdering'\nimport { ColumnPinning } from '../features/ColumnPinning'\nimport { ColumnSizing } from '../features/ColumnSizing'\nimport { ColumnVisibility } from '../features/ColumnVisibility'\nimport { GlobalFaceting } from '../features/GlobalFaceting'\nimport { GlobalFiltering } from '../features/GlobalFiltering'\nimport { RowExpanding } from '../features/RowExpanding'\nimport { RowPagination } from '../features/RowPagination'\nimport { RowPinning } from '../features/RowPinning'\nimport { RowSelection } from '../features/RowSelection'\nimport { RowSorting } from '../features/RowSorting'\n\nconst builtInFeatures = [\n  Headers,\n  ColumnVisibility,\n  ColumnOrdering,\n  ColumnPinning,\n  ColumnFaceting,\n  ColumnFiltering,\n  GlobalFaceting, //depends on ColumnFaceting\n  GlobalFiltering, //depends on ColumnFiltering\n  RowSorting,\n  ColumnGrouping, //depends on RowSorting\n  RowExpanding,\n  RowPagination,\n  RowPinning,\n  RowSelection,\n  ColumnSizing,\n] as const\n\n//\n\nexport interface CoreTableState {}\n\nexport interface CoreOptions<TData extends RowData> {\n  /**\n   * An array of extra features that you can add to the table instance.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#_features)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  _features?: TableFeature[]\n  /**\n   * Set this option to override any of the `autoReset...` feature options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#autoresetall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  autoResetAll?: boolean\n  /**\n   * The array of column defs to use for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  columns: ColumnDef<TData, any>[]\n  /**\n   * The data for the table to display. This array should match the type you provided to `table.setRowType<...>`. Columns can access this data via string/index or a functional accessor. When the `data` option changes reference, the table will reprocess the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#data)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  data: TData[]\n  /**\n   * Set this option to `true` to output all debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugAll?: boolean\n  /**\n   * Set this option to `true` to output cell debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcells]\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugCells?: boolean\n  /**\n   * Set this option to `true` to output column debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugColumns?: boolean\n  /**\n   * Set this option to `true` to output header debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugHeaders?: boolean\n  /**\n   * Set this option to `true` to output row debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugRows?: boolean\n  /**\n   * Set this option to `true` to output table debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugtable)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugTable?: boolean\n  /**\n   * Default column options to use for all column defs supplied to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#defaultcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  defaultColumn?: Partial<ColumnDef<TData, unknown>>\n  /**\n   * This required option is a factory for a function that computes and returns the core row model for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: (table: Table<any>) => () => RowModel<any>\n  /**\n   * This optional function is used to derive a unique ID for any given row. If not provided the rows index is used (nested rows join together with `.` using their grandparents' index eg. `index.index.index`). If you need to identify individual rows that are originating from any server-side operations, it's suggested you use this function to return an ID that makes sense regardless of network IO/ambiguity eg. a userId, taskId, database ID field, etc.\n   * @example getRowId: row => row.userId\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowId?: (originalRow: TData, index: number, parent?: Row<TData>) => string\n  /**\n   * This optional function is used to access the sub rows for any given row. If you are using nested rows, you will need to use this function to return the sub rows object (or undefined) from the row.\n   * @example getSubRows: row => row.subRows\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getSubRows?: (originalRow: TData, index: number) => undefined | TData[]\n  /**\n   * Use this option to optionally pass initial state to the table. This state will be used when resetting various table states either automatically by the table (eg. `options.autoResetPageIndex`) or via functions like `table.resetRowSelection()`. Most reset function allow you optionally pass a flag to reset to a blank/default state instead of the initial state.\n   *\n   * Table state will not be reset when this object changes, which also means that the initial state object does not need to be stable.\n   *\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState?: InitialTableState\n  /**\n   * This option is used to optionally implement the merging of table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#mergeoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  mergeOptions?: (\n    defaultOptions: TableOptions<TData>,\n    options: Partial<TableOptions<TData>>\n  ) => TableOptions<TData>\n  /**\n   * You can pass any object to `options.meta` and access it anywhere the `table` is available via `table.options.meta`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#meta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  meta?: TableMeta<TData>\n  /**\n   * The `onStateChange` option can be used to optionally listen to state changes within the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#onstatechange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  onStateChange: (updater: Updater<TableState>) => void\n  /**\n   * Value used when the desired value is not found in the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#renderfallbackvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  renderFallbackValue: any\n  /**\n   * The `state` option can be used to optionally _control_ part or all of the table state. The state you pass here will merge with and overwrite the internal automatically-managed state to produce the final state for the table. You can also listen to state changes via the `onStateChange` option.\n   * > Note: Any state passed in here will override both the internal state and any other `initialState` you provide.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#state)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  state: Partial<TableState>\n}\n\nexport interface CoreInstance<TData extends RowData> {\n  _features: readonly TableFeature[]\n  _getAllFlatColumnsById: () => Record<string, Column<TData, unknown>>\n  _getColumnDefs: () => ColumnDef<TData, unknown>[]\n  _getCoreRowModel?: () => RowModel<TData>\n  _getDefaultColumnDef: () => Partial<ColumnDef<TData, unknown>>\n  _getRowId: (_: TData, index: number, parent?: Row<TData>) => string\n  _queue: (cb: () => void) => void\n  /**\n   * Returns all columns in the table in their normalized and nested hierarchy.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all columns in the table flattened to a single level.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all leaf-node columns in the table flattened to a single level. This does not include parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a single column by its ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getColumn: (columnId: string) => Column<TData, unknown> | undefined\n  /**\n   * Returns the core row model before any processing has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: () => RowModel<TData>\n  /**\n   * Returns the row with the given ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRow: (id: string, searchAll?: boolean) => Row<TData>\n  /**\n   * Returns the final model after all processing from other used features has been applied. This is the row model that is most commonly used for rendering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowModel: () => RowModel<TData>\n  /**\n   * Call this function to get the table's current state. It's recommended to use this function and its state, especially when managing the table state manually. It is the exact same state used internally by the table for every feature and function it provides.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getState: () => TableState\n  /**\n   * This is the resolved initial state of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState: TableState\n  /**\n   * A read-only reference to the table's current options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#options)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  options: RequiredKeys<TableOptionsResolved<TData>, 'state'>\n  /**\n   * Call this function to reset the table state to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#reset)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  reset: () => void\n  /**\n   * This function can be used to update the table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setOptions: (newOptions: Updater<TableOptionsResolved<TData>>) => void\n  /**\n   * Call this function to update the table state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setState: (updater: Updater<TableState>) => void\n}\n\nexport function createTable<TData extends RowData>(\n  options: TableOptionsResolved<TData>\n): Table<TData> {\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    (options.debugAll || options.debugTable)\n  ) {\n    console.info('Creating Table Instance...')\n  }\n\n  const _features = [...builtInFeatures, ...(options._features ?? [])]\n\n  let table = { _features } as unknown as Table<TData>\n\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions?.(table))\n  }, {}) as TableOptionsResolved<TData>\n\n  const mergeOptions = (options: TableOptionsResolved<TData>) => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options)\n    }\n\n    return {\n      ...defaultOptions,\n      ...options,\n    }\n  }\n\n  const coreInitialState: CoreTableState = {}\n\n  let initialState = {\n    ...coreInitialState,\n    ...(options.initialState ?? {}),\n  } as TableState\n\n  table._features.forEach(feature => {\n    initialState = (feature.getInitialState?.(initialState) ??\n      initialState) as TableState\n  })\n\n  const queued: (() => void)[] = []\n  let queuedTimeout = false\n\n  const coreInstance: CoreInstance<TData> = {\n    _features,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb)\n\n      if (!queuedTimeout) {\n        queuedTimeout = true\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve()\n          .then(() => {\n            while (queued.length) {\n              queued.shift()!()\n            }\n            queuedTimeout = false\n          })\n          .catch(error =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState)\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options)\n      table.options = mergeOptions(newOptions) as RequiredKeys<\n        TableOptionsResolved<TData>,\n        'state'\n      >\n    },\n\n    getState: () => {\n      return table.options.state as TableState\n    },\n\n    setState: (updater: Updater<TableState>) => {\n      table.options.onStateChange?.(updater)\n    },\n\n    _getRowId: (row: TData, index: number, parent?: Row<TData>) =>\n      table.options.getRowId?.(row, index, parent) ??\n      `${parent ? [parent.id, index].join('.') : index}`,\n\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table)\n      }\n\n      return table._getCoreRowModel!()\n    },\n\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel()\n    },\n    //in next version, we should just pass in the row model as the optional 2nd arg\n    getRow: (id: string, searchAll?: boolean) => {\n      let row = (\n        searchAll ? table.getPrePaginationRowModel() : table.getRowModel()\n      ).rowsById[id]\n\n      if (!row) {\n        row = table.getCoreRowModel().rowsById[id]\n        if (!row) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`getRow could not find row with ID: ${id}`)\n          }\n          throw new Error()\n        }\n      }\n\n      return row\n    },\n    _getDefaultColumnDef: memo(\n      () => [table.options.defaultColumn],\n      defaultColumn => {\n        defaultColumn = (defaultColumn ?? {}) as Partial<\n          ColumnDef<TData, unknown>\n        >\n\n        return {\n          header: props => {\n            const resolvedColumnDef = props.header.column\n              .columnDef as ColumnDefResolved<TData>\n\n            if (resolvedColumnDef.accessorKey) {\n              return resolvedColumnDef.accessorKey\n            }\n\n            if (resolvedColumnDef.accessorFn) {\n              return resolvedColumnDef.id\n            }\n\n            return null\n          },\n          // footer: props => props.header.column.id,\n          cell: props => props.renderValue<any>()?.toString?.() ?? null,\n          ...table._features.reduce((obj, feature) => {\n            return Object.assign(obj, feature.getDefaultColumnDef?.())\n          }, {}),\n          ...defaultColumn,\n        } as Partial<ColumnDef<TData, unknown>>\n      },\n      getMemoOptions(options, 'debugColumns', '_getDefaultColumnDef')\n    ),\n\n    _getColumnDefs: () => table.options.columns,\n\n    getAllColumns: memo(\n      () => [table._getColumnDefs()],\n      columnDefs => {\n        const recurseColumns = (\n          columnDefs: ColumnDef<TData, unknown>[],\n          parent?: Column<TData, unknown>,\n          depth = 0\n        ): Column<TData, unknown>[] => {\n          return columnDefs.map(columnDef => {\n            const column = createColumn(table, columnDef, depth, parent)\n\n            const groupingColumnDef = columnDef as GroupColumnDef<\n              TData,\n              unknown\n            >\n\n            column.columns = groupingColumnDef.columns\n              ? recurseColumns(groupingColumnDef.columns, column, depth + 1)\n              : []\n\n            return column\n          })\n        }\n\n        return recurseColumns(columnDefs)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllColumns')\n    ),\n\n    getAllFlatColumns: memo(\n      () => [table.getAllColumns()],\n      allColumns => {\n        return allColumns.flatMap(column => {\n          return column.getFlatColumns()\n        })\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumns')\n    ),\n\n    _getAllFlatColumnsById: memo(\n      () => [table.getAllFlatColumns()],\n      flatColumns => {\n        return flatColumns.reduce(\n          (acc, column) => {\n            acc[column.id] = column\n            return acc\n          },\n          {} as Record<string, Column<TData, unknown>>\n        )\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllFlatColumnsById')\n    ),\n\n    getAllLeafColumns: memo(\n      () => [table.getAllColumns(), table._getOrderColumnsFn()],\n      (allColumns, orderColumns) => {\n        let leafColumns = allColumns.flatMap(column => column.getLeafColumns())\n        return orderColumns(leafColumns)\n      },\n      getMemoOptions(options, 'debugColumns', 'getAllLeafColumns')\n    ),\n\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId]\n\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`)\n      }\n\n      return column\n    },\n  }\n\n  Object.assign(table, coreInstance)\n\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index]\n    feature?.createTable?.(table)\n  }\n\n  return table\n}\n", "import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getCoreRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.options.data],\n      (\n        data\n      ): {\n        rows: Row<TData>[]\n        flatRows: Row<TData>[]\n        rowsById: Record<string, Row<TData>>\n      } => {\n        const rowModel: RowModel<TData> = {\n          rows: [],\n          flatRows: [],\n          rowsById: {},\n        }\n\n        const accessRows = (\n          originalRows: TData[],\n          depth = 0,\n          parentRow?: Row<TData>\n        ): Row<TData>[] => {\n          const rows = [] as Row<TData>[]\n\n          for (let i = 0; i < originalRows.length; i++) {\n            // This could be an expensive check at scale, so we should move it somewhere else, but where?\n            // if (!id) {\n            //   if (process.env.NODE_ENV !== 'production') {\n            //     throw new Error(`getRowId expected an ID, but got ${id}`)\n            //   }\n            // }\n\n            // Make the row\n            const row = createRow(\n              table,\n              table._getRowId(originalRows[i]!, i, parentRow),\n              originalRows[i]!,\n              i,\n              depth,\n              undefined,\n              parentRow?.id\n            )\n\n            // Keep track of every row in a flat array\n            rowModel.flatRows.push(row)\n            // Also keep track of every row by its ID\n            rowModel.rowsById[row.id] = row\n            // Push table row into parent\n            rows.push(row)\n\n            // Get the original subrows\n            if (table.options.getSubRows) {\n              row.originalSubRows = table.options.getSubRows(\n                originalRows[i]!,\n                i\n              )\n\n              // Then recursively access them\n              if (row.originalSubRows?.length) {\n                row.subRows = accessRows(row.originalSubRows, depth + 1, row)\n              }\n            }\n          }\n\n          return rows\n        }\n\n        rowModel.rows = accessRows(data)\n\n        return rowModel\n      },\n      getMemoOptions(table.options, 'debugTable', 'getRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n", "import { Table, Row, RowModel, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getExpandedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().expanded,\n        table.getPreExpandedRowModel(),\n        table.options.paginateExpandedRows,\n      ],\n      (expanded, rowModel, paginateExpandedRows) => {\n        if (\n          !rowModel.rows.length ||\n          (expanded !== true && !Object.keys(expanded ?? {}).length)\n        ) {\n          return rowModel\n        }\n\n        if (!paginateExpandedRows) {\n          // Only expand rows at this point if they are being paginated\n          return rowModel\n        }\n\n        return expandRows(rowModel)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getExpandedRowModel')\n    )\n}\n\nexport function expandRows<TData extends RowData>(rowModel: RowModel<TData>) {\n  const expandedRows: Row<TData>[] = []\n\n  const handleRow = (row: Row<TData>) => {\n    expandedRows.push(row)\n\n    if (row.subRows?.length && row.getIsExpanded()) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rowModel.rows.forEach(handleRow)\n\n  return {\n    rows: expandedRows,\n    flatRows: rowModel.flatRows,\n    rowsById: rowModel.rowsById,\n  }\n}\n", "import { Table, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getFacetedMinMaxValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => undefined | [number, number] {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return undefined\n\n        const uniqueValues = facetedRowModel.flatRows\n          .flatMap(flatRow => flatRow.getUniqueValues(columnId) ?? [])\n          .map(Number)\n          .filter(value => !Number.isNaN(value))\n\n        if (!uniqueValues.length) return\n\n        let facetedMinValue = uniqueValues[0]!\n        let facetedMaxValue = uniqueValues[uniqueValues.length - 1]!\n\n        for (const value of uniqueValues) {\n          if (value < facetedMinValue) facetedMinValue = value\n          else if (value > facetedMaxValue) facetedMaxValue = value\n        }\n\n        return [facetedMinValue, facetedMaxValue]\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFacetedMinMaxValues')\n    )\n}\n", "import { createRow } from '../core/row'\nimport { Row, RowModel, Table, RowData } from '../types'\n\nexport function filterRows<TData extends RowData>(\n  rows: Row<TData>[],\n  filterRowImpl: (row: Row<TData>) => any,\n  table: Table<TData>\n) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table)\n  }\n\n  return filterRowModelFromRoot(rows, filterRowImpl, table)\n}\n\nfunction filterRowModelFromLeafs<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => Row<TData>[],\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    const rows: Row<TData>[] = []\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const newRow = createRow(\n        table,\n        row.id,\n        row.original,\n        row.index,\n        row.depth,\n        undefined,\n        row.parentId\n      )\n      newRow.columnFilters = row.columnFilters\n\n      if (row.subRows?.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n        row = newRow\n\n        if (filterRow(row) && !newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n          continue\n        }\n\n        if (filterRow(row) || newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n          continue\n        }\n      } else {\n        row = newRow\n        if (filterRow(row)) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredFlatRows.push(row)\n        }\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n\nfunction filterRowModelFromRoot<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => any,\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  // Filters top level and nested rows\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    // Filter from parents downward first\n\n    const rows: Row<TData>[] = []\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const pass = filterRow(row)\n\n      if (pass) {\n        if (row.subRows?.length && depth < maxDepth) {\n          const newRow = createRow(\n            table,\n            row.id,\n            row.original,\n            row.index,\n            row.depth,\n            undefined,\n            row.parentId\n          )\n          newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n          row = newRow\n        }\n\n        rows.push(row)\n        newFilteredFlatRows.push(row)\n        newFilteredRowsById[row.id] = row\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n", "import { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFacetedRowModel<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => RowModel<TData> {\n  return (table, columnId) =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n        table.getFilteredRowModel(),\n      ],\n      (preRowModel, columnFilters, globalFilter) => {\n        if (\n          !preRowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          return preRowModel\n        }\n\n        const filterableIds = [\n          ...columnFilters.map(d => d.id).filter(d => d !== columnId),\n          globalFilter ? '__global__' : undefined,\n        ].filter(Boolean) as string[]\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        return filterRows(preRowModel.rows, filterRowsImpl, table)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFacetedRowModel')\n    )\n}\n", "import { Table, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getFacetedUniqueValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => Map<any, number> {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return new Map()\n\n        let facetedUniqueValues = new Map<any, number>()\n\n        for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n          const values =\n            facetedRowModel.flatRows[i]!.getUniqueValues<number>(columnId)\n\n          for (let j = 0; j < values.length; j++) {\n            const value = values[j]!\n\n            if (facetedUniqueValues.has(value)) {\n              facetedUniqueValues.set(\n                value,\n                (facetedUniqueValues.get(value) ?? 0) + 1\n              )\n            } else {\n              facetedUniqueValues.set(value, 1)\n            }\n          }\n        }\n\n        return facetedUniqueValues\n      },\n      getMemoOptions(\n        table.options,\n        'debugTable',\n        `getFacetedUniqueValues_${columnId}`\n      )\n    )\n}\n", "import { ResolvedColumnFilter } from '../features/ColumnFiltering'\nimport { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFilteredRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n      ],\n      (rowModel, columnFilters, globalFilter) => {\n        if (\n          !rowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          for (let i = 0; i < rowModel.flatRows.length; i++) {\n            rowModel.flatRows[i]!.columnFilters = {}\n            rowModel.flatRows[i]!.columnFiltersMeta = {}\n          }\n          return rowModel\n        }\n\n        const resolvedColumnFilters: ResolvedColumnFilter<TData>[] = []\n        const resolvedGlobalFilters: ResolvedColumnFilter<TData>[] = []\n\n        ;(columnFilters ?? []).forEach(d => {\n          const column = table.getColumn(d.id)\n\n          if (!column) {\n            return\n          }\n\n          const filterFn = column.getFilterFn()\n\n          if (!filterFn) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                `Could not find a valid 'column.filterFn' for column with the ID: ${column.id}.`\n              )\n            }\n            return\n          }\n\n          resolvedColumnFilters.push({\n            id: d.id,\n            filterFn,\n            resolvedValue: filterFn.resolveFilterValue?.(d.value) ?? d.value,\n          })\n        })\n\n        const filterableIds = (columnFilters ?? []).map(d => d.id)\n\n        const globalFilterFn = table.getGlobalFilterFn()\n\n        const globallyFilterableColumns = table\n          .getAllLeafColumns()\n          .filter(column => column.getCanGlobalFilter())\n\n        if (\n          globalFilter &&\n          globalFilterFn &&\n          globallyFilterableColumns.length\n        ) {\n          filterableIds.push('__global__')\n\n          globallyFilterableColumns.forEach(column => {\n            resolvedGlobalFilters.push({\n              id: column.id,\n              filterFn: globalFilterFn,\n              resolvedValue:\n                globalFilterFn.resolveFilterValue?.(globalFilter) ??\n                globalFilter,\n            })\n          })\n        }\n\n        let currentColumnFilter\n        let currentGlobalFilter\n\n        // Flag the prefiltered row model with each filter state\n        for (let j = 0; j < rowModel.flatRows.length; j++) {\n          const row = rowModel.flatRows[j]!\n\n          row.columnFilters = {}\n\n          if (resolvedColumnFilters.length) {\n            for (let i = 0; i < resolvedColumnFilters.length; i++) {\n              currentColumnFilter = resolvedColumnFilters[i]!\n              const id = currentColumnFilter.id\n\n              // Tag the row with the column filter state\n              row.columnFilters[id] = currentColumnFilter.filterFn(\n                row,\n                id,\n                currentColumnFilter.resolvedValue,\n                filterMeta => {\n                  row.columnFiltersMeta[id] = filterMeta\n                }\n              )\n            }\n          }\n\n          if (resolvedGlobalFilters.length) {\n            for (let i = 0; i < resolvedGlobalFilters.length; i++) {\n              currentGlobalFilter = resolvedGlobalFilters[i]!\n              const id = currentGlobalFilter.id\n              // Tag the row with the first truthy global filter state\n              if (\n                currentGlobalFilter.filterFn(\n                  row,\n                  id,\n                  currentGlobalFilter.resolvedValue,\n                  filterMeta => {\n                    row.columnFiltersMeta[id] = filterMeta\n                  }\n                )\n              ) {\n                row.columnFilters.__global__ = true\n                break\n              }\n            }\n\n            if (row.columnFilters.__global__ !== true) {\n              row.columnFilters.__global__ = false\n            }\n          }\n        }\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        // Filter final rows using all of the active filters\n        return filterRows(rowModel.rows, filterRowsImpl, table)\n      },\n      getMemoOptions(table.options, 'debugTable', 'getFilteredRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n", "import { createRow } from '../core/row'\nimport { Row, RowData, RowModel, Table } from '../types'\nimport { flattenBy, getMemoOptions, memo } from '../utils'\nimport { GroupingState } from '../features/ColumnGrouping'\n\nexport function getGroupedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().grouping, table.getPreGroupedRowModel()],\n      (grouping, rowModel) => {\n        if (!rowModel.rows.length || !grouping.length) {\n          rowModel.rows.forEach(row => {\n            row.depth = 0\n            row.parentId = undefined\n          })\n          return rowModel\n        }\n\n        // Filter the grouping list down to columns that exist\n        const existingGrouping = grouping.filter(columnId =>\n          table.getColumn(columnId)\n        )\n\n        const groupedFlatRows: Row<TData>[] = []\n        const groupedRowsById: Record<string, Row<TData>> = {}\n        // const onlyGroupedFlatRows: Row[] = [];\n        // const onlyGroupedRowsById: Record<RowId, Row> = {};\n        // const nonGroupedFlatRows: Row[] = [];\n        // const nonGroupedRowsById: Record<RowId, Row> = {};\n\n        // Recursively group the data\n        const groupUpRecursively = (\n          rows: Row<TData>[],\n          depth = 0,\n          parentId?: string\n        ) => {\n          // Grouping depth has been been met\n          // Stop grouping and simply rewrite thd depth and row relationships\n          if (depth >= existingGrouping.length) {\n            return rows.map(row => {\n              row.depth = depth\n\n              groupedFlatRows.push(row)\n              groupedRowsById[row.id] = row\n\n              if (row.subRows) {\n                row.subRows = groupUpRecursively(row.subRows, depth + 1, row.id)\n              }\n\n              return row\n            })\n          }\n\n          const columnId: string = existingGrouping[depth]!\n\n          // Group the rows together for this level\n          const rowGroupsMap = groupBy(rows, columnId)\n\n          // Perform aggregations for each group\n          const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map(\n            ([groupingValue, groupedRows], index) => {\n              let id = `${columnId}:${groupingValue}`\n              id = parentId ? `${parentId}>${id}` : id\n\n              // First, Recurse to group sub rows before aggregation\n              const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n              subRows.forEach(subRow => {\n                subRow.parentId = id\n              })\n\n              // Flatten the leaf rows of the rows in this group\n              const leafRows = depth\n                ? flattenBy(groupedRows, row => row.subRows)\n                : groupedRows\n\n              const row = createRow(\n                table,\n                id,\n                leafRows[0]!.original,\n                index,\n                depth,\n                undefined,\n                parentId\n              )\n\n              Object.assign(row, {\n                groupingColumnId: columnId,\n                groupingValue,\n                subRows,\n                leafRows,\n                getValue: (columnId: string) => {\n                  // Don't aggregate columns that are in the grouping\n                  if (existingGrouping.includes(columnId)) {\n                    if (row._valuesCache.hasOwnProperty(columnId)) {\n                      return row._valuesCache[columnId]\n                    }\n\n                    if (groupedRows[0]) {\n                      row._valuesCache[columnId] =\n                        groupedRows[0].getValue(columnId) ?? undefined\n                    }\n\n                    return row._valuesCache[columnId]\n                  }\n\n                  if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n                    return row._groupingValuesCache[columnId]\n                  }\n\n                  // Aggregate the values\n                  const column = table.getColumn(columnId)\n                  const aggregateFn = column?.getAggregationFn()\n\n                  if (aggregateFn) {\n                    row._groupingValuesCache[columnId] = aggregateFn(\n                      columnId,\n                      leafRows,\n                      groupedRows\n                    )\n\n                    return row._groupingValuesCache[columnId]\n                  }\n                },\n              })\n\n              subRows.forEach(subRow => {\n                groupedFlatRows.push(subRow)\n                groupedRowsById[subRow.id] = subRow\n                // if (subRow.getIsGrouped?.()) {\n                //   onlyGroupedFlatRows.push(subRow);\n                //   onlyGroupedRowsById[subRow.id] = subRow;\n                // } else {\n                //   nonGroupedFlatRows.push(subRow);\n                //   nonGroupedRowsById[subRow.id] = subRow;\n                // }\n              })\n\n              return row\n            }\n          )\n\n          return aggregatedGroupedRows\n        }\n\n        const groupedRows = groupUpRecursively(rowModel.rows, 0)\n\n        groupedRows.forEach(subRow => {\n          groupedFlatRows.push(subRow)\n          groupedRowsById[subRow.id] = subRow\n          // if (subRow.getIsGrouped?.()) {\n          //   onlyGroupedFlatRows.push(subRow);\n          //   onlyGroupedRowsById[subRow.id] = subRow;\n          // } else {\n          //   nonGroupedFlatRows.push(subRow);\n          //   nonGroupedRowsById[subRow.id] = subRow;\n          // }\n        })\n\n        return {\n          rows: groupedRows,\n          flatRows: groupedFlatRows,\n          rowsById: groupedRowsById,\n        }\n      },\n      getMemoOptions(table.options, 'debugTable', 'getGroupedRowModel', () => {\n        table._queue(() => {\n          table._autoResetExpanded()\n          table._autoResetPageIndex()\n        })\n      })\n    )\n}\n\nfunction groupBy<TData extends RowData>(rows: Row<TData>[], columnId: string) {\n  const groupMap = new Map<any, Row<TData>[]>()\n\n  return rows.reduce((map, row) => {\n    const resKey = `${row.getGroupingValue(columnId)}`\n    const previous = map.get(resKey)\n    if (!previous) {\n      map.set(resKey, [row])\n    } else {\n      previous.push(row)\n    }\n    return map\n  }, groupMap)\n}\n", "import { Table, RowModel, Row, RowData } from '../types'\nimport { getMemoOptions, memo } from '../utils'\nimport { expandRows } from './getExpandedRowModel'\n\nexport function getPaginationRowModel<TData extends RowData>(opts?: {\n  initialSync: boolean\n}): (table: Table<TData>) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().pagination,\n        table.getPrePaginationRowModel(),\n        table.options.paginateExpandedRows\n          ? undefined\n          : table.getState().expanded,\n      ],\n      (pagination, rowModel) => {\n        if (!rowModel.rows.length) {\n          return rowModel\n        }\n\n        const { pageSize, pageIndex } = pagination\n        let { rows, flatRows, rowsById } = rowModel\n        const pageStart = pageSize * pageIndex\n        const pageEnd = pageStart + pageSize\n\n        rows = rows.slice(pageStart, pageEnd)\n\n        let paginatedRowModel: RowModel<TData>\n\n        if (!table.options.paginateExpandedRows) {\n          paginatedRowModel = expandRows({\n            rows,\n            flatRows,\n            rowsById,\n          })\n        } else {\n          paginatedRowModel = {\n            rows,\n            flatRows,\n            rowsById,\n          }\n        }\n\n        paginatedRowModel.flatRows = []\n\n        const handleRow = (row: Row<TData>) => {\n          paginatedRowModel.flatRows.push(row)\n          if (row.subRows.length) {\n            row.subRows.forEach(handleRow)\n          }\n        }\n\n        paginatedRowModel.rows.forEach(handleRow)\n\n        return paginatedRowModel\n      },\n      getMemoOptions(table.options, 'debugTable', 'getPaginationRowModel')\n    )\n}\n", "import { Table, Row, RowModel, RowData } from '../types'\nimport { SortingFn } from '../features/RowSorting'\nimport { getMemoOptions, memo } from '../utils'\n\nexport function getSortedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().sorting, table.getPreSortedRowModel()],\n      (sorting, rowModel) => {\n        if (!rowModel.rows.length || !sorting?.length) {\n          return rowModel\n        }\n\n        const sortingState = table.getState().sorting\n\n        const sortedFlatRows: Row<TData>[] = []\n\n        // Filter out sortings that correspond to non existing columns\n        const availableSorting = sortingState.filter(sort =>\n          table.getColumn(sort.id)?.getCanSort()\n        )\n\n        const columnInfoById: Record<\n          string,\n          {\n            sortUndefined?: false | -1 | 1 | 'first' | 'last'\n            invertSorting?: boolean\n            sortingFn: SortingFn<TData>\n          }\n        > = {}\n\n        availableSorting.forEach(sortEntry => {\n          const column = table.getColumn(sortEntry.id)\n          if (!column) return\n\n          columnInfoById[sortEntry.id] = {\n            sortUndefined: column.columnDef.sortUndefined,\n            invertSorting: column.columnDef.invertSorting,\n            sortingFn: column.getSortingFn(),\n          }\n        })\n\n        const sortData = (rows: Row<TData>[]) => {\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          const sortedData = rows.map(row => ({ ...row }))\n\n          sortedData.sort((rowA, rowB) => {\n            for (let i = 0; i < availableSorting.length; i += 1) {\n              const sortEntry = availableSorting[i]!\n              const columnInfo = columnInfoById[sortEntry.id]!\n              const sortUndefined = columnInfo.sortUndefined\n              const isDesc = sortEntry?.desc ?? false\n\n              let sortInt = 0\n\n              // All sorting ints should always return in ascending order\n              if (sortUndefined) {\n                const aValue = rowA.getValue(sortEntry.id)\n                const bValue = rowB.getValue(sortEntry.id)\n\n                const aUndefined = aValue === undefined\n                const bUndefined = bValue === undefined\n\n                if (aUndefined || bUndefined) {\n                  if (sortUndefined === 'first') return aUndefined ? -1 : 1\n                  if (sortUndefined === 'last') return aUndefined ? 1 : -1\n                  sortInt =\n                    aUndefined && bUndefined\n                      ? 0\n                      : aUndefined\n                        ? sortUndefined\n                        : -sortUndefined\n                }\n              }\n\n              if (sortInt === 0) {\n                sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id)\n              }\n\n              // If sorting is non-zero, take care of desc and inversion\n              if (sortInt !== 0) {\n                if (isDesc) {\n                  sortInt *= -1\n                }\n\n                if (columnInfo.invertSorting) {\n                  sortInt *= -1\n                }\n\n                return sortInt\n              }\n            }\n\n            return rowA.index - rowB.index\n          })\n\n          // If there are sub-rows, sort them\n          sortedData.forEach(row => {\n            sortedFlatRows.push(row)\n            if (row.subRows?.length) {\n              row.subRows = sortData(row.subRows)\n            }\n          })\n\n          return sortedData\n        }\n\n        return {\n          rows: sortData(rowModel.rows),\n          flatRows: sortedFlatRows,\n          rowsById: rowModel.rowsById,\n        }\n      },\n      getMemoOptions(table.options, 'debugTable', 'getSortedRowModel', () =>\n        table._autoResetPageIndex()\n      )\n    )\n}\n", "import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  TableOptions,\n  TableOptionsResolved,\n  RowData,\n  createTable,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> = React.ReactNode | React.ComponentType<TProps>\n\n//\n\n/**\n * If rendering headers, cells, or footers with custom markup, use flexRender instead of `cell.getValue()` or `cell.renderValue()`.\n */\nexport function flexRender<TProps extends object>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode | React.JSX.Element {\n  return !Comp ? null : isReactComponent<TProps>(Comp) ? (\n    <Comp {...props} />\n  ) : (\n    Comp\n  )\n}\n\nfunction isReactComponent<TProps>(\n  component: unknown\n): component is React.ComponentType<TProps> {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nexport function useReactTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  // Compose in the generic options to the user options\n  const resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...options,\n  }\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable<TData>(resolvedOptions),\n  }))\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return tableRef.current\n}\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/\n\nconst SWITCH_NAME = 'Switch';\n\ntype ScopedProps<P> = P & { __scopeSwitch?: Scope };\nconst [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\n\ntype SwitchContextValue = { checked: boolean; disabled?: boolean };\nconst [SwitchProvider, useSwitchContext] = createSwitchContext<SwitchContextValue>(SWITCH_NAME);\n\ntype SwitchElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SwitchProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  required?: boolean;\n  onCheckedChange?(checked: boolean): void;\n}\n\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>(\n  (props: ScopedProps<SwitchProps>, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? form || !!button.closest('form') : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME,\n    });\n\n    return (\n      <SwitchProvider scope={__scopeSwitch} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"switch\"\n          aria-checked={checked}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...switchProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if switch is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect switch updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <SwitchBubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            form={form}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </SwitchProvider>\n    );\n  }\n);\n\nSwitch.displayName = SWITCH_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SwitchThumb';\n\ntype SwitchThumbElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SwitchThumbProps extends PrimitiveSpanProps {}\n\nconst SwitchThumb = React.forwardRef<SwitchThumbElement, SwitchThumbProps>(\n  (props: ScopedProps<SwitchThumbProps>, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return (\n      <Primitive.span\n        data-state={getState(context.checked)}\n        data-disabled={context.disabled ? '' : undefined}\n        {...thumbProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSwitchThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SwitchBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'SwitchBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface SwitchBubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst SwitchBubbleInput = React.forwardRef<HTMLInputElement, SwitchBubbleInputProps>(\n  (\n    {\n      __scopeSwitch,\n      control,\n      checked,\n      bubbles = true,\n      ...props\n    }: ScopedProps<SwitchBubbleInputProps>,\n    forwardedRef\n  ) => {\n    const ref = React.useRef<HTMLInputElement>(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n\n    // Bubble checked change to parents (e.g form change event)\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        'checked'\n      ) as PropertyDescriptor;\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event('click', { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        aria-hidden\n        defaultChecked={checked}\n        {...props}\n        tabIndex={-1}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          ...controlSize,\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0,\n          margin: 0,\n        }}\n      />\n    );\n  }\n);\n\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Switch;\nconst Thumb = SwitchThumb;\n\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n};\nexport type { SwitchProps, SwitchThumbProps };\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VISUALLY_HIDDEN_STYLES } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value: string | undefined;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface ControlledClearableSelectProps {\n  value: string | undefined;\n  defaultValue?: never;\n  onValueChange: (value: string | undefined) => void;\n}\n\ninterface ControlledUnclearableSelectProps {\n  value: string;\n  defaultValue?: never;\n  onValueChange: (value: string) => void;\n}\n\ninterface UncontrolledSelectProps {\n  value?: never;\n  defaultValue?: string;\n  onValueChange?: {\n    (value: string): void;\n    (value: string | undefined): void;\n  };\n}\n\ntype SelectControlProps =\n  | ControlledClearableSelectProps\n  | ControlledUnclearableSelectProps\n  | UncontrolledSelectProps;\n\ninterface SelectSharedProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n  form?: string;\n}\n\n// TODO: Should improve typing somewhat, but this would be a breaking change.\n// Consider using in the next major version (along with some testing to be sure\n// it works as expected and doesn't cause problems)\ntype _FutureSelectProps = SelectSharedProps & SelectControlProps;\n\ntype SelectProps = SelectSharedProps & {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n};\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange as any,\n    caller: SELECT_NAME,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? form || !!trigger.closest('form') : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <SelectBubbleInput\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n            form={form}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </SelectBubbleInput>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = (pointerEvent?: React.MouseEvent | React.PointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY),\n        };\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n\n            // Open on click when using a touch or pen device\n            if (pointerTypeRef.current !== 'mouse') {\n              handleOpen(event);\n            }\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            pointerTypeRef.current = event.pointerType;\n\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click); also not for touch\n            // devices because that would open the menu on scroll. (pen devices behave as touch on iOS).\n            if (event.button === 0 && event.ctrlKey === false && event.pointerType === 'mouse') {\n              handleOpen(event);\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '\u25BC'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst Slot = createSlot('SelectContent.RemoveScroll');\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem =\n          items.length > 0 && selectedItem === items[items.length - 1]!.ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0]!.ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              // Viewport should only be scrollable in the vertical direction.\n              // This won't work in vertical writing modes, so we'll need to\n              // revisit this if/when that is supported\n              // https://developer.chrome.com/blog/vertical-form-controls\n              overflow: 'hidden auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onClick={composeEventHandlers(itemProps.onClick, () => {\n              // Open on click when using a touch or pen device\n              if (pointerTypeRef.current !== 'mouse') handleSelect();\n            })}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, () => {\n              // Using a mouse you should be able to do pointer down, move through\n              // the list, and release the pointer over the item to select it.\n              if (pointerTypeRef.current === 'mouse') handleSelect();\n            })}\n            onPointerDown={composeEventHandlers(itemProps.onPointerDown, (event) => {\n              pointerTypeRef.current = event.pointerType;\n            })}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              // Remember pointer type when sliding over to this item from another one\n              pointerTypeRef.current = event.pointerType;\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else if (pointerTypeRef.current === 'mouse') {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'SelectBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.select>;\ninterface SwitchBubbleInputProps extends InputProps {}\n\nconst SelectBubbleInput = React.forwardRef<HTMLSelectElement, SwitchBubbleInputProps>(\n  ({ __scopeSelect, value, ...props }: ScopedProps<SwitchBubbleInputProps>, forwardedRef) => {\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much as\n     * possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programmatically and bubble to any parent form `onChange`\n     * event. Adding the `value` will cause React to consider the programmatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use visually hidden styles rather than `display: \"none\"` because\n     * Safari autofill won't work otherwise.\n     */\n    return (\n      <Primitive.select\n        {...props}\n        style={{ ...VISUALLY_HIDDEN_STYLES, ...props.style }}\n        ref={composedRefs}\n        defaultValue={value}\n      />\n    );\n  }\n);\n\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0]! : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n", "function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Radio, RadioIndicator, createRadioScope } from './radio';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroup\n * -----------------------------------------------------------------------------------------------*/\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Scope };\nconst [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\nconst useRadioScope = createRadioScope();\n\ntype RadioGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value: string | null;\n  onValueChange(value: string): void;\n};\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupElement = React.ComponentRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RadioGroupProps extends PrimitiveDivProps {\n  name?: RadioGroupContextValue['name'];\n  required?: React.ComponentPropsWithoutRef<typeof Radio>['required'];\n  disabled?: React.ComponentPropsWithoutRef<typeof Radio>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string;\n  value?: string | null;\n  onValueChange?: RadioGroupContextValue['onValueChange'];\n}\n\nconst RadioGroup = React.forwardRef<RadioGroupElement, RadioGroupProps>(\n  (props: ScopedProps<RadioGroupProps>, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? null,\n      onChange: onValueChange as (value: string | null) => void,\n      caller: RADIO_GROUP_NAME,\n    });\n\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onValueChange={setValue}\n      >\n        <RovingFocusGroup.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"radiogroup\"\n            aria-required={required}\n            aria-orientation={orientation}\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocusGroup.Root>\n      </RadioGroupProvider>\n    );\n  }\n);\n\nRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RadioGroupItem';\n\ntype RadioGroupItemElement = React.ComponentRef<typeof Radio>;\ntype RadioProps = React.ComponentPropsWithoutRef<typeof Radio>;\ninterface RadioGroupItemProps extends Omit<RadioProps, 'onCheck' | 'name'> {\n  value: string;\n}\n\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React.useRef<React.ComponentRef<typeof Radio>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React.useRef(false);\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => (isArrowKeyPressedRef.current = false);\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n      };\n    }, []);\n\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!isDisabled}\n        active={checked}\n      >\n        <Radio\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...radioScope}\n          {...itemProps}\n          name={context.name}\n          ref={composedRefs}\n          onCheck={() => context.onValueChange(itemProps.value)}\n          onKeyDown={composeEventHandlers((event) => {\n            // According to WAI ARIA, radio groups don't activate items on enter keypress\n            if (event.key === 'Enter') event.preventDefault();\n          })}\n          onFocus={composeEventHandlers(itemProps.onFocus, () => {\n            /**\n             * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n             * and we need to \"check\" it in that case. We click it to \"check\" it (instead\n             * of updating `context.value`) so that the radio change event fires.\n             */\n            if (isArrowKeyPressedRef.current) ref.current?.click();\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nRadioGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioGroupIndicator';\n\ntype RadioGroupIndicatorElement = React.ComponentRef<typeof RadioIndicator>;\ntype RadioIndicatorProps = React.ComponentPropsWithoutRef<typeof RadioIndicator>;\ninterface RadioGroupIndicatorProps extends RadioIndicatorProps {}\n\nconst RadioGroupIndicator = React.forwardRef<RadioGroupIndicatorElement, RadioGroupIndicatorProps>(\n  (props: ScopedProps<RadioGroupIndicatorProps>, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return <RadioIndicator {...radioScope} {...indicatorProps} ref={forwardedRef} />;\n  }\n);\n\nRadioGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = RadioGroup;\nconst Item = RadioGroupItem;\nconst Indicator = RadioGroupIndicator;\n\nexport {\n  createRadioGroupScope,\n  //\n  RadioGroup,\n  RadioGroupItem,\n  RadioGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { RadioGroupProps, RadioGroupItemProps, RadioGroupIndicatorProps };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Radio\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_NAME = 'Radio';\n\ntype ScopedProps<P> = P & { __scopeRadio?: Scope };\nconst [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\n\ntype RadioContextValue = { checked: boolean; disabled?: boolean };\nconst [RadioProvider, useRadioContext] = createRadioContext<RadioContextValue>(RADIO_NAME);\n\ntype RadioElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface RadioProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  required?: boolean;\n  onCheck?(): void;\n}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>(\n  (props: ScopedProps<RadioProps>, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = 'on',\n      onCheck,\n      form,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? form || !!button.closest('form') : true;\n\n    return (\n      <RadioProvider scope={__scopeRadio} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"radio\"\n          aria-checked={checked}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...radioProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            // radios cannot be unchecked so we only communicate a checked state\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if radio is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect radio updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <RadioBubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            form={form}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </RadioProvider>\n    );\n  }\n);\n\nRadio.displayName = RADIO_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioIndicator';\n\ntype RadioIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\nexport interface RadioIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst RadioIndicator = React.forwardRef<RadioIndicatorElement, RadioIndicatorProps>(\n  (props: ScopedProps<RadioIndicatorProps>, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return (\n      <Presence present={forceMount || context.checked}>\n        <Primitive.span\n          data-state={getState(context.checked)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n        />\n      </Presence>\n    );\n  }\n);\n\nRadioIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'RadioBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface RadioBubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst RadioBubbleInput = React.forwardRef<HTMLInputElement, RadioBubbleInputProps>(\n  (\n    {\n      __scopeRadio,\n      control,\n      checked,\n      bubbles = true,\n      ...props\n    }: ScopedProps<RadioBubbleInputProps>,\n    forwardedRef\n  ) => {\n    const ref = React.useRef<HTMLInputElement>(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n\n    // Bubble checked change to parents (e.g form change event)\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        'checked'\n      ) as PropertyDescriptor;\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event('click', { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n\n    return (\n      <Primitive.input\n        type=\"radio\"\n        aria-hidden\n        defaultChecked={checked}\n        {...props}\n        tabIndex={-1}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          ...controlSize,\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0,\n          margin: 0,\n        }}\n      />\n    );\n  }\n);\n\nRadioBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nexport {\n  createRadioScope,\n  //\n  Radio,\n  RadioIndicator,\n};\nexport type { RadioProps };\n"],
  "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",
  "names": ["subscribe", "React", "value", "useState", "useLayoutEffect", "useEffect", "error", "import_jsx_runtime", "React", "import_jsx_runtime", "controlValidity", "id", "hasCustomError", "error", "Root", "Label", "React", "import_jsx_runtime", "disabled", "required", "value", "isFormControl", "reset", "input", "React", "import_jsx_runtime", "value", "TRIGGER_NAME", "disabled", "Root", "Content", "React", "import_jsx_runtime", "TRIGGER_NAME", "getState", "container", "CONTENT_NAME", "content", "Root", "Trigger", "Portal", "Content", "React", "import_jsx_runtime", "image", "Root", "React", "import_jsx_runtime", "TRIGGER_NAME", "trigger", "getState", "PORTAL_NAME", "PortalProvider", "usePortalContext", "container", "CONTENT_NAME", "Slot", "content", "CLOSE_NAME", "Root", "Trigger", "Portal", "Content", "Close", "Arrow", "functionalUpdate", "updater", "input", "makeStateUpdater", "key", "instance", "updater", "setState", "old", "functionalUpdate", "isFunction", "d", "Function", "isNumberArray", "Array", "isArray", "every", "val", "flattenBy", "arr", "getChildren", "flat", "recurse", "subArr", "forEach", "item", "push", "children", "length", "memo", "getDeps", "fn", "opts", "deps", "result", "depArgs", "depTime", "debug", "Date", "now", "newDeps", "depsChanged", "some", "dep", "index", "resultTime", "onChange", "depEndTime", "Math", "round", "resultEndTime", "resultFpsPercentage", "pad", "str", "num", "String", "console", "info", "max", "min", "getMemoOptions", "tableOptions", "debugLevel", "_tableOptions$debugAl", "debugAll", "createCell", "table", "row", "column", "columnId", "getRenderValue", "_cell$getValue", "cell", "getValue", "options", "renderFallbackValue", "id", "renderValue", "getContext", "_features", "feature", "createColumn", "columnDef", "depth", "parent", "_ref", "_resolvedColumnDef$id", "defaultColumn", "_getDefaultColumnDef", "resolvedColumnDef", "accessorKey", "prototype", "replaceAll", "replace", "undefined", "header", "accessorFn", "includes", "originalRow", "split", "_result", "warn", "process", "Error", "columns", "getFlatColumns", "_column$columns", "flatMap", "getLeafColumns", "_getOrderColumnsFn", "orderColumns", "_column$columns2", "leafColumns", "createHeader", "_options$id", "isPlaceholder", "placeholderId", "subHeaders", "colSpan", "rowSpan", "headerGroup", "getLeafHeaders", "leafHeaders", "recurseHeader", "h", "map", "Headers", "createTable", "getHeaderGroups", "getAllColumns", "getVisibleLeafColumns", "getState", "columnPinning", "left", "right", "allColumns", "_left$map$filter", "_right$map$filter", "leftColumns", "find", "filter", "Boolean", "rightColumns", "centerColumns", "headerGroups", "buildHeaderGroups", "getCenterHeaderGroups", "getLeftHeaderGroups", "_left$map$filter2", "orderedLeafColumns", "getRightHeaderGroups", "_right$map$filter2", "getFooterGroups", "reverse", "getLeftFooterGroups", "getCenterFooterGroups", "getRightFooterGroups", "getFlatHeaders", "headers", "getLeftFlatHeaders", "getCenterFlatHeaders", "getRightFlatHeaders", "getCenterLeafHeaders", "flatHeaders", "_header$subHeaders", "getLeftLeafHeaders", "_header$subHeaders2", "getRightLeafHeaders", "_header$subHeaders3", "center", "_left$0$headers", "_left$", "_center$0$headers", "_center$", "_right$0$headers", "_right$", "columnsToGroup", "headerFamily", "_headerGroups$0$heade", "_headerGroups$", "maxDepth", "findMaxDepth", "getIsVisible", "createHeaderGroup", "headersToGroup", "join", "pendingParentHeaders", "headerToGroup", "latestPendingParentHeader", "isLeafHeader", "bottomHeaders", "recurseHeadersForSpans", "filteredHeaders", "childRowSpans", "childColSpan", "childRowSpan", "minChildRowSpan", "createRow", "original", "rowIndex", "subRows", "parentId", "_valuesCache", "_uniqueValuesCache", "hasOwnProperty", "getColumn", "getUniqueValues", "_row$getValue", "getLeafRows", "getParentRow", "getRow", "getParentRows", "parentRows", "currentRow", "parentRow", "getAllCells", "getAllLeafColumns", "_getAllCellsByColumnId", "allCells", "reduce", "acc", "i", "ColumnFaceting", "_getFacetedRowModel", "getFacetedRowModel", "getPreFilteredRowModel", "_getFacetedUniqueValues", "getFacetedUniqueValues", "Map", "_getFacetedMinMaxValues", "getFacetedMinMaxValues", "includesString", "filterValue", "_filterValue$toString", "search", "toString", "toLowerCase", "autoRemove", "testFalsey", "includesStringSensitive", "_row$getValue2", "equalsString", "_row$getValue3", "arrIncludes", "_row$getValue4", "arrIncludesAll", "_row$getValue5", "arrIncludesSome", "_row$getValue6", "equals", "weakEquals", "inNumberRange", "rowValue", "resolveFilterValue", "unsafeMin", "unsafeMax", "parsedMin", "parseFloat", "parsedMax", "Number", "isNaN", "Infinity", "temp", "filterFns", "ColumnFiltering", "getDefaultColumnDef", "filterFn", "getInitialState", "state", "columnFilters", "getDefaultOptions", "onColumnFiltersChange", "filterFromLeafRows", "maxLeafRowFilterDepth", "getAutoFilterFn", "firstRow", "getCoreRowModel", "flatRows", "value", "getFilterFn", "_table$options$filter", "_table$options$filter2", "getCanFilter", "_column$columnDef$ena", "_table$options$enable", "_table$options$enable2", "enableColumnFilter", "enableColumnFilters", "enableFilters", "getIsFiltered", "getFilterIndex", "getFilterValue", "_table$getState$colum", "_table$getState$colum2", "_table$getState$colum3", "findIndex", "setFilterValue", "setColumnFilters", "previousFilter", "newFilter", "shouldAutoRemoveFilter", "_old$filter", "newFilterObj", "_old$map", "_table", "columnFiltersMeta", "updateFn", "_functionalUpdate", "resetColumnFilters", "defaultState", "_table$initialState$c", "_table$initialState", "initialState", "getFilteredRowModel", "_getFilteredRowModel", "manualFiltering", "sum", "_leafRows", "childRows", "next", "nextValue", "extent", "mean", "leafRows", "count", "median", "values", "mid", "floor", "nums", "sort", "a", "b", "unique", "from", "Set", "uniqueCount", "size", "_columnId", "aggregationFns", "ColumnGrouping", "aggregatedCell", "props", "_toString", "_props$getValue", "aggregationFn", "grouping", "onGroupingChange", "groupedColumnMode", "toggleGrouping", "setGrouping", "getCanGroup", "enableGrouping", "getGroupingValue", "getIsGrouped", "_table$getState$group", "getGroupedIndex", "_table$getState$group2", "indexOf", "getToggleGroupingHandler", "canGroup", "getAutoAggregationFn", "Object", "call", "getAggregationFn", "_table$options$aggreg", "_table$options$aggreg2", "resetGrouping", "_table$initialState$g", "getPreGroupedRowModel", "getGroupedRowModel", "_getGroupedRowModel", "manualGrouping", "groupingColumnId", "_groupingValuesCache", "getIsPlaceholder", "getIsAggregated", "_row$subRows", "nonGroupingColumns", "col", "groupingColumns", "g", "ColumnOrdering", "columnOrder", "onColumnOrderChange", "getIndex", "position", "_getVisibleLeafColumns", "getIsFirstColumn", "_columns$", "getIsLastColumn", "_columns", "setColumnOrder", "resetColumnOrder", "orderedColumns", "columnOrderCopy", "columnsCopy", "targetColumnId", "shift", "foundIndex", "splice", "getDefaultColumnPinningState", "ColumnPinning", "onColumnPinningChange", "pin", "columnIds", "setColumnPinning", "_old$left3", "_old$right3", "_old$left", "_old$right", "_old$left2", "_old$right2", "getCanPin", "_d$columnDef$enablePi", "enablePinning", "enableColumnPinning", "getIsPinned", "leafColumnIds", "isLeft", "isRight", "getPinnedIndex", "getCenterVisibleCells", "_getAllVisibleCells", "leftAndRight", "getLeftVisibleCells", "cells", "getRightVisibleCells", "resetColumnPinning", "getIsSomeColumnsPinned", "_pinningState$positio", "pinningState", "_pinningState$left", "_pinningState$right", "getLeftLeafColumns", "getRightLeafColumns", "getCenterLeafColumns", "safelyAccessDocument", "_document", "document", "defaultColumnSizing", "minSize", "maxSize", "MAX_SAFE_INTEGER", "getDefaultColumnSizingInfoState", "startOffset", "startSize", "deltaOffset", "deltaPercentage", "isResizingColumn", "columnSizingStart", "ColumnSizing", "columnSizing", "columnSizingInfo", "columnResizeMode", "columnResizeDirection", "onColumnSizingChange", "onColumnSizingInfoChange", "getSize", "_column$columnDef$min", "_column$columnDef$max", "columnSize", "getStart", "slice", "getAfter", "resetSize", "setColumnSizing", "_ref2", "_", "rest", "getCanResize", "enableResizing", "enableColumnResizing", "getIsResizing", "_header$column$getSiz", "prevSiblingHeader", "getResizeHandler", "_contextDocument", "canResize", "e", "persist", "isTouchStartEvent", "touches", "clientX", "newColumnSizing", "updateOffset", "eventType", "clientXPos", "setColumnSizingInfo", "_old$startOffset", "_old$startSize", "deltaDirection", "_ref3", "headerSize", "onMove", "onEnd", "contextDocument", "mouseEvents", "moveHandler", "upHandler", "removeEventListener", "touchEvents", "cancelable", "preventDefault", "stopPropagation", "_e$touches$", "passiveIfSupported", "passiveEventSupported", "passive", "addEventListener", "resetColumnSizing", "resetHeaderSizeInfo", "_table$initialState$c2", "getTotalSize", "_table$getHeaderGroup", "_table$getHeaderGroup2", "getLeftTotalSize", "_table$getLeftHeaderG", "_table$getLeftHeaderG2", "getCenterTotalSize", "_table$getCenterHeade", "_table$getCenterHeade2", "getRightTotalSize", "_table$getRightHeader", "_table$getRightHeader2", "passiveSupported", "supported", "noop", "window", "err", "type", "ColumnVisibility", "columnVisibility", "onColumnVisibilityChange", "toggleVisibility", "getCanHide", "setColumnVisibility", "childColumns", "c", "enableHiding", "getToggleVisibilityHandler", "target", "checked", "getVisibleCells", "makeVisibleColumnsMethod", "getColumns", "getVisibleFlatColumns", "getAllFlatColumns", "getLeftVisibleLeafColumns", "getRightVisibleLeafColumns", "getCenterVisibleLeafColumns", "resetColumnVisibility", "toggleAllColumnsVisible", "_value", "getIsAllColumnsVisible", "obj", "getIsSomeColumnsVisible", "getToggleAllColumnsVisibilityHandler", "_target", "GlobalFaceting", "_getGlobalFacetedRowModel", "getGlobalFacetedRowModel", "_getGlobalFacetedUniqueValues", "getGlobalFacetedUniqueValues", "_getGlobalFacetedMinMaxValues", "getGlobalFacetedMinMaxValues", "GlobalFiltering", "globalFilter", "onGlobalFilterChange", "globalFilterFn", "getColumnCanGlobalFilter", "_table$getCoreRowMode", "getCanGlobalFilter", "_table$options$getCol", "enableGlobalFilter", "getGlobalAutoFilterFn", "getGlobalFilterFn", "setGlobalFilter", "resetGlobalFilter", "RowExpanding", "expanded", "onExpandedChange", "paginateExpandedRows", "registered", "queued", "_autoResetExpanded", "_table$options$autoRe", "_queue", "autoResetAll", "autoResetExpanded", "manualExpanding", "resetExpanded", "setExpanded", "toggleAllRowsExpanded", "getIsAllRowsExpanded", "_table$initialState$e", "getCanSomeRowsExpand", "getPrePaginationRowModel", "getCanExpand", "getToggleAllRowsExpandedHandler", "getIsSomeRowsExpanded", "keys", "getRowModel", "getIsExpanded", "getExpandedDepth", "rowIds", "rowsById", "splitId", "getPreExpandedRowModel", "getSortedRowModel", "getExpandedRowModel", "_getExpandedRowModel", "toggleExpanded", "_expanded", "exists", "oldExpanded", "rowId", "_table$options$getIsR", "getIsRowExpanded", "_table$options$getRow", "getRowCanExpand", "enableExpanding", "getIsAllParentsExpanded", "isFullyExpanded", "getToggleExpandedHandler", "canExpand", "defaultPageIndex", "defaultPageSize", "getDefaultPaginationState", "pageIndex", "pageSize", "RowPagination", "pagination", "onPaginationChange", "_autoResetPageIndex", "autoResetPageIndex", "manualPagination", "resetPageIndex", "setPagination", "safeUpdater", "newState", "resetPagination", "_table$initialState$p", "setPageIndex", "maxPageIndex", "pageCount", "_table$initialState$p2", "resetPageSize", "_table$initialState$p3", "_table$initialState2", "setPageSize", "topRowIndex", "setPageCount", "_table$options$pageCo", "newPageCount", "getPageOptions", "getPageCount", "pageOptions", "fill", "getCanPreviousPage", "getCanNextPage", "previousPage", "nextPage", "firstPage", "lastPage", "getPaginationRowModel", "_getPaginationRowModel", "_table$options$pageCo2", "ceil", "getRowCount", "_table$options$rowCou", "rowCount", "rows", "getDefaultRowPinningState", "top", "bottom", "RowPinning", "rowPinning", "onRowPinningChange", "includeLeafRows", "includeParentRows", "leafRowIds", "parentRowIds", "setRowPinning", "_old$top3", "_old$bottom3", "_old$top", "_old$bottom", "has", "_old$top2", "_old$bottom2", "enableRowPinning", "isTop", "isBottom", "_ref4", "_visiblePinnedRowIds$", "visiblePinnedRowIds", "getTopRows", "getBottomRows", "_ref5", "resetRowPinning", "_table$initialState$r", "getIsSomeRowsPinned", "_pinningState$top", "_pinningState$bottom", "_getPinnedRows", "visibleRows", "pinnedRowIds", "_table$options$keepPi", "keepPinnedRows", "allRows", "topPinnedRowIds", "bottomPinnedRowIds", "getCenterRows", "topAndBottom", "RowSelection", "rowSelection", "onRowSelectionChange", "enableRowSelection", "enableMultiRowSelection", "enableSubRowSelection", "setRowSelection", "resetRowSelection", "toggleAllRowsSelected", "getIsAllRowsSelected", "preGroupedFlatRows", "getCanSelect", "toggleAllPageRowsSelected", "resolvedValue", "getIsAllPageRowsSelected", "mutateRowIsSelected", "getPreSelectedRowModel", "getSelectedRowModel", "rowModel", "selectRowsFn", "getFilteredSelectedRowModel", "getGroupedSelectedRowModel", "isAllRowsSelected", "paginationFlatRows", "isAllPageRowsSelected", "getIsSomeRowsSelected", "_table$getState$rowSe", "totalSelected", "getIsSomePageRowsSelected", "getIsSelected", "getIsSomeSelected", "getToggleAllRowsSelectedHandler", "getToggleAllPageRowsSelectedHandler", "toggleSelected", "isSelected", "_opts$selectChildren", "selectedRowIds", "selectChildren", "isRowSelected", "isSubRowSelected", "getIsAllSubRowsSelected", "getCanSelectSubRows", "getCanMultiSelect", "_table$options$enable3", "getToggleSelectedHandler", "canSelect", "includeChildren", "newSelectedFlatRows", "newSelectedRowsById", "recurseRows", "_row$subRows2", "selection", "_selection$row$id", "_row$subRows3", "allChildrenSelected", "someSelected", "subRow", "subRowChildrenSelected", "reSplitAlphaNumeric", "alphanumeric", "rowA", "rowB", "compareAlphanumeric", "alphanumericCaseSensitive", "text", "compareBasic", "textCaseSensitive", "datetime", "basic", "aStr", "bStr", "aa", "bb", "an", "parseInt", "bn", "combo", "sortingFns", "RowSorting", "sorting", "sortingFn", "sortUndefined", "onSortingChange", "isMultiSortEvent", "shiftKey", "getAutoSortingFn", "firstRows", "isString", "getAutoSortDir", "getSortingFn", "_table$options$sortin", "_table$options$sortin2", "toggleSorting", "desc", "multi", "nextSortingOrder", "getNextSortingOrder", "hasManualValue", "setSorting", "existingSorting", "existingIndex", "newSorting", "sortAction", "nextDesc", "getCanMultiSort", "_table$options$maxMul", "maxMultiSortColCount", "getFirstSortDir", "_column$columnDef$sor", "sortDescFirst", "firstSortDirection", "isSorted", "getIsSorted", "enableSortingRemoval", "enableMultiRemove", "getCanSort", "enableSorting", "_column$columnDef$ena2", "enableMultiSort", "_table$getState$sorti", "columnSort", "getSortIndex", "_table$getState$sorti2", "_table$getState$sorti3", "clearSorting", "getToggleSortingHandler", "canSort", "resetSorting", "_table$initialState$s", "getPreSortedRowModel", "_getSortedRowModel", "manualSorting", "builtInFeatures", "_options$_features", "_options$initialState", "debugTable", "defaultOptions", "assign", "mergeOptions", "coreInitialState", "_feature$getInitialSt", "queuedTimeout", "coreInstance", "cb", "Promise", "resolve", "then", "catch", "error", "setTimeout", "reset", "setOptions", "newOptions", "onStateChange", "_getRowId", "getRowId", "_getCoreRowModel", "searchAll", "_defaultColumn", "_props$renderValue$to", "_props$renderValue", "_getColumnDefs", "columnDefs", "recurseColumns", "groupingColumnDef", "_getAllFlatColumnsById", "flatColumns", "data", "accessRows", "originalRows", "getSubRows", "_row$originalSubRows", "originalSubRows", "expandRows", "rowModel", "expandedRows", "handleRow", "row", "_row$subRows", "push", "subRows", "length", "getIsExpanded", "forEach", "rows", "flatRows", "rowsById", "filterRows", "rows", "filterRowImpl", "table", "options", "filterFromLeafRows", "filterRowModelFromLeafs", "filterRowModelFromRoot", "rowsToFilter", "filterRow", "_table$options$maxLea", "newFilteredFlatRows", "newFilteredRowsById", "maxDepth", "maxLeafRowFilterDepth", "recurseFilterRows", "depth", "i", "length", "_row$subRows", "row", "newRow", "createRow", "id", "original", "index", "undefined", "parentId", "columnFilters", "subRows", "push", "flatRows", "rowsById", "_table$options$maxLea2", "pass", "_row$subRows2", "getFilteredRowModel", "table", "memo", "getPreFilteredRowModel", "getState", "columnFilters", "globalFilter", "rowModel", "rows", "length", "i", "flatRows", "columnFiltersMeta", "resolvedColumnFilters", "resolvedGlobalFilters", "forEach", "d", "_filterFn$resolveFilt", "column", "getColumn", "id", "filterFn", "getFilterFn", "process", "console", "warn", "push", "resolvedValue", "resolveFilterValue", "value", "filterableIds", "map", "globalFilterFn", "getGlobalFilterFn", "globallyFilterableColumns", "getAllLeafColumns", "filter", "getCanGlobalFilter", "_globalFilterFn$resol", "currentColumnFilter", "currentGlobalFilter", "j", "row", "filterMeta", "__global__", "filterRowsImpl", "filterRows", "getMemoOptions", "options", "_autoResetPageIndex", "getPaginationRowModel", "opts", "table", "memo", "getState", "pagination", "getPrePaginationRowModel", "options", "paginateExpandedRows", "undefined", "expanded", "rowModel", "rows", "length", "pageSize", "pageIndex", "flatRows", "rowsById", "pageStart", "pageEnd", "slice", "paginatedRowModel", "expandRows", "handleRow", "row", "push", "subRows", "forEach", "getMemoOptions", "getSortedRowModel", "sorting", "getPreSortedRowModel", "sortingState", "sortedFlatRows", "availableSorting", "filter", "sort", "_table$getColumn", "getColumn", "id", "getCanSort", "columnInfoById", "sortEntry", "column", "sortUndefined", "columnDef", "invertSorting", "sortingFn", "getSortingFn", "sortData", "sortedData", "map", "rowA", "rowB", "i", "_sortEntry$desc", "columnInfo", "isDesc", "desc", "sortInt", "aValue", "getValue", "bValue", "aUndefined", "bUndefined", "index", "_row$subRows", "_autoResetPageIndex", "flexRender", "Comp", "props", "isReactComponent", "createElement", "component", "isClassComponent", "isExoticComponent", "proto", "Object", "getPrototypeOf", "prototype", "$$typeof", "includes", "description", "useReactTable", "options", "resolvedOptions", "state", "onStateChange", "renderFallbackValue", "tableRef", "useState", "current", "createTable", "setState", "initialState", "setOptions", "prev", "updater", "React", "import_jsx_runtime", "required", "disabled", "value", "button", "isFormControl", "getState", "BUBBLE_INPUT_NAME", "input", "Root", "React", "value", "min", "max", "import_jsx_runtime", "usePopperScope", "disabled", "required", "trigger", "value", "isFormControl", "option", "TRIGGER_NAME", "item", "PORTAL_NAME", "CONTENT_NAME", "Slot", "content", "viewport", "LABEL_NAME", "handleScroll", "canScrollUp", "canScrollDown", "ARROW_NAME", "BUBBLE_INPUT_NAME", "select", "Root", "Trigger", "Portal", "Content", "Item", "React2", "React", "import_jsx_runtime", "required", "disabled", "value", "button", "isFormControl", "getState", "INDICATOR_NAME", "BUBBLE_INPUT_NAME", "input", "createContextScope", "useRovingFocusGroupScope", "jsx", "Primitive", "ITEM_NAME", "useComposedRefs", "composeEventHandlers", "Root", "Item", "Root", "Label", "Checkbox", "RadioGroup", "Root2", "Item2", "Tabs", "count7", "React__default__default", "TabsList", "TabsContent", "TabsTrigger", "Content", "useComposedRefs", "useCallbackRef", "useControllableState", "Overlay", "Portal", "count", "Avatar", "Popover", "Trigger", "Content2", "PopoverTrigger", "PopoverContent", "PopoverArrow", "PopoverClose", "Close", "Switch", "Select", "Item"]
}
